// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: service_socialnetwork.proto
// Original file comments:
// *
// e8yes demo web server.
//
// <p>Copyright (C) 2020 Chifeng Wen {daviesx66@gmail.com}
//
// <p>This program is free software: you can redistribute it and/or modify it under the terms of the
// GNU General Public License as published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// <p>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
// without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.
//
// <p>You should have received a copy of the GNU General Public License along with this program. If
// not, see <http://www.gnu.org/licenses/>.
//
#ifndef GRPC_service_5fsocialnetwork_2eproto__INCLUDED
#define GRPC_service_5fsocialnetwork_2eproto__INCLUDED

#include "service_socialnetwork.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace grpc {
class CompletionQueue;
class Channel;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc

namespace e8 {

class SocialNetworkService final {
 public:
  static constexpr char const* service_full_name() {
    return "e8.SocialNetworkService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // *
    // Send a friend request invitation to another user and the logged-in user is the inviter.
    virtual ::grpc::Status SendInvitation(::grpc::ClientContext* context, const ::e8::SendInvitationRequest& request, ::e8::SendInvitationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::SendInvitationResponse>> AsyncSendInvitation(::grpc::ClientContext* context, const ::e8::SendInvitationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::SendInvitationResponse>>(AsyncSendInvitationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::SendInvitationResponse>> PrepareAsyncSendInvitation(::grpc::ClientContext* context, const ::e8::SendInvitationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::SendInvitationResponse>>(PrepareAsyncSendInvitationRaw(context, request, cq));
    }
    // *
    // Delete invitation previously sent where the logged-in user is inviter.
    virtual ::grpc::Status DeleteInvitation(::grpc::ClientContext* context, const ::e8::DeleteInvitationRequest& request, ::e8::DeleteInvitationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::DeleteInvitationResponse>> AsyncDeleteInvitation(::grpc::ClientContext* context, const ::e8::DeleteInvitationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::DeleteInvitationResponse>>(AsyncDeleteInvitationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::DeleteInvitationResponse>> PrepareAsyncDeleteInvitation(::grpc::ClientContext* context, const ::e8::DeleteInvitationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::DeleteInvitationResponse>>(PrepareAsyncDeleteInvitationRaw(context, request, cq));
    }
    // *
    // Accept an invitation to establish friend relation where the logged-in user is the invitee.
    virtual ::grpc::Status AcceptInvitation(::grpc::ClientContext* context, const ::e8::AcceptInvitationRequest& request, ::e8::AcceptInvitationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::AcceptInvitationResponse>> AsyncAcceptInvitation(::grpc::ClientContext* context, const ::e8::AcceptInvitationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::AcceptInvitationResponse>>(AsyncAcceptInvitationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::AcceptInvitationResponse>> PrepareAsyncAcceptInvitation(::grpc::ClientContext* context, const ::e8::AcceptInvitationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::AcceptInvitationResponse>>(PrepareAsyncAcceptInvitationRaw(context, request, cq));
    }
    // *
    // Reject an invitation where the logged-in user is the invitee.
    virtual ::grpc::Status RejectInvitation(::grpc::ClientContext* context, const ::e8::RejectInvitationRequest& request, ::e8::RejectInvitationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::RejectInvitationResponse>> AsyncRejectInvitation(::grpc::ClientContext* context, const ::e8::RejectInvitationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::RejectInvitationResponse>>(AsyncRejectInvitationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::RejectInvitationResponse>> PrepareAsyncRejectInvitation(::grpc::ClientContext* context, const ::e8::RejectInvitationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::RejectInvitationResponse>>(PrepareAsyncRejectInvitationRaw(context, request, cq));
    }
    // *
    // Get the friend invitation list where the logged-in user is the invitee.
    virtual ::grpc::Status GetInvitationList(::grpc::ClientContext* context, const ::e8::GetInvitationListRequest& request, ::e8::GetInvitationListResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::GetInvitationListResponse>> AsyncGetInvitationList(::grpc::ClientContext* context, const ::e8::GetInvitationListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::GetInvitationListResponse>>(AsyncGetInvitationListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::GetInvitationListResponse>> PrepareAsyncGetInvitationList(::grpc::ClientContext* context, const ::e8::GetInvitationListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::GetInvitationListResponse>>(PrepareAsyncGetInvitationListRaw(context, request, cq));
    }
    // *
    // Delete a friend relation for the logged-in user.
    virtual ::grpc::Status DeleteFriend(::grpc::ClientContext* context, const ::e8::DeleteFriendRequest& request, ::e8::DeleteFriendResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::DeleteFriendResponse>> AsyncDeleteFriend(::grpc::ClientContext* context, const ::e8::DeleteFriendRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::DeleteFriendResponse>>(AsyncDeleteFriendRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::DeleteFriendResponse>> PrepareAsyncDeleteFriend(::grpc::ClientContext* context, const ::e8::DeleteFriendRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::DeleteFriendResponse>>(PrepareAsyncDeleteFriendRaw(context, request, cq));
    }
    // *
    // Get the friend list of the logged-in user.
    virtual ::grpc::Status GetFriendList(::grpc::ClientContext* context, const ::e8::GetFriendListRequest& request, ::e8::GetFriendListResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::GetFriendListResponse>> AsyncGetFriendList(::grpc::ClientContext* context, const ::e8::GetFriendListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::GetFriendListResponse>>(AsyncGetFriendListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::GetFriendListResponse>> PrepareAsyncGetFriendList(::grpc::ClientContext* context, const ::e8::GetFriendListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::GetFriendListResponse>>(PrepareAsyncGetFriendListRaw(context, request, cq));
    }
    class experimental_async_interface {
     public:
      virtual ~experimental_async_interface() {}
      // *
      // Send a friend request invitation to another user and the logged-in user is the inviter.
      virtual void SendInvitation(::grpc::ClientContext* context, const ::e8::SendInvitationRequest* request, ::e8::SendInvitationResponse* response, std::function<void(::grpc::Status)>) = 0;
      // *
      // Delete invitation previously sent where the logged-in user is inviter.
      virtual void DeleteInvitation(::grpc::ClientContext* context, const ::e8::DeleteInvitationRequest* request, ::e8::DeleteInvitationResponse* response, std::function<void(::grpc::Status)>) = 0;
      // *
      // Accept an invitation to establish friend relation where the logged-in user is the invitee.
      virtual void AcceptInvitation(::grpc::ClientContext* context, const ::e8::AcceptInvitationRequest* request, ::e8::AcceptInvitationResponse* response, std::function<void(::grpc::Status)>) = 0;
      // *
      // Reject an invitation where the logged-in user is the invitee.
      virtual void RejectInvitation(::grpc::ClientContext* context, const ::e8::RejectInvitationRequest* request, ::e8::RejectInvitationResponse* response, std::function<void(::grpc::Status)>) = 0;
      // *
      // Get the friend invitation list where the logged-in user is the invitee.
      virtual void GetInvitationList(::grpc::ClientContext* context, const ::e8::GetInvitationListRequest* request, ::e8::GetInvitationListResponse* response, std::function<void(::grpc::Status)>) = 0;
      // *
      // Delete a friend relation for the logged-in user.
      virtual void DeleteFriend(::grpc::ClientContext* context, const ::e8::DeleteFriendRequest* request, ::e8::DeleteFriendResponse* response, std::function<void(::grpc::Status)>) = 0;
      // *
      // Get the friend list of the logged-in user.
      virtual void GetFriendList(::grpc::ClientContext* context, const ::e8::GetFriendListRequest* request, ::e8::GetFriendListResponse* response, std::function<void(::grpc::Status)>) = 0;
    };
    virtual class experimental_async_interface* experimental_async() { return nullptr; }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::e8::SendInvitationResponse>* AsyncSendInvitationRaw(::grpc::ClientContext* context, const ::e8::SendInvitationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::e8::SendInvitationResponse>* PrepareAsyncSendInvitationRaw(::grpc::ClientContext* context, const ::e8::SendInvitationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::e8::DeleteInvitationResponse>* AsyncDeleteInvitationRaw(::grpc::ClientContext* context, const ::e8::DeleteInvitationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::e8::DeleteInvitationResponse>* PrepareAsyncDeleteInvitationRaw(::grpc::ClientContext* context, const ::e8::DeleteInvitationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::e8::AcceptInvitationResponse>* AsyncAcceptInvitationRaw(::grpc::ClientContext* context, const ::e8::AcceptInvitationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::e8::AcceptInvitationResponse>* PrepareAsyncAcceptInvitationRaw(::grpc::ClientContext* context, const ::e8::AcceptInvitationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::e8::RejectInvitationResponse>* AsyncRejectInvitationRaw(::grpc::ClientContext* context, const ::e8::RejectInvitationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::e8::RejectInvitationResponse>* PrepareAsyncRejectInvitationRaw(::grpc::ClientContext* context, const ::e8::RejectInvitationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::e8::GetInvitationListResponse>* AsyncGetInvitationListRaw(::grpc::ClientContext* context, const ::e8::GetInvitationListRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::e8::GetInvitationListResponse>* PrepareAsyncGetInvitationListRaw(::grpc::ClientContext* context, const ::e8::GetInvitationListRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::e8::DeleteFriendResponse>* AsyncDeleteFriendRaw(::grpc::ClientContext* context, const ::e8::DeleteFriendRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::e8::DeleteFriendResponse>* PrepareAsyncDeleteFriendRaw(::grpc::ClientContext* context, const ::e8::DeleteFriendRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::e8::GetFriendListResponse>* AsyncGetFriendListRaw(::grpc::ClientContext* context, const ::e8::GetFriendListRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::e8::GetFriendListResponse>* PrepareAsyncGetFriendListRaw(::grpc::ClientContext* context, const ::e8::GetFriendListRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status SendInvitation(::grpc::ClientContext* context, const ::e8::SendInvitationRequest& request, ::e8::SendInvitationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::SendInvitationResponse>> AsyncSendInvitation(::grpc::ClientContext* context, const ::e8::SendInvitationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::SendInvitationResponse>>(AsyncSendInvitationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::SendInvitationResponse>> PrepareAsyncSendInvitation(::grpc::ClientContext* context, const ::e8::SendInvitationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::SendInvitationResponse>>(PrepareAsyncSendInvitationRaw(context, request, cq));
    }
    ::grpc::Status DeleteInvitation(::grpc::ClientContext* context, const ::e8::DeleteInvitationRequest& request, ::e8::DeleteInvitationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::DeleteInvitationResponse>> AsyncDeleteInvitation(::grpc::ClientContext* context, const ::e8::DeleteInvitationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::DeleteInvitationResponse>>(AsyncDeleteInvitationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::DeleteInvitationResponse>> PrepareAsyncDeleteInvitation(::grpc::ClientContext* context, const ::e8::DeleteInvitationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::DeleteInvitationResponse>>(PrepareAsyncDeleteInvitationRaw(context, request, cq));
    }
    ::grpc::Status AcceptInvitation(::grpc::ClientContext* context, const ::e8::AcceptInvitationRequest& request, ::e8::AcceptInvitationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::AcceptInvitationResponse>> AsyncAcceptInvitation(::grpc::ClientContext* context, const ::e8::AcceptInvitationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::AcceptInvitationResponse>>(AsyncAcceptInvitationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::AcceptInvitationResponse>> PrepareAsyncAcceptInvitation(::grpc::ClientContext* context, const ::e8::AcceptInvitationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::AcceptInvitationResponse>>(PrepareAsyncAcceptInvitationRaw(context, request, cq));
    }
    ::grpc::Status RejectInvitation(::grpc::ClientContext* context, const ::e8::RejectInvitationRequest& request, ::e8::RejectInvitationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::RejectInvitationResponse>> AsyncRejectInvitation(::grpc::ClientContext* context, const ::e8::RejectInvitationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::RejectInvitationResponse>>(AsyncRejectInvitationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::RejectInvitationResponse>> PrepareAsyncRejectInvitation(::grpc::ClientContext* context, const ::e8::RejectInvitationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::RejectInvitationResponse>>(PrepareAsyncRejectInvitationRaw(context, request, cq));
    }
    ::grpc::Status GetInvitationList(::grpc::ClientContext* context, const ::e8::GetInvitationListRequest& request, ::e8::GetInvitationListResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::GetInvitationListResponse>> AsyncGetInvitationList(::grpc::ClientContext* context, const ::e8::GetInvitationListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::GetInvitationListResponse>>(AsyncGetInvitationListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::GetInvitationListResponse>> PrepareAsyncGetInvitationList(::grpc::ClientContext* context, const ::e8::GetInvitationListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::GetInvitationListResponse>>(PrepareAsyncGetInvitationListRaw(context, request, cq));
    }
    ::grpc::Status DeleteFriend(::grpc::ClientContext* context, const ::e8::DeleteFriendRequest& request, ::e8::DeleteFriendResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::DeleteFriendResponse>> AsyncDeleteFriend(::grpc::ClientContext* context, const ::e8::DeleteFriendRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::DeleteFriendResponse>>(AsyncDeleteFriendRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::DeleteFriendResponse>> PrepareAsyncDeleteFriend(::grpc::ClientContext* context, const ::e8::DeleteFriendRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::DeleteFriendResponse>>(PrepareAsyncDeleteFriendRaw(context, request, cq));
    }
    ::grpc::Status GetFriendList(::grpc::ClientContext* context, const ::e8::GetFriendListRequest& request, ::e8::GetFriendListResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::GetFriendListResponse>> AsyncGetFriendList(::grpc::ClientContext* context, const ::e8::GetFriendListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::GetFriendListResponse>>(AsyncGetFriendListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::GetFriendListResponse>> PrepareAsyncGetFriendList(::grpc::ClientContext* context, const ::e8::GetFriendListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::GetFriendListResponse>>(PrepareAsyncGetFriendListRaw(context, request, cq));
    }
    class experimental_async final :
      public StubInterface::experimental_async_interface {
     public:
      void SendInvitation(::grpc::ClientContext* context, const ::e8::SendInvitationRequest* request, ::e8::SendInvitationResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteInvitation(::grpc::ClientContext* context, const ::e8::DeleteInvitationRequest* request, ::e8::DeleteInvitationResponse* response, std::function<void(::grpc::Status)>) override;
      void AcceptInvitation(::grpc::ClientContext* context, const ::e8::AcceptInvitationRequest* request, ::e8::AcceptInvitationResponse* response, std::function<void(::grpc::Status)>) override;
      void RejectInvitation(::grpc::ClientContext* context, const ::e8::RejectInvitationRequest* request, ::e8::RejectInvitationResponse* response, std::function<void(::grpc::Status)>) override;
      void GetInvitationList(::grpc::ClientContext* context, const ::e8::GetInvitationListRequest* request, ::e8::GetInvitationListResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteFriend(::grpc::ClientContext* context, const ::e8::DeleteFriendRequest* request, ::e8::DeleteFriendResponse* response, std::function<void(::grpc::Status)>) override;
      void GetFriendList(::grpc::ClientContext* context, const ::e8::GetFriendListRequest* request, ::e8::GetFriendListResponse* response, std::function<void(::grpc::Status)>) override;
     private:
      friend class Stub;
      explicit experimental_async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class experimental_async_interface* experimental_async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class experimental_async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::e8::SendInvitationResponse>* AsyncSendInvitationRaw(::grpc::ClientContext* context, const ::e8::SendInvitationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::e8::SendInvitationResponse>* PrepareAsyncSendInvitationRaw(::grpc::ClientContext* context, const ::e8::SendInvitationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::e8::DeleteInvitationResponse>* AsyncDeleteInvitationRaw(::grpc::ClientContext* context, const ::e8::DeleteInvitationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::e8::DeleteInvitationResponse>* PrepareAsyncDeleteInvitationRaw(::grpc::ClientContext* context, const ::e8::DeleteInvitationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::e8::AcceptInvitationResponse>* AsyncAcceptInvitationRaw(::grpc::ClientContext* context, const ::e8::AcceptInvitationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::e8::AcceptInvitationResponse>* PrepareAsyncAcceptInvitationRaw(::grpc::ClientContext* context, const ::e8::AcceptInvitationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::e8::RejectInvitationResponse>* AsyncRejectInvitationRaw(::grpc::ClientContext* context, const ::e8::RejectInvitationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::e8::RejectInvitationResponse>* PrepareAsyncRejectInvitationRaw(::grpc::ClientContext* context, const ::e8::RejectInvitationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::e8::GetInvitationListResponse>* AsyncGetInvitationListRaw(::grpc::ClientContext* context, const ::e8::GetInvitationListRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::e8::GetInvitationListResponse>* PrepareAsyncGetInvitationListRaw(::grpc::ClientContext* context, const ::e8::GetInvitationListRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::e8::DeleteFriendResponse>* AsyncDeleteFriendRaw(::grpc::ClientContext* context, const ::e8::DeleteFriendRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::e8::DeleteFriendResponse>* PrepareAsyncDeleteFriendRaw(::grpc::ClientContext* context, const ::e8::DeleteFriendRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::e8::GetFriendListResponse>* AsyncGetFriendListRaw(::grpc::ClientContext* context, const ::e8::GetFriendListRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::e8::GetFriendListResponse>* PrepareAsyncGetFriendListRaw(::grpc::ClientContext* context, const ::e8::GetFriendListRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_SendInvitation_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteInvitation_;
    const ::grpc::internal::RpcMethod rpcmethod_AcceptInvitation_;
    const ::grpc::internal::RpcMethod rpcmethod_RejectInvitation_;
    const ::grpc::internal::RpcMethod rpcmethod_GetInvitationList_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteFriend_;
    const ::grpc::internal::RpcMethod rpcmethod_GetFriendList_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // *
    // Send a friend request invitation to another user and the logged-in user is the inviter.
    virtual ::grpc::Status SendInvitation(::grpc::ServerContext* context, const ::e8::SendInvitationRequest* request, ::e8::SendInvitationResponse* response);
    // *
    // Delete invitation previously sent where the logged-in user is inviter.
    virtual ::grpc::Status DeleteInvitation(::grpc::ServerContext* context, const ::e8::DeleteInvitationRequest* request, ::e8::DeleteInvitationResponse* response);
    // *
    // Accept an invitation to establish friend relation where the logged-in user is the invitee.
    virtual ::grpc::Status AcceptInvitation(::grpc::ServerContext* context, const ::e8::AcceptInvitationRequest* request, ::e8::AcceptInvitationResponse* response);
    // *
    // Reject an invitation where the logged-in user is the invitee.
    virtual ::grpc::Status RejectInvitation(::grpc::ServerContext* context, const ::e8::RejectInvitationRequest* request, ::e8::RejectInvitationResponse* response);
    // *
    // Get the friend invitation list where the logged-in user is the invitee.
    virtual ::grpc::Status GetInvitationList(::grpc::ServerContext* context, const ::e8::GetInvitationListRequest* request, ::e8::GetInvitationListResponse* response);
    // *
    // Delete a friend relation for the logged-in user.
    virtual ::grpc::Status DeleteFriend(::grpc::ServerContext* context, const ::e8::DeleteFriendRequest* request, ::e8::DeleteFriendResponse* response);
    // *
    // Get the friend list of the logged-in user.
    virtual ::grpc::Status GetFriendList(::grpc::ServerContext* context, const ::e8::GetFriendListRequest* request, ::e8::GetFriendListResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_SendInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SendInvitation() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_SendInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendInvitation(::grpc::ServerContext* context, const ::e8::SendInvitationRequest* request, ::e8::SendInvitationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendInvitation(::grpc::ServerContext* context, ::e8::SendInvitationRequest* request, ::grpc::ServerAsyncResponseWriter< ::e8::SendInvitationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteInvitation() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_DeleteInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteInvitation(::grpc::ServerContext* context, const ::e8::DeleteInvitationRequest* request, ::e8::DeleteInvitationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteInvitation(::grpc::ServerContext* context, ::e8::DeleteInvitationRequest* request, ::grpc::ServerAsyncResponseWriter< ::e8::DeleteInvitationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AcceptInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_AcceptInvitation() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_AcceptInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AcceptInvitation(::grpc::ServerContext* context, const ::e8::AcceptInvitationRequest* request, ::e8::AcceptInvitationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAcceptInvitation(::grpc::ServerContext* context, ::e8::AcceptInvitationRequest* request, ::grpc::ServerAsyncResponseWriter< ::e8::AcceptInvitationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RejectInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_RejectInvitation() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_RejectInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RejectInvitation(::grpc::ServerContext* context, const ::e8::RejectInvitationRequest* request, ::e8::RejectInvitationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRejectInvitation(::grpc::ServerContext* context, ::e8::RejectInvitationRequest* request, ::grpc::ServerAsyncResponseWriter< ::e8::RejectInvitationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetInvitationList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetInvitationList() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_GetInvitationList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInvitationList(::grpc::ServerContext* context, const ::e8::GetInvitationListRequest* request, ::e8::GetInvitationListResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetInvitationList(::grpc::ServerContext* context, ::e8::GetInvitationListRequest* request, ::grpc::ServerAsyncResponseWriter< ::e8::GetInvitationListResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteFriend : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteFriend() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_DeleteFriend() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteFriend(::grpc::ServerContext* context, const ::e8::DeleteFriendRequest* request, ::e8::DeleteFriendResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteFriend(::grpc::ServerContext* context, ::e8::DeleteFriendRequest* request, ::grpc::ServerAsyncResponseWriter< ::e8::DeleteFriendResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetFriendList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetFriendList() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_GetFriendList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFriendList(::grpc::ServerContext* context, const ::e8::GetFriendListRequest* request, ::e8::GetFriendListResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetFriendList(::grpc::ServerContext* context, ::e8::GetFriendListRequest* request, ::grpc::ServerAsyncResponseWriter< ::e8::GetFriendListResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_SendInvitation<WithAsyncMethod_DeleteInvitation<WithAsyncMethod_AcceptInvitation<WithAsyncMethod_RejectInvitation<WithAsyncMethod_GetInvitationList<WithAsyncMethod_DeleteFriend<WithAsyncMethod_GetFriendList<Service > > > > > > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_SendInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SendInvitation() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_SendInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendInvitation(::grpc::ServerContext* context, const ::e8::SendInvitationRequest* request, ::e8::SendInvitationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteInvitation() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_DeleteInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteInvitation(::grpc::ServerContext* context, const ::e8::DeleteInvitationRequest* request, ::e8::DeleteInvitationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AcceptInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_AcceptInvitation() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_AcceptInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AcceptInvitation(::grpc::ServerContext* context, const ::e8::AcceptInvitationRequest* request, ::e8::AcceptInvitationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RejectInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_RejectInvitation() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_RejectInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RejectInvitation(::grpc::ServerContext* context, const ::e8::RejectInvitationRequest* request, ::e8::RejectInvitationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetInvitationList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetInvitationList() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_GetInvitationList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInvitationList(::grpc::ServerContext* context, const ::e8::GetInvitationListRequest* request, ::e8::GetInvitationListResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteFriend : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteFriend() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_DeleteFriend() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteFriend(::grpc::ServerContext* context, const ::e8::DeleteFriendRequest* request, ::e8::DeleteFriendResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetFriendList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetFriendList() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_GetFriendList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFriendList(::grpc::ServerContext* context, const ::e8::GetFriendListRequest* request, ::e8::GetFriendListResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_SendInvitation() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_SendInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendInvitation(::grpc::ServerContext* context, const ::e8::SendInvitationRequest* request, ::e8::SendInvitationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendInvitation(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_DeleteInvitation() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_DeleteInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteInvitation(::grpc::ServerContext* context, const ::e8::DeleteInvitationRequest* request, ::e8::DeleteInvitationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteInvitation(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AcceptInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_AcceptInvitation() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_AcceptInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AcceptInvitation(::grpc::ServerContext* context, const ::e8::AcceptInvitationRequest* request, ::e8::AcceptInvitationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAcceptInvitation(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RejectInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_RejectInvitation() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_RejectInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RejectInvitation(::grpc::ServerContext* context, const ::e8::RejectInvitationRequest* request, ::e8::RejectInvitationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRejectInvitation(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetInvitationList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetInvitationList() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_GetInvitationList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInvitationList(::grpc::ServerContext* context, const ::e8::GetInvitationListRequest* request, ::e8::GetInvitationListResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetInvitationList(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteFriend : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_DeleteFriend() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_DeleteFriend() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteFriend(::grpc::ServerContext* context, const ::e8::DeleteFriendRequest* request, ::e8::DeleteFriendResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteFriend(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetFriendList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetFriendList() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_GetFriendList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFriendList(::grpc::ServerContext* context, const ::e8::GetFriendListRequest* request, ::e8::GetFriendListResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetFriendList(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SendInvitation() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::e8::SendInvitationRequest, ::e8::SendInvitationResponse>(std::bind(&WithStreamedUnaryMethod_SendInvitation<BaseClass>::StreamedSendInvitation, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SendInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendInvitation(::grpc::ServerContext* context, const ::e8::SendInvitationRequest* request, ::e8::SendInvitationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendInvitation(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::e8::SendInvitationRequest,::e8::SendInvitationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteInvitation() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::e8::DeleteInvitationRequest, ::e8::DeleteInvitationResponse>(std::bind(&WithStreamedUnaryMethod_DeleteInvitation<BaseClass>::StreamedDeleteInvitation, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteInvitation(::grpc::ServerContext* context, const ::e8::DeleteInvitationRequest* request, ::e8::DeleteInvitationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteInvitation(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::e8::DeleteInvitationRequest,::e8::DeleteInvitationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AcceptInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_AcceptInvitation() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::e8::AcceptInvitationRequest, ::e8::AcceptInvitationResponse>(std::bind(&WithStreamedUnaryMethod_AcceptInvitation<BaseClass>::StreamedAcceptInvitation, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_AcceptInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AcceptInvitation(::grpc::ServerContext* context, const ::e8::AcceptInvitationRequest* request, ::e8::AcceptInvitationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAcceptInvitation(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::e8::AcceptInvitationRequest,::e8::AcceptInvitationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RejectInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_RejectInvitation() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler< ::e8::RejectInvitationRequest, ::e8::RejectInvitationResponse>(std::bind(&WithStreamedUnaryMethod_RejectInvitation<BaseClass>::StreamedRejectInvitation, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_RejectInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RejectInvitation(::grpc::ServerContext* context, const ::e8::RejectInvitationRequest* request, ::e8::RejectInvitationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRejectInvitation(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::e8::RejectInvitationRequest,::e8::RejectInvitationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetInvitationList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetInvitationList() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler< ::e8::GetInvitationListRequest, ::e8::GetInvitationListResponse>(std::bind(&WithStreamedUnaryMethod_GetInvitationList<BaseClass>::StreamedGetInvitationList, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetInvitationList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetInvitationList(::grpc::ServerContext* context, const ::e8::GetInvitationListRequest* request, ::e8::GetInvitationListResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetInvitationList(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::e8::GetInvitationListRequest,::e8::GetInvitationListResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteFriend : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteFriend() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler< ::e8::DeleteFriendRequest, ::e8::DeleteFriendResponse>(std::bind(&WithStreamedUnaryMethod_DeleteFriend<BaseClass>::StreamedDeleteFriend, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteFriend() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteFriend(::grpc::ServerContext* context, const ::e8::DeleteFriendRequest* request, ::e8::DeleteFriendResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteFriend(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::e8::DeleteFriendRequest,::e8::DeleteFriendResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetFriendList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetFriendList() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler< ::e8::GetFriendListRequest, ::e8::GetFriendListResponse>(std::bind(&WithStreamedUnaryMethod_GetFriendList<BaseClass>::StreamedGetFriendList, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetFriendList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetFriendList(::grpc::ServerContext* context, const ::e8::GetFriendListRequest* request, ::e8::GetFriendListResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetFriendList(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::e8::GetFriendListRequest,::e8::GetFriendListResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_SendInvitation<WithStreamedUnaryMethod_DeleteInvitation<WithStreamedUnaryMethod_AcceptInvitation<WithStreamedUnaryMethod_RejectInvitation<WithStreamedUnaryMethod_GetInvitationList<WithStreamedUnaryMethod_DeleteFriend<WithStreamedUnaryMethod_GetFriendList<Service > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_SendInvitation<WithStreamedUnaryMethod_DeleteInvitation<WithStreamedUnaryMethod_AcceptInvitation<WithStreamedUnaryMethod_RejectInvitation<WithStreamedUnaryMethod_GetInvitationList<WithStreamedUnaryMethod_DeleteFriend<WithStreamedUnaryMethod_GetFriendList<Service > > > > > > > StreamedService;
};

}  // namespace e8


#endif  // GRPC_service_5fsocialnetwork_2eproto__INCLUDED
