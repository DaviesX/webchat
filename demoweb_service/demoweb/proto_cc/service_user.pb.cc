// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service_user.proto

#include "service_user.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_file_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_file_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FileTokenAccess;
}  // namespace protobuf_file_2eproto
namespace protobuf_nullable_5fprimitives_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_nullable_5fprimitives_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_NullableInt64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_nullable_5fprimitives_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_NullableString;
}  // namespace protobuf_nullable_5fprimitives_2eproto
namespace protobuf_pagination_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_pagination_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Pagination;
}  // namespace protobuf_pagination_2eproto
namespace protobuf_user_5fprofile_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_user_5fprofile_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UserPublicProfile;
}  // namespace protobuf_user_5fprofile_2eproto
namespace e8 {
class RegistrationRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegistrationRequest>
      _instance;
} _RegistrationRequest_default_instance_;
class RegistrationReponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegistrationReponse>
      _instance;
} _RegistrationReponse_default_instance_;
class AuthorizationRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthorizationRequest>
      _instance;
} _AuthorizationRequest_default_instance_;
class AuthorizationResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthorizationResponse>
      _instance;
} _AuthorizationResponse_default_instance_;
class GetPublicProfileRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetPublicProfileRequest>
      _instance;
} _GetPublicProfileRequest_default_instance_;
class GetPublicProfileResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetPublicProfileResponse>
      _instance;
} _GetPublicProfileResponse_default_instance_;
class UpdatePublicProfileRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdatePublicProfileRequest>
      _instance;
} _UpdatePublicProfileRequest_default_instance_;
class UpdatePublicProfileResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdatePublicProfileResponse>
      _instance;
} _UpdatePublicProfileResponse_default_instance_;
class SearchUserRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchUserRequest>
      _instance;
} _SearchUserRequest_default_instance_;
class SearchUserResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchUserResponse>
      _instance;
} _SearchUserResponse_default_instance_;
class CreateNewAvatarRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateNewAvatarRequest>
      _instance;
} _CreateNewAvatarRequest_default_instance_;
class CreateNewAvatarResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateNewAvatarResponse>
      _instance;
} _CreateNewAvatarResponse_default_instance_;
}  // namespace e8
namespace protobuf_service_5fuser_2eproto {
static void InitDefaultsRegistrationRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_RegistrationRequest_default_instance_;
    new (ptr) ::e8::RegistrationRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::RegistrationRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RegistrationRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRegistrationRequest}, {}};

static void InitDefaultsRegistrationReponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_RegistrationReponse_default_instance_;
    new (ptr) ::e8::RegistrationReponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::RegistrationReponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RegistrationReponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRegistrationReponse}, {}};

static void InitDefaultsAuthorizationRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_AuthorizationRequest_default_instance_;
    new (ptr) ::e8::AuthorizationRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::AuthorizationRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AuthorizationRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAuthorizationRequest}, {}};

static void InitDefaultsAuthorizationResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_AuthorizationResponse_default_instance_;
    new (ptr) ::e8::AuthorizationResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::AuthorizationResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AuthorizationResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAuthorizationResponse}, {}};

static void InitDefaultsGetPublicProfileRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_GetPublicProfileRequest_default_instance_;
    new (ptr) ::e8::GetPublicProfileRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::GetPublicProfileRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetPublicProfileRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetPublicProfileRequest}, {
      &protobuf_nullable_5fprimitives_2eproto::scc_info_NullableInt64.base,}};

static void InitDefaultsGetPublicProfileResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_GetPublicProfileResponse_default_instance_;
    new (ptr) ::e8::GetPublicProfileResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::GetPublicProfileResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetPublicProfileResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetPublicProfileResponse}, {
      &protobuf_user_5fprofile_2eproto::scc_info_UserPublicProfile.base,}};

static void InitDefaultsUpdatePublicProfileRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_UpdatePublicProfileRequest_default_instance_;
    new (ptr) ::e8::UpdatePublicProfileRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::UpdatePublicProfileRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UpdatePublicProfileRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUpdatePublicProfileRequest}, {
      &protobuf_nullable_5fprimitives_2eproto::scc_info_NullableString.base,}};

static void InitDefaultsUpdatePublicProfileResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_UpdatePublicProfileResponse_default_instance_;
    new (ptr) ::e8::UpdatePublicProfileResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::UpdatePublicProfileResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UpdatePublicProfileResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUpdatePublicProfileResponse}, {
      &protobuf_user_5fprofile_2eproto::scc_info_UserPublicProfile.base,}};

static void InitDefaultsSearchUserRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_SearchUserRequest_default_instance_;
    new (ptr) ::e8::SearchUserRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::SearchUserRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_SearchUserRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsSearchUserRequest}, {
      &protobuf_nullable_5fprimitives_2eproto::scc_info_NullableString.base,
      &protobuf_nullable_5fprimitives_2eproto::scc_info_NullableInt64.base,
      &protobuf_pagination_2eproto::scc_info_Pagination.base,}};

static void InitDefaultsSearchUserResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_SearchUserResponse_default_instance_;
    new (ptr) ::e8::SearchUserResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::SearchUserResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SearchUserResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSearchUserResponse}, {
      &protobuf_user_5fprofile_2eproto::scc_info_UserPublicProfile.base,}};

static void InitDefaultsCreateNewAvatarRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_CreateNewAvatarRequest_default_instance_;
    new (ptr) ::e8::CreateNewAvatarRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::CreateNewAvatarRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateNewAvatarRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateNewAvatarRequest}, {}};

static void InitDefaultsCreateNewAvatarResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_CreateNewAvatarResponse_default_instance_;
    new (ptr) ::e8::CreateNewAvatarResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::CreateNewAvatarResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateNewAvatarResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateNewAvatarResponse}, {
      &protobuf_file_2eproto::scc_info_FileTokenAccess.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_RegistrationRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegistrationReponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AuthorizationRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AuthorizationResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetPublicProfileRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetPublicProfileResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdatePublicProfileRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdatePublicProfileResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SearchUserRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SearchUserResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateNewAvatarRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateNewAvatarResponse.base);
}

::google::protobuf::Metadata file_level_metadata[12];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::RegistrationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::RegistrationRequest, security_key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::RegistrationReponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::RegistrationReponse, error_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::RegistrationReponse, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::AuthorizationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::AuthorizationRequest, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::AuthorizationRequest, security_key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::AuthorizationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::AuthorizationResponse, signed_identity_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetPublicProfileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetPublicProfileRequest, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetPublicProfileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetPublicProfileResponse, profile_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::UpdatePublicProfileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::UpdatePublicProfileRequest, alias_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::UpdatePublicProfileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::UpdatePublicProfileResponse, profile_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::SearchUserRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::SearchUserRequest, alias_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::SearchUserRequest, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::SearchUserRequest, pagination_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::SearchUserResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::SearchUserResponse, user_profiles_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::CreateNewAvatarRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::CreateNewAvatarRequest, avatar_file_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::CreateNewAvatarResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::CreateNewAvatarResponse, avatar_readwrite_access_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::e8::RegistrationRequest)},
  { 6, -1, sizeof(::e8::RegistrationReponse)},
  { 13, -1, sizeof(::e8::AuthorizationRequest)},
  { 20, -1, sizeof(::e8::AuthorizationResponse)},
  { 26, -1, sizeof(::e8::GetPublicProfileRequest)},
  { 32, -1, sizeof(::e8::GetPublicProfileResponse)},
  { 38, -1, sizeof(::e8::UpdatePublicProfileRequest)},
  { 44, -1, sizeof(::e8::UpdatePublicProfileResponse)},
  { 50, -1, sizeof(::e8::SearchUserRequest)},
  { 58, -1, sizeof(::e8::SearchUserResponse)},
  { 64, -1, sizeof(::e8::CreateNewAvatarRequest)},
  { 70, -1, sizeof(::e8::CreateNewAvatarResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_RegistrationRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_RegistrationReponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_AuthorizationRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_AuthorizationResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_GetPublicProfileRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_GetPublicProfileResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_UpdatePublicProfileRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_UpdatePublicProfileResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_SearchUserRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_SearchUserResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_CreateNewAvatarRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_CreateNewAvatarResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "service_user.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 12);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022service_user.proto\022\002e8\032\nfile.proto\032\031nu"
      "llable_primitives.proto\032\020pagination.prot"
      "o\032\022user_profile.proto\"+\n\023RegistrationReq"
      "uest\022\024\n\014security_key\030\001 \001(\014\"\300\001\n\023Registrat"
      "ionReponse\022A\n\nerror_type\030\001 \001(\0162-.e8.Regi"
      "strationReponse.RegistrationErrorType\022\017\n"
      "\007user_id\030\003 \001(\003\"U\n\025RegistrationErrorType\022"
      "\017\n\013RET_NoError\020\000\022\026\n\022RET_BadSecurityKey\020\001"
      "\022\023\n\017RET_BotDetected\020\002\"=\n\024AuthorizationRe"
      "quest\022\017\n\007user_id\030\001 \001(\003\022\024\n\014security_key\030\002"
      " \001(\014\"0\n\025AuthorizationResponse\022\027\n\017signed_"
      "identity\030\001 \001(\014\"=\n\027GetPublicProfileReques"
      "t\022\"\n\007user_id\030\001 \001(\0132\021.e8.NullableInt64\"B\n"
      "\030GetPublicProfileResponse\022&\n\007profile\030\001 \001"
      "(\0132\025.e8.UserPublicProfile\"\?\n\032UpdatePubli"
      "cProfileRequest\022!\n\005alias\030\001 \001(\0132\022.e8.Null"
      "ableString\"E\n\033UpdatePublicProfileRespons"
      "e\022&\n\007profile\030\001 \001(\0132\025.e8.UserPublicProfil"
      "e\"~\n\021SearchUserRequest\022!\n\005alias\030\001 \001(\0132\022."
      "e8.NullableString\022\"\n\007user_id\030\002 \001(\0132\021.e8."
      "NullableInt64\022\"\n\npagination\030\003 \001(\0132\016.e8.P"
      "agination\"B\n\022SearchUserResponse\022,\n\ruser_"
      "profiles\030\001 \003(\0132\025.e8.UserPublicProfile\"2\n"
      "\026CreateNewAvatarRequest\022\030\n\020avatar_file_n"
      "ame\030\001 \001(\t\"O\n\027CreateNewAvatarResponse\0224\n\027"
      "avatar_readwrite_access\030\001 \001(\0132\023.e8.FileT"
      "okenAccess2\271\003\n\013UserService\022<\n\010Register\022\027"
      ".e8.RegistrationRequest\032\027.e8.Registratio"
      "nReponse\022@\n\tAuthorize\022\030.e8.Authorization"
      "Request\032\031.e8.AuthorizationResponse\022M\n\020Ge"
      "tPublicProfile\022\033.e8.GetPublicProfileRequ"
      "est\032\034.e8.GetPublicProfileResponse\022V\n\023Upd"
      "atePublicProfile\022\036.e8.UpdatePublicProfil"
      "eRequest\032\037.e8.UpdatePublicProfileRespons"
      "e\0227\n\006Search\022\025.e8.SearchUserRequest\032\026.e8."
      "SearchUserResponse\022J\n\017CreateNewAvatar\022\032."
      "e8.CreateNewAvatarRequest\032\033.e8.CreateNew"
      "AvatarResponseb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1502);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "service_user.proto", &protobuf_RegisterTypes);
  ::protobuf_file_2eproto::AddDescriptors();
  ::protobuf_nullable_5fprimitives_2eproto::AddDescriptors();
  ::protobuf_pagination_2eproto::AddDescriptors();
  ::protobuf_user_5fprofile_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_service_5fuser_2eproto
namespace e8 {
const ::google::protobuf::EnumDescriptor* RegistrationReponse_RegistrationErrorType_descriptor() {
  protobuf_service_5fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_5fuser_2eproto::file_level_enum_descriptors[0];
}
bool RegistrationReponse_RegistrationErrorType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RegistrationReponse_RegistrationErrorType RegistrationReponse::RET_NoError;
const RegistrationReponse_RegistrationErrorType RegistrationReponse::RET_BadSecurityKey;
const RegistrationReponse_RegistrationErrorType RegistrationReponse::RET_BotDetected;
const RegistrationReponse_RegistrationErrorType RegistrationReponse::RegistrationErrorType_MIN;
const RegistrationReponse_RegistrationErrorType RegistrationReponse::RegistrationErrorType_MAX;
const int RegistrationReponse::RegistrationErrorType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void RegistrationRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegistrationRequest::kSecurityKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegistrationRequest::RegistrationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fuser_2eproto::scc_info_RegistrationRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.RegistrationRequest)
}
RegistrationRequest::RegistrationRequest(const RegistrationRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  security_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.security_key().size() > 0) {
    security_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.security_key_);
  }
  // @@protoc_insertion_point(copy_constructor:e8.RegistrationRequest)
}

void RegistrationRequest::SharedCtor() {
  security_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RegistrationRequest::~RegistrationRequest() {
  // @@protoc_insertion_point(destructor:e8.RegistrationRequest)
  SharedDtor();
}

void RegistrationRequest::SharedDtor() {
  security_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RegistrationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegistrationRequest::descriptor() {
  ::protobuf_service_5fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegistrationRequest& RegistrationRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fuser_2eproto::scc_info_RegistrationRequest.base);
  return *internal_default_instance();
}


void RegistrationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.RegistrationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  security_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RegistrationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.RegistrationRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes security_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_security_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.RegistrationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.RegistrationRequest)
  return false;
#undef DO_
}

void RegistrationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.RegistrationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes security_key = 1;
  if (this->security_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->security_key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.RegistrationRequest)
}

::google::protobuf::uint8* RegistrationRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.RegistrationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes security_key = 1;
  if (this->security_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->security_key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.RegistrationRequest)
  return target;
}

size_t RegistrationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.RegistrationRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes security_key = 1;
  if (this->security_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->security_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegistrationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.RegistrationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RegistrationRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegistrationRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.RegistrationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.RegistrationRequest)
    MergeFrom(*source);
  }
}

void RegistrationRequest::MergeFrom(const RegistrationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.RegistrationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.security_key().size() > 0) {

    security_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.security_key_);
  }
}

void RegistrationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.RegistrationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegistrationRequest::CopyFrom(const RegistrationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.RegistrationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegistrationRequest::IsInitialized() const {
  return true;
}

void RegistrationRequest::Swap(RegistrationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegistrationRequest::InternalSwap(RegistrationRequest* other) {
  using std::swap;
  security_key_.Swap(&other->security_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegistrationRequest::GetMetadata() const {
  protobuf_service_5fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegistrationReponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegistrationReponse::kErrorTypeFieldNumber;
const int RegistrationReponse::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegistrationReponse::RegistrationReponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fuser_2eproto::scc_info_RegistrationReponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.RegistrationReponse)
}
RegistrationReponse::RegistrationReponse(const RegistrationReponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&error_type_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(error_type_));
  // @@protoc_insertion_point(copy_constructor:e8.RegistrationReponse)
}

void RegistrationReponse::SharedCtor() {
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_type_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(error_type_));
}

RegistrationReponse::~RegistrationReponse() {
  // @@protoc_insertion_point(destructor:e8.RegistrationReponse)
  SharedDtor();
}

void RegistrationReponse::SharedDtor() {
}

void RegistrationReponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegistrationReponse::descriptor() {
  ::protobuf_service_5fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegistrationReponse& RegistrationReponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fuser_2eproto::scc_info_RegistrationReponse.base);
  return *internal_default_instance();
}


void RegistrationReponse::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.RegistrationReponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_type_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(error_type_));
  _internal_metadata_.Clear();
}

bool RegistrationReponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.RegistrationReponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .e8.RegistrationReponse.RegistrationErrorType error_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_error_type(static_cast< ::e8::RegistrationReponse_RegistrationErrorType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 user_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.RegistrationReponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.RegistrationReponse)
  return false;
#undef DO_
}

void RegistrationReponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.RegistrationReponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .e8.RegistrationReponse.RegistrationErrorType error_type = 1;
  if (this->error_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_type(), output);
  }

  // int64 user_id = 3;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->user_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.RegistrationReponse)
}

::google::protobuf::uint8* RegistrationReponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.RegistrationReponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .e8.RegistrationReponse.RegistrationErrorType error_type = 1;
  if (this->error_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_type(), target);
  }

  // int64 user_id = 3;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->user_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.RegistrationReponse)
  return target;
}

size_t RegistrationReponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.RegistrationReponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 user_id = 3;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->user_id());
  }

  // .e8.RegistrationReponse.RegistrationErrorType error_type = 1;
  if (this->error_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegistrationReponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.RegistrationReponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RegistrationReponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegistrationReponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.RegistrationReponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.RegistrationReponse)
    MergeFrom(*source);
  }
}

void RegistrationReponse::MergeFrom(const RegistrationReponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.RegistrationReponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.error_type() != 0) {
    set_error_type(from.error_type());
  }
}

void RegistrationReponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.RegistrationReponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegistrationReponse::CopyFrom(const RegistrationReponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.RegistrationReponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegistrationReponse::IsInitialized() const {
  return true;
}

void RegistrationReponse::Swap(RegistrationReponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegistrationReponse::InternalSwap(RegistrationReponse* other) {
  using std::swap;
  swap(user_id_, other->user_id_);
  swap(error_type_, other->error_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegistrationReponse::GetMetadata() const {
  protobuf_service_5fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthorizationRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthorizationRequest::kUserIdFieldNumber;
const int AuthorizationRequest::kSecurityKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthorizationRequest::AuthorizationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fuser_2eproto::scc_info_AuthorizationRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.AuthorizationRequest)
}
AuthorizationRequest::AuthorizationRequest(const AuthorizationRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  security_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.security_key().size() > 0) {
    security_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.security_key_);
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:e8.AuthorizationRequest)
}

void AuthorizationRequest::SharedCtor() {
  security_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = GOOGLE_LONGLONG(0);
}

AuthorizationRequest::~AuthorizationRequest() {
  // @@protoc_insertion_point(destructor:e8.AuthorizationRequest)
  SharedDtor();
}

void AuthorizationRequest::SharedDtor() {
  security_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthorizationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AuthorizationRequest::descriptor() {
  ::protobuf_service_5fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthorizationRequest& AuthorizationRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fuser_2eproto::scc_info_AuthorizationRequest.base);
  return *internal_default_instance();
}


void AuthorizationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.AuthorizationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  security_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool AuthorizationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.AuthorizationRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes security_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_security_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.AuthorizationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.AuthorizationRequest)
  return false;
#undef DO_
}

void AuthorizationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.AuthorizationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->user_id(), output);
  }

  // bytes security_key = 2;
  if (this->security_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->security_key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.AuthorizationRequest)
}

::google::protobuf::uint8* AuthorizationRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.AuthorizationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->user_id(), target);
  }

  // bytes security_key = 2;
  if (this->security_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->security_key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.AuthorizationRequest)
  return target;
}

size_t AuthorizationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.AuthorizationRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes security_key = 2;
  if (this->security_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->security_key());
  }

  // int64 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AuthorizationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.AuthorizationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthorizationRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthorizationRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.AuthorizationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.AuthorizationRequest)
    MergeFrom(*source);
  }
}

void AuthorizationRequest::MergeFrom(const AuthorizationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.AuthorizationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.security_key().size() > 0) {

    security_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.security_key_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void AuthorizationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.AuthorizationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthorizationRequest::CopyFrom(const AuthorizationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.AuthorizationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthorizationRequest::IsInitialized() const {
  return true;
}

void AuthorizationRequest::Swap(AuthorizationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthorizationRequest::InternalSwap(AuthorizationRequest* other) {
  using std::swap;
  security_key_.Swap(&other->security_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AuthorizationRequest::GetMetadata() const {
  protobuf_service_5fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthorizationResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthorizationResponse::kSignedIdentityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthorizationResponse::AuthorizationResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fuser_2eproto::scc_info_AuthorizationResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.AuthorizationResponse)
}
AuthorizationResponse::AuthorizationResponse(const AuthorizationResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  signed_identity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signed_identity().size() > 0) {
    signed_identity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signed_identity_);
  }
  // @@protoc_insertion_point(copy_constructor:e8.AuthorizationResponse)
}

void AuthorizationResponse::SharedCtor() {
  signed_identity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AuthorizationResponse::~AuthorizationResponse() {
  // @@protoc_insertion_point(destructor:e8.AuthorizationResponse)
  SharedDtor();
}

void AuthorizationResponse::SharedDtor() {
  signed_identity_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthorizationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AuthorizationResponse::descriptor() {
  ::protobuf_service_5fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthorizationResponse& AuthorizationResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fuser_2eproto::scc_info_AuthorizationResponse.base);
  return *internal_default_instance();
}


void AuthorizationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.AuthorizationResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  signed_identity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AuthorizationResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.AuthorizationResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes signed_identity = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_signed_identity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.AuthorizationResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.AuthorizationResponse)
  return false;
#undef DO_
}

void AuthorizationResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.AuthorizationResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes signed_identity = 1;
  if (this->signed_identity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->signed_identity(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.AuthorizationResponse)
}

::google::protobuf::uint8* AuthorizationResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.AuthorizationResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes signed_identity = 1;
  if (this->signed_identity().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->signed_identity(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.AuthorizationResponse)
  return target;
}

size_t AuthorizationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.AuthorizationResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes signed_identity = 1;
  if (this->signed_identity().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->signed_identity());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AuthorizationResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.AuthorizationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthorizationResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthorizationResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.AuthorizationResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.AuthorizationResponse)
    MergeFrom(*source);
  }
}

void AuthorizationResponse::MergeFrom(const AuthorizationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.AuthorizationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.signed_identity().size() > 0) {

    signed_identity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signed_identity_);
  }
}

void AuthorizationResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.AuthorizationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthorizationResponse::CopyFrom(const AuthorizationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.AuthorizationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthorizationResponse::IsInitialized() const {
  return true;
}

void AuthorizationResponse::Swap(AuthorizationResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthorizationResponse::InternalSwap(AuthorizationResponse* other) {
  using std::swap;
  signed_identity_.Swap(&other->signed_identity_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AuthorizationResponse::GetMetadata() const {
  protobuf_service_5fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetPublicProfileRequest::InitAsDefaultInstance() {
  ::e8::_GetPublicProfileRequest_default_instance_._instance.get_mutable()->user_id_ = const_cast< ::e8::NullableInt64*>(
      ::e8::NullableInt64::internal_default_instance());
}
void GetPublicProfileRequest::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) {
    delete user_id_;
  }
  user_id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPublicProfileRequest::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPublicProfileRequest::GetPublicProfileRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fuser_2eproto::scc_info_GetPublicProfileRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.GetPublicProfileRequest)
}
GetPublicProfileRequest::GetPublicProfileRequest(const GetPublicProfileRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_user_id()) {
    user_id_ = new ::e8::NullableInt64(*from.user_id_);
  } else {
    user_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:e8.GetPublicProfileRequest)
}

void GetPublicProfileRequest::SharedCtor() {
  user_id_ = NULL;
}

GetPublicProfileRequest::~GetPublicProfileRequest() {
  // @@protoc_insertion_point(destructor:e8.GetPublicProfileRequest)
  SharedDtor();
}

void GetPublicProfileRequest::SharedDtor() {
  if (this != internal_default_instance()) delete user_id_;
}

void GetPublicProfileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetPublicProfileRequest::descriptor() {
  ::protobuf_service_5fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPublicProfileRequest& GetPublicProfileRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fuser_2eproto::scc_info_GetPublicProfileRequest.base);
  return *internal_default_instance();
}


void GetPublicProfileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.GetPublicProfileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) {
    delete user_id_;
  }
  user_id_ = NULL;
  _internal_metadata_.Clear();
}

bool GetPublicProfileRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.GetPublicProfileRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .e8.NullableInt64 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.GetPublicProfileRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.GetPublicProfileRequest)
  return false;
#undef DO_
}

void GetPublicProfileRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.GetPublicProfileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .e8.NullableInt64 user_id = 1;
  if (this->has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_user_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.GetPublicProfileRequest)
}

::google::protobuf::uint8* GetPublicProfileRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.GetPublicProfileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .e8.NullableInt64 user_id = 1;
  if (this->has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_user_id(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.GetPublicProfileRequest)
  return target;
}

size_t GetPublicProfileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.GetPublicProfileRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .e8.NullableInt64 user_id = 1;
  if (this->has_user_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *user_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPublicProfileRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.GetPublicProfileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPublicProfileRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPublicProfileRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.GetPublicProfileRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.GetPublicProfileRequest)
    MergeFrom(*source);
  }
}

void GetPublicProfileRequest::MergeFrom(const GetPublicProfileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.GetPublicProfileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_user_id()) {
    mutable_user_id()->::e8::NullableInt64::MergeFrom(from.user_id());
  }
}

void GetPublicProfileRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.GetPublicProfileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPublicProfileRequest::CopyFrom(const GetPublicProfileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.GetPublicProfileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPublicProfileRequest::IsInitialized() const {
  return true;
}

void GetPublicProfileRequest::Swap(GetPublicProfileRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPublicProfileRequest::InternalSwap(GetPublicProfileRequest* other) {
  using std::swap;
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetPublicProfileRequest::GetMetadata() const {
  protobuf_service_5fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetPublicProfileResponse::InitAsDefaultInstance() {
  ::e8::_GetPublicProfileResponse_default_instance_._instance.get_mutable()->profile_ = const_cast< ::e8::UserPublicProfile*>(
      ::e8::UserPublicProfile::internal_default_instance());
}
void GetPublicProfileResponse::clear_profile() {
  if (GetArenaNoVirtual() == NULL && profile_ != NULL) {
    delete profile_;
  }
  profile_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPublicProfileResponse::kProfileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPublicProfileResponse::GetPublicProfileResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fuser_2eproto::scc_info_GetPublicProfileResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.GetPublicProfileResponse)
}
GetPublicProfileResponse::GetPublicProfileResponse(const GetPublicProfileResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_profile()) {
    profile_ = new ::e8::UserPublicProfile(*from.profile_);
  } else {
    profile_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:e8.GetPublicProfileResponse)
}

void GetPublicProfileResponse::SharedCtor() {
  profile_ = NULL;
}

GetPublicProfileResponse::~GetPublicProfileResponse() {
  // @@protoc_insertion_point(destructor:e8.GetPublicProfileResponse)
  SharedDtor();
}

void GetPublicProfileResponse::SharedDtor() {
  if (this != internal_default_instance()) delete profile_;
}

void GetPublicProfileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetPublicProfileResponse::descriptor() {
  ::protobuf_service_5fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPublicProfileResponse& GetPublicProfileResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fuser_2eproto::scc_info_GetPublicProfileResponse.base);
  return *internal_default_instance();
}


void GetPublicProfileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.GetPublicProfileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && profile_ != NULL) {
    delete profile_;
  }
  profile_ = NULL;
  _internal_metadata_.Clear();
}

bool GetPublicProfileResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.GetPublicProfileResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .e8.UserPublicProfile profile = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_profile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.GetPublicProfileResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.GetPublicProfileResponse)
  return false;
#undef DO_
}

void GetPublicProfileResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.GetPublicProfileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .e8.UserPublicProfile profile = 1;
  if (this->has_profile()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_profile(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.GetPublicProfileResponse)
}

::google::protobuf::uint8* GetPublicProfileResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.GetPublicProfileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .e8.UserPublicProfile profile = 1;
  if (this->has_profile()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_profile(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.GetPublicProfileResponse)
  return target;
}

size_t GetPublicProfileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.GetPublicProfileResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .e8.UserPublicProfile profile = 1;
  if (this->has_profile()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *profile_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPublicProfileResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.GetPublicProfileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPublicProfileResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPublicProfileResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.GetPublicProfileResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.GetPublicProfileResponse)
    MergeFrom(*source);
  }
}

void GetPublicProfileResponse::MergeFrom(const GetPublicProfileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.GetPublicProfileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_profile()) {
    mutable_profile()->::e8::UserPublicProfile::MergeFrom(from.profile());
  }
}

void GetPublicProfileResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.GetPublicProfileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPublicProfileResponse::CopyFrom(const GetPublicProfileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.GetPublicProfileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPublicProfileResponse::IsInitialized() const {
  return true;
}

void GetPublicProfileResponse::Swap(GetPublicProfileResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPublicProfileResponse::InternalSwap(GetPublicProfileResponse* other) {
  using std::swap;
  swap(profile_, other->profile_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetPublicProfileResponse::GetMetadata() const {
  protobuf_service_5fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdatePublicProfileRequest::InitAsDefaultInstance() {
  ::e8::_UpdatePublicProfileRequest_default_instance_._instance.get_mutable()->alias_ = const_cast< ::e8::NullableString*>(
      ::e8::NullableString::internal_default_instance());
}
void UpdatePublicProfileRequest::clear_alias() {
  if (GetArenaNoVirtual() == NULL && alias_ != NULL) {
    delete alias_;
  }
  alias_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdatePublicProfileRequest::kAliasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdatePublicProfileRequest::UpdatePublicProfileRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fuser_2eproto::scc_info_UpdatePublicProfileRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.UpdatePublicProfileRequest)
}
UpdatePublicProfileRequest::UpdatePublicProfileRequest(const UpdatePublicProfileRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_alias()) {
    alias_ = new ::e8::NullableString(*from.alias_);
  } else {
    alias_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:e8.UpdatePublicProfileRequest)
}

void UpdatePublicProfileRequest::SharedCtor() {
  alias_ = NULL;
}

UpdatePublicProfileRequest::~UpdatePublicProfileRequest() {
  // @@protoc_insertion_point(destructor:e8.UpdatePublicProfileRequest)
  SharedDtor();
}

void UpdatePublicProfileRequest::SharedDtor() {
  if (this != internal_default_instance()) delete alias_;
}

void UpdatePublicProfileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdatePublicProfileRequest::descriptor() {
  ::protobuf_service_5fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdatePublicProfileRequest& UpdatePublicProfileRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fuser_2eproto::scc_info_UpdatePublicProfileRequest.base);
  return *internal_default_instance();
}


void UpdatePublicProfileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.UpdatePublicProfileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && alias_ != NULL) {
    delete alias_;
  }
  alias_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdatePublicProfileRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.UpdatePublicProfileRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .e8.NullableString alias = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_alias()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.UpdatePublicProfileRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.UpdatePublicProfileRequest)
  return false;
#undef DO_
}

void UpdatePublicProfileRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.UpdatePublicProfileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .e8.NullableString alias = 1;
  if (this->has_alias()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_alias(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.UpdatePublicProfileRequest)
}

::google::protobuf::uint8* UpdatePublicProfileRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.UpdatePublicProfileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .e8.NullableString alias = 1;
  if (this->has_alias()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_alias(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.UpdatePublicProfileRequest)
  return target;
}

size_t UpdatePublicProfileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.UpdatePublicProfileRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .e8.NullableString alias = 1;
  if (this->has_alias()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *alias_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdatePublicProfileRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.UpdatePublicProfileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdatePublicProfileRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdatePublicProfileRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.UpdatePublicProfileRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.UpdatePublicProfileRequest)
    MergeFrom(*source);
  }
}

void UpdatePublicProfileRequest::MergeFrom(const UpdatePublicProfileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.UpdatePublicProfileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_alias()) {
    mutable_alias()->::e8::NullableString::MergeFrom(from.alias());
  }
}

void UpdatePublicProfileRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.UpdatePublicProfileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdatePublicProfileRequest::CopyFrom(const UpdatePublicProfileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.UpdatePublicProfileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdatePublicProfileRequest::IsInitialized() const {
  return true;
}

void UpdatePublicProfileRequest::Swap(UpdatePublicProfileRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdatePublicProfileRequest::InternalSwap(UpdatePublicProfileRequest* other) {
  using std::swap;
  swap(alias_, other->alias_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdatePublicProfileRequest::GetMetadata() const {
  protobuf_service_5fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdatePublicProfileResponse::InitAsDefaultInstance() {
  ::e8::_UpdatePublicProfileResponse_default_instance_._instance.get_mutable()->profile_ = const_cast< ::e8::UserPublicProfile*>(
      ::e8::UserPublicProfile::internal_default_instance());
}
void UpdatePublicProfileResponse::clear_profile() {
  if (GetArenaNoVirtual() == NULL && profile_ != NULL) {
    delete profile_;
  }
  profile_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdatePublicProfileResponse::kProfileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdatePublicProfileResponse::UpdatePublicProfileResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fuser_2eproto::scc_info_UpdatePublicProfileResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.UpdatePublicProfileResponse)
}
UpdatePublicProfileResponse::UpdatePublicProfileResponse(const UpdatePublicProfileResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_profile()) {
    profile_ = new ::e8::UserPublicProfile(*from.profile_);
  } else {
    profile_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:e8.UpdatePublicProfileResponse)
}

void UpdatePublicProfileResponse::SharedCtor() {
  profile_ = NULL;
}

UpdatePublicProfileResponse::~UpdatePublicProfileResponse() {
  // @@protoc_insertion_point(destructor:e8.UpdatePublicProfileResponse)
  SharedDtor();
}

void UpdatePublicProfileResponse::SharedDtor() {
  if (this != internal_default_instance()) delete profile_;
}

void UpdatePublicProfileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdatePublicProfileResponse::descriptor() {
  ::protobuf_service_5fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdatePublicProfileResponse& UpdatePublicProfileResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fuser_2eproto::scc_info_UpdatePublicProfileResponse.base);
  return *internal_default_instance();
}


void UpdatePublicProfileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.UpdatePublicProfileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && profile_ != NULL) {
    delete profile_;
  }
  profile_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdatePublicProfileResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.UpdatePublicProfileResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .e8.UserPublicProfile profile = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_profile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.UpdatePublicProfileResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.UpdatePublicProfileResponse)
  return false;
#undef DO_
}

void UpdatePublicProfileResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.UpdatePublicProfileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .e8.UserPublicProfile profile = 1;
  if (this->has_profile()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_profile(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.UpdatePublicProfileResponse)
}

::google::protobuf::uint8* UpdatePublicProfileResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.UpdatePublicProfileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .e8.UserPublicProfile profile = 1;
  if (this->has_profile()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_profile(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.UpdatePublicProfileResponse)
  return target;
}

size_t UpdatePublicProfileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.UpdatePublicProfileResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .e8.UserPublicProfile profile = 1;
  if (this->has_profile()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *profile_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdatePublicProfileResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.UpdatePublicProfileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdatePublicProfileResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdatePublicProfileResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.UpdatePublicProfileResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.UpdatePublicProfileResponse)
    MergeFrom(*source);
  }
}

void UpdatePublicProfileResponse::MergeFrom(const UpdatePublicProfileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.UpdatePublicProfileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_profile()) {
    mutable_profile()->::e8::UserPublicProfile::MergeFrom(from.profile());
  }
}

void UpdatePublicProfileResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.UpdatePublicProfileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdatePublicProfileResponse::CopyFrom(const UpdatePublicProfileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.UpdatePublicProfileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdatePublicProfileResponse::IsInitialized() const {
  return true;
}

void UpdatePublicProfileResponse::Swap(UpdatePublicProfileResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdatePublicProfileResponse::InternalSwap(UpdatePublicProfileResponse* other) {
  using std::swap;
  swap(profile_, other->profile_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdatePublicProfileResponse::GetMetadata() const {
  protobuf_service_5fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SearchUserRequest::InitAsDefaultInstance() {
  ::e8::_SearchUserRequest_default_instance_._instance.get_mutable()->alias_ = const_cast< ::e8::NullableString*>(
      ::e8::NullableString::internal_default_instance());
  ::e8::_SearchUserRequest_default_instance_._instance.get_mutable()->user_id_ = const_cast< ::e8::NullableInt64*>(
      ::e8::NullableInt64::internal_default_instance());
  ::e8::_SearchUserRequest_default_instance_._instance.get_mutable()->pagination_ = const_cast< ::e8::Pagination*>(
      ::e8::Pagination::internal_default_instance());
}
void SearchUserRequest::clear_alias() {
  if (GetArenaNoVirtual() == NULL && alias_ != NULL) {
    delete alias_;
  }
  alias_ = NULL;
}
void SearchUserRequest::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) {
    delete user_id_;
  }
  user_id_ = NULL;
}
void SearchUserRequest::clear_pagination() {
  if (GetArenaNoVirtual() == NULL && pagination_ != NULL) {
    delete pagination_;
  }
  pagination_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchUserRequest::kAliasFieldNumber;
const int SearchUserRequest::kUserIdFieldNumber;
const int SearchUserRequest::kPaginationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchUserRequest::SearchUserRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fuser_2eproto::scc_info_SearchUserRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.SearchUserRequest)
}
SearchUserRequest::SearchUserRequest(const SearchUserRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_alias()) {
    alias_ = new ::e8::NullableString(*from.alias_);
  } else {
    alias_ = NULL;
  }
  if (from.has_user_id()) {
    user_id_ = new ::e8::NullableInt64(*from.user_id_);
  } else {
    user_id_ = NULL;
  }
  if (from.has_pagination()) {
    pagination_ = new ::e8::Pagination(*from.pagination_);
  } else {
    pagination_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:e8.SearchUserRequest)
}

void SearchUserRequest::SharedCtor() {
  ::memset(&alias_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pagination_) -
      reinterpret_cast<char*>(&alias_)) + sizeof(pagination_));
}

SearchUserRequest::~SearchUserRequest() {
  // @@protoc_insertion_point(destructor:e8.SearchUserRequest)
  SharedDtor();
}

void SearchUserRequest::SharedDtor() {
  if (this != internal_default_instance()) delete alias_;
  if (this != internal_default_instance()) delete user_id_;
  if (this != internal_default_instance()) delete pagination_;
}

void SearchUserRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SearchUserRequest::descriptor() {
  ::protobuf_service_5fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchUserRequest& SearchUserRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fuser_2eproto::scc_info_SearchUserRequest.base);
  return *internal_default_instance();
}


void SearchUserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.SearchUserRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && alias_ != NULL) {
    delete alias_;
  }
  alias_ = NULL;
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) {
    delete user_id_;
  }
  user_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && pagination_ != NULL) {
    delete pagination_;
  }
  pagination_ = NULL;
  _internal_metadata_.Clear();
}

bool SearchUserRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.SearchUserRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .e8.NullableString alias = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_alias()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .e8.NullableInt64 user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .e8.Pagination pagination = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pagination()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.SearchUserRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.SearchUserRequest)
  return false;
#undef DO_
}

void SearchUserRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.SearchUserRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .e8.NullableString alias = 1;
  if (this->has_alias()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_alias(), output);
  }

  // .e8.NullableInt64 user_id = 2;
  if (this->has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_user_id(), output);
  }

  // .e8.Pagination pagination = 3;
  if (this->has_pagination()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_pagination(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.SearchUserRequest)
}

::google::protobuf::uint8* SearchUserRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.SearchUserRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .e8.NullableString alias = 1;
  if (this->has_alias()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_alias(), deterministic, target);
  }

  // .e8.NullableInt64 user_id = 2;
  if (this->has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_user_id(), deterministic, target);
  }

  // .e8.Pagination pagination = 3;
  if (this->has_pagination()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_pagination(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.SearchUserRequest)
  return target;
}

size_t SearchUserRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.SearchUserRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .e8.NullableString alias = 1;
  if (this->has_alias()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *alias_);
  }

  // .e8.NullableInt64 user_id = 2;
  if (this->has_user_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *user_id_);
  }

  // .e8.Pagination pagination = 3;
  if (this->has_pagination()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pagination_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SearchUserRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.SearchUserRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchUserRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchUserRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.SearchUserRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.SearchUserRequest)
    MergeFrom(*source);
  }
}

void SearchUserRequest::MergeFrom(const SearchUserRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.SearchUserRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_alias()) {
    mutable_alias()->::e8::NullableString::MergeFrom(from.alias());
  }
  if (from.has_user_id()) {
    mutable_user_id()->::e8::NullableInt64::MergeFrom(from.user_id());
  }
  if (from.has_pagination()) {
    mutable_pagination()->::e8::Pagination::MergeFrom(from.pagination());
  }
}

void SearchUserRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.SearchUserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchUserRequest::CopyFrom(const SearchUserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.SearchUserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchUserRequest::IsInitialized() const {
  return true;
}

void SearchUserRequest::Swap(SearchUserRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchUserRequest::InternalSwap(SearchUserRequest* other) {
  using std::swap;
  swap(alias_, other->alias_);
  swap(user_id_, other->user_id_);
  swap(pagination_, other->pagination_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SearchUserRequest::GetMetadata() const {
  protobuf_service_5fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SearchUserResponse::InitAsDefaultInstance() {
}
void SearchUserResponse::clear_user_profiles() {
  user_profiles_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchUserResponse::kUserProfilesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchUserResponse::SearchUserResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fuser_2eproto::scc_info_SearchUserResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.SearchUserResponse)
}
SearchUserResponse::SearchUserResponse(const SearchUserResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      user_profiles_(from.user_profiles_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:e8.SearchUserResponse)
}

void SearchUserResponse::SharedCtor() {
}

SearchUserResponse::~SearchUserResponse() {
  // @@protoc_insertion_point(destructor:e8.SearchUserResponse)
  SharedDtor();
}

void SearchUserResponse::SharedDtor() {
}

void SearchUserResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SearchUserResponse::descriptor() {
  ::protobuf_service_5fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchUserResponse& SearchUserResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fuser_2eproto::scc_info_SearchUserResponse.base);
  return *internal_default_instance();
}


void SearchUserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.SearchUserResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_profiles_.Clear();
  _internal_metadata_.Clear();
}

bool SearchUserResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.SearchUserResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .e8.UserPublicProfile user_profiles = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_user_profiles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.SearchUserResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.SearchUserResponse)
  return false;
#undef DO_
}

void SearchUserResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.SearchUserResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .e8.UserPublicProfile user_profiles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->user_profiles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->user_profiles(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.SearchUserResponse)
}

::google::protobuf::uint8* SearchUserResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.SearchUserResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .e8.UserPublicProfile user_profiles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->user_profiles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->user_profiles(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.SearchUserResponse)
  return target;
}

size_t SearchUserResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.SearchUserResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .e8.UserPublicProfile user_profiles = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->user_profiles_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->user_profiles(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SearchUserResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.SearchUserResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchUserResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchUserResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.SearchUserResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.SearchUserResponse)
    MergeFrom(*source);
  }
}

void SearchUserResponse::MergeFrom(const SearchUserResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.SearchUserResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  user_profiles_.MergeFrom(from.user_profiles_);
}

void SearchUserResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.SearchUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchUserResponse::CopyFrom(const SearchUserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.SearchUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchUserResponse::IsInitialized() const {
  return true;
}

void SearchUserResponse::Swap(SearchUserResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchUserResponse::InternalSwap(SearchUserResponse* other) {
  using std::swap;
  CastToBase(&user_profiles_)->InternalSwap(CastToBase(&other->user_profiles_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SearchUserResponse::GetMetadata() const {
  protobuf_service_5fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateNewAvatarRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateNewAvatarRequest::kAvatarFileNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateNewAvatarRequest::CreateNewAvatarRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fuser_2eproto::scc_info_CreateNewAvatarRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.CreateNewAvatarRequest)
}
CreateNewAvatarRequest::CreateNewAvatarRequest(const CreateNewAvatarRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  avatar_file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.avatar_file_name().size() > 0) {
    avatar_file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_file_name_);
  }
  // @@protoc_insertion_point(copy_constructor:e8.CreateNewAvatarRequest)
}

void CreateNewAvatarRequest::SharedCtor() {
  avatar_file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CreateNewAvatarRequest::~CreateNewAvatarRequest() {
  // @@protoc_insertion_point(destructor:e8.CreateNewAvatarRequest)
  SharedDtor();
}

void CreateNewAvatarRequest::SharedDtor() {
  avatar_file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateNewAvatarRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateNewAvatarRequest::descriptor() {
  ::protobuf_service_5fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateNewAvatarRequest& CreateNewAvatarRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fuser_2eproto::scc_info_CreateNewAvatarRequest.base);
  return *internal_default_instance();
}


void CreateNewAvatarRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.CreateNewAvatarRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  avatar_file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CreateNewAvatarRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.CreateNewAvatarRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string avatar_file_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_avatar_file_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->avatar_file_name().data(), static_cast<int>(this->avatar_file_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "e8.CreateNewAvatarRequest.avatar_file_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.CreateNewAvatarRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.CreateNewAvatarRequest)
  return false;
#undef DO_
}

void CreateNewAvatarRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.CreateNewAvatarRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string avatar_file_name = 1;
  if (this->avatar_file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->avatar_file_name().data(), static_cast<int>(this->avatar_file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "e8.CreateNewAvatarRequest.avatar_file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->avatar_file_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.CreateNewAvatarRequest)
}

::google::protobuf::uint8* CreateNewAvatarRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.CreateNewAvatarRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string avatar_file_name = 1;
  if (this->avatar_file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->avatar_file_name().data(), static_cast<int>(this->avatar_file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "e8.CreateNewAvatarRequest.avatar_file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->avatar_file_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.CreateNewAvatarRequest)
  return target;
}

size_t CreateNewAvatarRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.CreateNewAvatarRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string avatar_file_name = 1;
  if (this->avatar_file_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->avatar_file_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateNewAvatarRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.CreateNewAvatarRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateNewAvatarRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateNewAvatarRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.CreateNewAvatarRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.CreateNewAvatarRequest)
    MergeFrom(*source);
  }
}

void CreateNewAvatarRequest::MergeFrom(const CreateNewAvatarRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.CreateNewAvatarRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.avatar_file_name().size() > 0) {

    avatar_file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_file_name_);
  }
}

void CreateNewAvatarRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.CreateNewAvatarRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateNewAvatarRequest::CopyFrom(const CreateNewAvatarRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.CreateNewAvatarRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateNewAvatarRequest::IsInitialized() const {
  return true;
}

void CreateNewAvatarRequest::Swap(CreateNewAvatarRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateNewAvatarRequest::InternalSwap(CreateNewAvatarRequest* other) {
  using std::swap;
  avatar_file_name_.Swap(&other->avatar_file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateNewAvatarRequest::GetMetadata() const {
  protobuf_service_5fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateNewAvatarResponse::InitAsDefaultInstance() {
  ::e8::_CreateNewAvatarResponse_default_instance_._instance.get_mutable()->avatar_readwrite_access_ = const_cast< ::e8::FileTokenAccess*>(
      ::e8::FileTokenAccess::internal_default_instance());
}
void CreateNewAvatarResponse::clear_avatar_readwrite_access() {
  if (GetArenaNoVirtual() == NULL && avatar_readwrite_access_ != NULL) {
    delete avatar_readwrite_access_;
  }
  avatar_readwrite_access_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateNewAvatarResponse::kAvatarReadwriteAccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateNewAvatarResponse::CreateNewAvatarResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fuser_2eproto::scc_info_CreateNewAvatarResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.CreateNewAvatarResponse)
}
CreateNewAvatarResponse::CreateNewAvatarResponse(const CreateNewAvatarResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_avatar_readwrite_access()) {
    avatar_readwrite_access_ = new ::e8::FileTokenAccess(*from.avatar_readwrite_access_);
  } else {
    avatar_readwrite_access_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:e8.CreateNewAvatarResponse)
}

void CreateNewAvatarResponse::SharedCtor() {
  avatar_readwrite_access_ = NULL;
}

CreateNewAvatarResponse::~CreateNewAvatarResponse() {
  // @@protoc_insertion_point(destructor:e8.CreateNewAvatarResponse)
  SharedDtor();
}

void CreateNewAvatarResponse::SharedDtor() {
  if (this != internal_default_instance()) delete avatar_readwrite_access_;
}

void CreateNewAvatarResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateNewAvatarResponse::descriptor() {
  ::protobuf_service_5fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateNewAvatarResponse& CreateNewAvatarResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fuser_2eproto::scc_info_CreateNewAvatarResponse.base);
  return *internal_default_instance();
}


void CreateNewAvatarResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.CreateNewAvatarResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && avatar_readwrite_access_ != NULL) {
    delete avatar_readwrite_access_;
  }
  avatar_readwrite_access_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateNewAvatarResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.CreateNewAvatarResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .e8.FileTokenAccess avatar_readwrite_access = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avatar_readwrite_access()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.CreateNewAvatarResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.CreateNewAvatarResponse)
  return false;
#undef DO_
}

void CreateNewAvatarResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.CreateNewAvatarResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .e8.FileTokenAccess avatar_readwrite_access = 1;
  if (this->has_avatar_readwrite_access()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_avatar_readwrite_access(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.CreateNewAvatarResponse)
}

::google::protobuf::uint8* CreateNewAvatarResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.CreateNewAvatarResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .e8.FileTokenAccess avatar_readwrite_access = 1;
  if (this->has_avatar_readwrite_access()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_avatar_readwrite_access(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.CreateNewAvatarResponse)
  return target;
}

size_t CreateNewAvatarResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.CreateNewAvatarResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .e8.FileTokenAccess avatar_readwrite_access = 1;
  if (this->has_avatar_readwrite_access()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *avatar_readwrite_access_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateNewAvatarResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.CreateNewAvatarResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateNewAvatarResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateNewAvatarResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.CreateNewAvatarResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.CreateNewAvatarResponse)
    MergeFrom(*source);
  }
}

void CreateNewAvatarResponse::MergeFrom(const CreateNewAvatarResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.CreateNewAvatarResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_avatar_readwrite_access()) {
    mutable_avatar_readwrite_access()->::e8::FileTokenAccess::MergeFrom(from.avatar_readwrite_access());
  }
}

void CreateNewAvatarResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.CreateNewAvatarResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateNewAvatarResponse::CopyFrom(const CreateNewAvatarResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.CreateNewAvatarResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateNewAvatarResponse::IsInitialized() const {
  return true;
}

void CreateNewAvatarResponse::Swap(CreateNewAvatarResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateNewAvatarResponse::InternalSwap(CreateNewAvatarResponse* other) {
  using std::swap;
  swap(avatar_readwrite_access_, other->avatar_readwrite_access_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateNewAvatarResponse::GetMetadata() const {
  protobuf_service_5fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace e8
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::RegistrationRequest* Arena::CreateMaybeMessage< ::e8::RegistrationRequest >(Arena* arena) {
  return Arena::CreateInternal< ::e8::RegistrationRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::RegistrationReponse* Arena::CreateMaybeMessage< ::e8::RegistrationReponse >(Arena* arena) {
  return Arena::CreateInternal< ::e8::RegistrationReponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::AuthorizationRequest* Arena::CreateMaybeMessage< ::e8::AuthorizationRequest >(Arena* arena) {
  return Arena::CreateInternal< ::e8::AuthorizationRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::AuthorizationResponse* Arena::CreateMaybeMessage< ::e8::AuthorizationResponse >(Arena* arena) {
  return Arena::CreateInternal< ::e8::AuthorizationResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::GetPublicProfileRequest* Arena::CreateMaybeMessage< ::e8::GetPublicProfileRequest >(Arena* arena) {
  return Arena::CreateInternal< ::e8::GetPublicProfileRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::GetPublicProfileResponse* Arena::CreateMaybeMessage< ::e8::GetPublicProfileResponse >(Arena* arena) {
  return Arena::CreateInternal< ::e8::GetPublicProfileResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::UpdatePublicProfileRequest* Arena::CreateMaybeMessage< ::e8::UpdatePublicProfileRequest >(Arena* arena) {
  return Arena::CreateInternal< ::e8::UpdatePublicProfileRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::UpdatePublicProfileResponse* Arena::CreateMaybeMessage< ::e8::UpdatePublicProfileResponse >(Arena* arena) {
  return Arena::CreateInternal< ::e8::UpdatePublicProfileResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::SearchUserRequest* Arena::CreateMaybeMessage< ::e8::SearchUserRequest >(Arena* arena) {
  return Arena::CreateInternal< ::e8::SearchUserRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::SearchUserResponse* Arena::CreateMaybeMessage< ::e8::SearchUserResponse >(Arena* arena) {
  return Arena::CreateInternal< ::e8::SearchUserResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::CreateNewAvatarRequest* Arena::CreateMaybeMessage< ::e8::CreateNewAvatarRequest >(Arena* arena) {
  return Arena::CreateInternal< ::e8::CreateNewAvatarRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::CreateNewAvatarResponse* Arena::CreateMaybeMessage< ::e8::CreateNewAvatarResponse >(Arena* arena) {
  return Arena::CreateInternal< ::e8::CreateNewAvatarResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
