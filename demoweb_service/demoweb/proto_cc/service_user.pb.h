// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service_user.proto

#ifndef PROTOBUF_INCLUDED_service_5fuser_2eproto
#define PROTOBUF_INCLUDED_service_5fuser_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "file.pb.h"
#include "identity.pb.h"
#include "nullable_primitives.pb.h"
#include "pagination.pb.h"
#include "user_profile.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_service_5fuser_2eproto 

namespace protobuf_service_5fuser_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[12];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_service_5fuser_2eproto
namespace e8 {
class AuthorizationRequest;
class AuthorizationRequestDefaultTypeInternal;
extern AuthorizationRequestDefaultTypeInternal _AuthorizationRequest_default_instance_;
class AuthorizationResponse;
class AuthorizationResponseDefaultTypeInternal;
extern AuthorizationResponseDefaultTypeInternal _AuthorizationResponse_default_instance_;
class GetPublicProfileRequest;
class GetPublicProfileRequestDefaultTypeInternal;
extern GetPublicProfileRequestDefaultTypeInternal _GetPublicProfileRequest_default_instance_;
class GetPublicProfileResponse;
class GetPublicProfileResponseDefaultTypeInternal;
extern GetPublicProfileResponseDefaultTypeInternal _GetPublicProfileResponse_default_instance_;
class PrepareNewAvatarRequest;
class PrepareNewAvatarRequestDefaultTypeInternal;
extern PrepareNewAvatarRequestDefaultTypeInternal _PrepareNewAvatarRequest_default_instance_;
class PrepareNewAvatarResponse;
class PrepareNewAvatarResponseDefaultTypeInternal;
extern PrepareNewAvatarResponseDefaultTypeInternal _PrepareNewAvatarResponse_default_instance_;
class RegistrationRequest;
class RegistrationRequestDefaultTypeInternal;
extern RegistrationRequestDefaultTypeInternal _RegistrationRequest_default_instance_;
class RegistrationResponse;
class RegistrationResponseDefaultTypeInternal;
extern RegistrationResponseDefaultTypeInternal _RegistrationResponse_default_instance_;
class SearchUserRequest;
class SearchUserRequestDefaultTypeInternal;
extern SearchUserRequestDefaultTypeInternal _SearchUserRequest_default_instance_;
class SearchUserResponse;
class SearchUserResponseDefaultTypeInternal;
extern SearchUserResponseDefaultTypeInternal _SearchUserResponse_default_instance_;
class UpdatePublicProfileRequest;
class UpdatePublicProfileRequestDefaultTypeInternal;
extern UpdatePublicProfileRequestDefaultTypeInternal _UpdatePublicProfileRequest_default_instance_;
class UpdatePublicProfileResponse;
class UpdatePublicProfileResponseDefaultTypeInternal;
extern UpdatePublicProfileResponseDefaultTypeInternal _UpdatePublicProfileResponse_default_instance_;
}  // namespace e8
namespace google {
namespace protobuf {
template<> ::e8::AuthorizationRequest* Arena::CreateMaybeMessage<::e8::AuthorizationRequest>(Arena*);
template<> ::e8::AuthorizationResponse* Arena::CreateMaybeMessage<::e8::AuthorizationResponse>(Arena*);
template<> ::e8::GetPublicProfileRequest* Arena::CreateMaybeMessage<::e8::GetPublicProfileRequest>(Arena*);
template<> ::e8::GetPublicProfileResponse* Arena::CreateMaybeMessage<::e8::GetPublicProfileResponse>(Arena*);
template<> ::e8::PrepareNewAvatarRequest* Arena::CreateMaybeMessage<::e8::PrepareNewAvatarRequest>(Arena*);
template<> ::e8::PrepareNewAvatarResponse* Arena::CreateMaybeMessage<::e8::PrepareNewAvatarResponse>(Arena*);
template<> ::e8::RegistrationRequest* Arena::CreateMaybeMessage<::e8::RegistrationRequest>(Arena*);
template<> ::e8::RegistrationResponse* Arena::CreateMaybeMessage<::e8::RegistrationResponse>(Arena*);
template<> ::e8::SearchUserRequest* Arena::CreateMaybeMessage<::e8::SearchUserRequest>(Arena*);
template<> ::e8::SearchUserResponse* Arena::CreateMaybeMessage<::e8::SearchUserResponse>(Arena*);
template<> ::e8::UpdatePublicProfileRequest* Arena::CreateMaybeMessage<::e8::UpdatePublicProfileRequest>(Arena*);
template<> ::e8::UpdatePublicProfileResponse* Arena::CreateMaybeMessage<::e8::UpdatePublicProfileResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace e8 {

enum RegistrationResponse_RegistrationErrorType {
  RegistrationResponse_RegistrationErrorType_RET_NoError = 0,
  RegistrationResponse_RegistrationErrorType_RET_BadSecurityKey = 1,
  RegistrationResponse_RegistrationErrorType_RET_BotDetected = 2,
  RegistrationResponse_RegistrationErrorType_RegistrationResponse_RegistrationErrorType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RegistrationResponse_RegistrationErrorType_RegistrationResponse_RegistrationErrorType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RegistrationResponse_RegistrationErrorType_IsValid(int value);
const RegistrationResponse_RegistrationErrorType RegistrationResponse_RegistrationErrorType_RegistrationErrorType_MIN = RegistrationResponse_RegistrationErrorType_RET_NoError;
const RegistrationResponse_RegistrationErrorType RegistrationResponse_RegistrationErrorType_RegistrationErrorType_MAX = RegistrationResponse_RegistrationErrorType_RET_BotDetected;
const int RegistrationResponse_RegistrationErrorType_RegistrationErrorType_ARRAYSIZE = RegistrationResponse_RegistrationErrorType_RegistrationErrorType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RegistrationResponse_RegistrationErrorType_descriptor();
inline const ::std::string& RegistrationResponse_RegistrationErrorType_Name(RegistrationResponse_RegistrationErrorType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RegistrationResponse_RegistrationErrorType_descriptor(), value);
}
inline bool RegistrationResponse_RegistrationErrorType_Parse(
    const ::std::string& name, RegistrationResponse_RegistrationErrorType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RegistrationResponse_RegistrationErrorType>(
    RegistrationResponse_RegistrationErrorType_descriptor(), name, value);
}
// ===================================================================

class RegistrationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.RegistrationRequest) */ {
 public:
  RegistrationRequest();
  virtual ~RegistrationRequest();

  RegistrationRequest(const RegistrationRequest& from);

  inline RegistrationRequest& operator=(const RegistrationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegistrationRequest(RegistrationRequest&& from) noexcept
    : RegistrationRequest() {
    *this = ::std::move(from);
  }

  inline RegistrationRequest& operator=(RegistrationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegistrationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RegistrationRequest* internal_default_instance() {
    return reinterpret_cast<const RegistrationRequest*>(
               &_RegistrationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(RegistrationRequest* other);
  friend void swap(RegistrationRequest& a, RegistrationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegistrationRequest* New() const final {
    return CreateMaybeMessage<RegistrationRequest>(NULL);
  }

  RegistrationRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RegistrationRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RegistrationRequest& from);
  void MergeFrom(const RegistrationRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RegistrationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes security_key = 1;
  void clear_security_key();
  static const int kSecurityKeyFieldNumber = 1;
  const ::std::string& security_key() const;
  void set_security_key(const ::std::string& value);
  #if LANG_CXX11
  void set_security_key(::std::string&& value);
  #endif
  void set_security_key(const char* value);
  void set_security_key(const void* value, size_t size);
  ::std::string* mutable_security_key();
  ::std::string* release_security_key();
  void set_allocated_security_key(::std::string* security_key);

  // @@protoc_insertion_point(class_scope:e8.RegistrationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr security_key_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fuser_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RegistrationResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.RegistrationResponse) */ {
 public:
  RegistrationResponse();
  virtual ~RegistrationResponse();

  RegistrationResponse(const RegistrationResponse& from);

  inline RegistrationResponse& operator=(const RegistrationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegistrationResponse(RegistrationResponse&& from) noexcept
    : RegistrationResponse() {
    *this = ::std::move(from);
  }

  inline RegistrationResponse& operator=(RegistrationResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegistrationResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RegistrationResponse* internal_default_instance() {
    return reinterpret_cast<const RegistrationResponse*>(
               &_RegistrationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(RegistrationResponse* other);
  friend void swap(RegistrationResponse& a, RegistrationResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegistrationResponse* New() const final {
    return CreateMaybeMessage<RegistrationResponse>(NULL);
  }

  RegistrationResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RegistrationResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RegistrationResponse& from);
  void MergeFrom(const RegistrationResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RegistrationResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef RegistrationResponse_RegistrationErrorType RegistrationErrorType;
  static const RegistrationErrorType RET_NoError =
    RegistrationResponse_RegistrationErrorType_RET_NoError;
  static const RegistrationErrorType RET_BadSecurityKey =
    RegistrationResponse_RegistrationErrorType_RET_BadSecurityKey;
  static const RegistrationErrorType RET_BotDetected =
    RegistrationResponse_RegistrationErrorType_RET_BotDetected;
  static inline bool RegistrationErrorType_IsValid(int value) {
    return RegistrationResponse_RegistrationErrorType_IsValid(value);
  }
  static const RegistrationErrorType RegistrationErrorType_MIN =
    RegistrationResponse_RegistrationErrorType_RegistrationErrorType_MIN;
  static const RegistrationErrorType RegistrationErrorType_MAX =
    RegistrationResponse_RegistrationErrorType_RegistrationErrorType_MAX;
  static const int RegistrationErrorType_ARRAYSIZE =
    RegistrationResponse_RegistrationErrorType_RegistrationErrorType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RegistrationErrorType_descriptor() {
    return RegistrationResponse_RegistrationErrorType_descriptor();
  }
  static inline const ::std::string& RegistrationErrorType_Name(RegistrationErrorType value) {
    return RegistrationResponse_RegistrationErrorType_Name(value);
  }
  static inline bool RegistrationErrorType_Parse(const ::std::string& name,
      RegistrationErrorType* value) {
    return RegistrationResponse_RegistrationErrorType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int64 user_id = 3;
  void clear_user_id();
  static const int kUserIdFieldNumber = 3;
  ::google::protobuf::int64 user_id() const;
  void set_user_id(::google::protobuf::int64 value);

  // .e8.RegistrationResponse.RegistrationErrorType error_type = 1;
  void clear_error_type();
  static const int kErrorTypeFieldNumber = 1;
  ::e8::RegistrationResponse_RegistrationErrorType error_type() const;
  void set_error_type(::e8::RegistrationResponse_RegistrationErrorType value);

  // @@protoc_insertion_point(class_scope:e8.RegistrationResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 user_id_;
  int error_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fuser_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AuthorizationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.AuthorizationRequest) */ {
 public:
  AuthorizationRequest();
  virtual ~AuthorizationRequest();

  AuthorizationRequest(const AuthorizationRequest& from);

  inline AuthorizationRequest& operator=(const AuthorizationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AuthorizationRequest(AuthorizationRequest&& from) noexcept
    : AuthorizationRequest() {
    *this = ::std::move(from);
  }

  inline AuthorizationRequest& operator=(AuthorizationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthorizationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AuthorizationRequest* internal_default_instance() {
    return reinterpret_cast<const AuthorizationRequest*>(
               &_AuthorizationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(AuthorizationRequest* other);
  friend void swap(AuthorizationRequest& a, AuthorizationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AuthorizationRequest* New() const final {
    return CreateMaybeMessage<AuthorizationRequest>(NULL);
  }

  AuthorizationRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AuthorizationRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AuthorizationRequest& from);
  void MergeFrom(const AuthorizationRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AuthorizationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes security_key = 2;
  void clear_security_key();
  static const int kSecurityKeyFieldNumber = 2;
  const ::std::string& security_key() const;
  void set_security_key(const ::std::string& value);
  #if LANG_CXX11
  void set_security_key(::std::string&& value);
  #endif
  void set_security_key(const char* value);
  void set_security_key(const void* value, size_t size);
  ::std::string* mutable_security_key();
  ::std::string* release_security_key();
  void set_allocated_security_key(::std::string* security_key);

  // int64 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int64 user_id() const;
  void set_user_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:e8.AuthorizationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr security_key_;
  ::google::protobuf::int64 user_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fuser_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AuthorizationResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.AuthorizationResponse) */ {
 public:
  AuthorizationResponse();
  virtual ~AuthorizationResponse();

  AuthorizationResponse(const AuthorizationResponse& from);

  inline AuthorizationResponse& operator=(const AuthorizationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AuthorizationResponse(AuthorizationResponse&& from) noexcept
    : AuthorizationResponse() {
    *this = ::std::move(from);
  }

  inline AuthorizationResponse& operator=(AuthorizationResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthorizationResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AuthorizationResponse* internal_default_instance() {
    return reinterpret_cast<const AuthorizationResponse*>(
               &_AuthorizationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(AuthorizationResponse* other);
  friend void swap(AuthorizationResponse& a, AuthorizationResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AuthorizationResponse* New() const final {
    return CreateMaybeMessage<AuthorizationResponse>(NULL);
  }

  AuthorizationResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AuthorizationResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AuthorizationResponse& from);
  void MergeFrom(const AuthorizationResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AuthorizationResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .e8.IdentitySignature signed_identity = 1;
  bool has_signed_identity() const;
  void clear_signed_identity();
  static const int kSignedIdentityFieldNumber = 1;
  private:
  const ::e8::IdentitySignature& _internal_signed_identity() const;
  public:
  const ::e8::IdentitySignature& signed_identity() const;
  ::e8::IdentitySignature* release_signed_identity();
  ::e8::IdentitySignature* mutable_signed_identity();
  void set_allocated_signed_identity(::e8::IdentitySignature* signed_identity);

  // @@protoc_insertion_point(class_scope:e8.AuthorizationResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::e8::IdentitySignature* signed_identity_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fuser_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetPublicProfileRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.GetPublicProfileRequest) */ {
 public:
  GetPublicProfileRequest();
  virtual ~GetPublicProfileRequest();

  GetPublicProfileRequest(const GetPublicProfileRequest& from);

  inline GetPublicProfileRequest& operator=(const GetPublicProfileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetPublicProfileRequest(GetPublicProfileRequest&& from) noexcept
    : GetPublicProfileRequest() {
    *this = ::std::move(from);
  }

  inline GetPublicProfileRequest& operator=(GetPublicProfileRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPublicProfileRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetPublicProfileRequest* internal_default_instance() {
    return reinterpret_cast<const GetPublicProfileRequest*>(
               &_GetPublicProfileRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(GetPublicProfileRequest* other);
  friend void swap(GetPublicProfileRequest& a, GetPublicProfileRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetPublicProfileRequest* New() const final {
    return CreateMaybeMessage<GetPublicProfileRequest>(NULL);
  }

  GetPublicProfileRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetPublicProfileRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetPublicProfileRequest& from);
  void MergeFrom(const GetPublicProfileRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetPublicProfileRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int64 user_id() const;
  void set_user_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:e8.GetPublicProfileRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 user_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fuser_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetPublicProfileResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.GetPublicProfileResponse) */ {
 public:
  GetPublicProfileResponse();
  virtual ~GetPublicProfileResponse();

  GetPublicProfileResponse(const GetPublicProfileResponse& from);

  inline GetPublicProfileResponse& operator=(const GetPublicProfileResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetPublicProfileResponse(GetPublicProfileResponse&& from) noexcept
    : GetPublicProfileResponse() {
    *this = ::std::move(from);
  }

  inline GetPublicProfileResponse& operator=(GetPublicProfileResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPublicProfileResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetPublicProfileResponse* internal_default_instance() {
    return reinterpret_cast<const GetPublicProfileResponse*>(
               &_GetPublicProfileResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(GetPublicProfileResponse* other);
  friend void swap(GetPublicProfileResponse& a, GetPublicProfileResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetPublicProfileResponse* New() const final {
    return CreateMaybeMessage<GetPublicProfileResponse>(NULL);
  }

  GetPublicProfileResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetPublicProfileResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetPublicProfileResponse& from);
  void MergeFrom(const GetPublicProfileResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetPublicProfileResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .e8.UserPublicProfile profile = 1;
  bool has_profile() const;
  void clear_profile();
  static const int kProfileFieldNumber = 1;
  private:
  const ::e8::UserPublicProfile& _internal_profile() const;
  public:
  const ::e8::UserPublicProfile& profile() const;
  ::e8::UserPublicProfile* release_profile();
  ::e8::UserPublicProfile* mutable_profile();
  void set_allocated_profile(::e8::UserPublicProfile* profile);

  // @@protoc_insertion_point(class_scope:e8.GetPublicProfileResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::e8::UserPublicProfile* profile_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fuser_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdatePublicProfileRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.UpdatePublicProfileRequest) */ {
 public:
  UpdatePublicProfileRequest();
  virtual ~UpdatePublicProfileRequest();

  UpdatePublicProfileRequest(const UpdatePublicProfileRequest& from);

  inline UpdatePublicProfileRequest& operator=(const UpdatePublicProfileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdatePublicProfileRequest(UpdatePublicProfileRequest&& from) noexcept
    : UpdatePublicProfileRequest() {
    *this = ::std::move(from);
  }

  inline UpdatePublicProfileRequest& operator=(UpdatePublicProfileRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdatePublicProfileRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdatePublicProfileRequest* internal_default_instance() {
    return reinterpret_cast<const UpdatePublicProfileRequest*>(
               &_UpdatePublicProfileRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(UpdatePublicProfileRequest* other);
  friend void swap(UpdatePublicProfileRequest& a, UpdatePublicProfileRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdatePublicProfileRequest* New() const final {
    return CreateMaybeMessage<UpdatePublicProfileRequest>(NULL);
  }

  UpdatePublicProfileRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdatePublicProfileRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdatePublicProfileRequest& from);
  void MergeFrom(const UpdatePublicProfileRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdatePublicProfileRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .e8.NullableString alias = 1;
  bool has_alias() const;
  void clear_alias();
  static const int kAliasFieldNumber = 1;
  private:
  const ::e8::NullableString& _internal_alias() const;
  public:
  const ::e8::NullableString& alias() const;
  ::e8::NullableString* release_alias();
  ::e8::NullableString* mutable_alias();
  void set_allocated_alias(::e8::NullableString* alias);

  // @@protoc_insertion_point(class_scope:e8.UpdatePublicProfileRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::e8::NullableString* alias_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fuser_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdatePublicProfileResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.UpdatePublicProfileResponse) */ {
 public:
  UpdatePublicProfileResponse();
  virtual ~UpdatePublicProfileResponse();

  UpdatePublicProfileResponse(const UpdatePublicProfileResponse& from);

  inline UpdatePublicProfileResponse& operator=(const UpdatePublicProfileResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdatePublicProfileResponse(UpdatePublicProfileResponse&& from) noexcept
    : UpdatePublicProfileResponse() {
    *this = ::std::move(from);
  }

  inline UpdatePublicProfileResponse& operator=(UpdatePublicProfileResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdatePublicProfileResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdatePublicProfileResponse* internal_default_instance() {
    return reinterpret_cast<const UpdatePublicProfileResponse*>(
               &_UpdatePublicProfileResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(UpdatePublicProfileResponse* other);
  friend void swap(UpdatePublicProfileResponse& a, UpdatePublicProfileResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdatePublicProfileResponse* New() const final {
    return CreateMaybeMessage<UpdatePublicProfileResponse>(NULL);
  }

  UpdatePublicProfileResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdatePublicProfileResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdatePublicProfileResponse& from);
  void MergeFrom(const UpdatePublicProfileResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdatePublicProfileResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .e8.UserPublicProfile profile = 1;
  bool has_profile() const;
  void clear_profile();
  static const int kProfileFieldNumber = 1;
  private:
  const ::e8::UserPublicProfile& _internal_profile() const;
  public:
  const ::e8::UserPublicProfile& profile() const;
  ::e8::UserPublicProfile* release_profile();
  ::e8::UserPublicProfile* mutable_profile();
  void set_allocated_profile(::e8::UserPublicProfile* profile);

  // @@protoc_insertion_point(class_scope:e8.UpdatePublicProfileResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::e8::UserPublicProfile* profile_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fuser_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SearchUserRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.SearchUserRequest) */ {
 public:
  SearchUserRequest();
  virtual ~SearchUserRequest();

  SearchUserRequest(const SearchUserRequest& from);

  inline SearchUserRequest& operator=(const SearchUserRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SearchUserRequest(SearchUserRequest&& from) noexcept
    : SearchUserRequest() {
    *this = ::std::move(from);
  }

  inline SearchUserRequest& operator=(SearchUserRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchUserRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SearchUserRequest* internal_default_instance() {
    return reinterpret_cast<const SearchUserRequest*>(
               &_SearchUserRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(SearchUserRequest* other);
  friend void swap(SearchUserRequest& a, SearchUserRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SearchUserRequest* New() const final {
    return CreateMaybeMessage<SearchUserRequest>(NULL);
  }

  SearchUserRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SearchUserRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SearchUserRequest& from);
  void MergeFrom(const SearchUserRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SearchUserRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .e8.NullableString alias = 1;
  bool has_alias() const;
  void clear_alias();
  static const int kAliasFieldNumber = 1;
  private:
  const ::e8::NullableString& _internal_alias() const;
  public:
  const ::e8::NullableString& alias() const;
  ::e8::NullableString* release_alias();
  ::e8::NullableString* mutable_alias();
  void set_allocated_alias(::e8::NullableString* alias);

  // .e8.NullableInt64 user_id = 2;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  private:
  const ::e8::NullableInt64& _internal_user_id() const;
  public:
  const ::e8::NullableInt64& user_id() const;
  ::e8::NullableInt64* release_user_id();
  ::e8::NullableInt64* mutable_user_id();
  void set_allocated_user_id(::e8::NullableInt64* user_id);

  // .e8.Pagination pagination = 3;
  bool has_pagination() const;
  void clear_pagination();
  static const int kPaginationFieldNumber = 3;
  private:
  const ::e8::Pagination& _internal_pagination() const;
  public:
  const ::e8::Pagination& pagination() const;
  ::e8::Pagination* release_pagination();
  ::e8::Pagination* mutable_pagination();
  void set_allocated_pagination(::e8::Pagination* pagination);

  // @@protoc_insertion_point(class_scope:e8.SearchUserRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::e8::NullableString* alias_;
  ::e8::NullableInt64* user_id_;
  ::e8::Pagination* pagination_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fuser_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SearchUserResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.SearchUserResponse) */ {
 public:
  SearchUserResponse();
  virtual ~SearchUserResponse();

  SearchUserResponse(const SearchUserResponse& from);

  inline SearchUserResponse& operator=(const SearchUserResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SearchUserResponse(SearchUserResponse&& from) noexcept
    : SearchUserResponse() {
    *this = ::std::move(from);
  }

  inline SearchUserResponse& operator=(SearchUserResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchUserResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SearchUserResponse* internal_default_instance() {
    return reinterpret_cast<const SearchUserResponse*>(
               &_SearchUserResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(SearchUserResponse* other);
  friend void swap(SearchUserResponse& a, SearchUserResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SearchUserResponse* New() const final {
    return CreateMaybeMessage<SearchUserResponse>(NULL);
  }

  SearchUserResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SearchUserResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SearchUserResponse& from);
  void MergeFrom(const SearchUserResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SearchUserResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .e8.UserPublicProfile user_profiles = 1;
  int user_profiles_size() const;
  void clear_user_profiles();
  static const int kUserProfilesFieldNumber = 1;
  ::e8::UserPublicProfile* mutable_user_profiles(int index);
  ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile >*
      mutable_user_profiles();
  const ::e8::UserPublicProfile& user_profiles(int index) const;
  ::e8::UserPublicProfile* add_user_profiles();
  const ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile >&
      user_profiles() const;

  // @@protoc_insertion_point(class_scope:e8.SearchUserResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile > user_profiles_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fuser_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PrepareNewAvatarRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.PrepareNewAvatarRequest) */ {
 public:
  PrepareNewAvatarRequest();
  virtual ~PrepareNewAvatarRequest();

  PrepareNewAvatarRequest(const PrepareNewAvatarRequest& from);

  inline PrepareNewAvatarRequest& operator=(const PrepareNewAvatarRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PrepareNewAvatarRequest(PrepareNewAvatarRequest&& from) noexcept
    : PrepareNewAvatarRequest() {
    *this = ::std::move(from);
  }

  inline PrepareNewAvatarRequest& operator=(PrepareNewAvatarRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrepareNewAvatarRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PrepareNewAvatarRequest* internal_default_instance() {
    return reinterpret_cast<const PrepareNewAvatarRequest*>(
               &_PrepareNewAvatarRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(PrepareNewAvatarRequest* other);
  friend void swap(PrepareNewAvatarRequest& a, PrepareNewAvatarRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PrepareNewAvatarRequest* New() const final {
    return CreateMaybeMessage<PrepareNewAvatarRequest>(NULL);
  }

  PrepareNewAvatarRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PrepareNewAvatarRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PrepareNewAvatarRequest& from);
  void MergeFrom(const PrepareNewAvatarRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PrepareNewAvatarRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .e8.FileFormat file_format = 1;
  void clear_file_format();
  static const int kFileFormatFieldNumber = 1;
  ::e8::FileFormat file_format() const;
  void set_file_format(::e8::FileFormat value);

  // @@protoc_insertion_point(class_scope:e8.PrepareNewAvatarRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int file_format_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fuser_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PrepareNewAvatarResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.PrepareNewAvatarResponse) */ {
 public:
  PrepareNewAvatarResponse();
  virtual ~PrepareNewAvatarResponse();

  PrepareNewAvatarResponse(const PrepareNewAvatarResponse& from);

  inline PrepareNewAvatarResponse& operator=(const PrepareNewAvatarResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PrepareNewAvatarResponse(PrepareNewAvatarResponse&& from) noexcept
    : PrepareNewAvatarResponse() {
    *this = ::std::move(from);
  }

  inline PrepareNewAvatarResponse& operator=(PrepareNewAvatarResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrepareNewAvatarResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PrepareNewAvatarResponse* internal_default_instance() {
    return reinterpret_cast<const PrepareNewAvatarResponse*>(
               &_PrepareNewAvatarResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(PrepareNewAvatarResponse* other);
  friend void swap(PrepareNewAvatarResponse& a, PrepareNewAvatarResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PrepareNewAvatarResponse* New() const final {
    return CreateMaybeMessage<PrepareNewAvatarResponse>(NULL);
  }

  PrepareNewAvatarResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PrepareNewAvatarResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PrepareNewAvatarResponse& from);
  void MergeFrom(const PrepareNewAvatarResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PrepareNewAvatarResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .e8.FileTokenAccess avatar_readwrite_access = 1;
  bool has_avatar_readwrite_access() const;
  void clear_avatar_readwrite_access();
  static const int kAvatarReadwriteAccessFieldNumber = 1;
  private:
  const ::e8::FileTokenAccess& _internal_avatar_readwrite_access() const;
  public:
  const ::e8::FileTokenAccess& avatar_readwrite_access() const;
  ::e8::FileTokenAccess* release_avatar_readwrite_access();
  ::e8::FileTokenAccess* mutable_avatar_readwrite_access();
  void set_allocated_avatar_readwrite_access(::e8::FileTokenAccess* avatar_readwrite_access);

  // @@protoc_insertion_point(class_scope:e8.PrepareNewAvatarResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::e8::FileTokenAccess* avatar_readwrite_access_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fuser_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RegistrationRequest

// bytes security_key = 1;
inline void RegistrationRequest::clear_security_key() {
  security_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegistrationRequest::security_key() const {
  // @@protoc_insertion_point(field_get:e8.RegistrationRequest.security_key)
  return security_key_.GetNoArena();
}
inline void RegistrationRequest::set_security_key(const ::std::string& value) {
  
  security_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:e8.RegistrationRequest.security_key)
}
#if LANG_CXX11
inline void RegistrationRequest::set_security_key(::std::string&& value) {
  
  security_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:e8.RegistrationRequest.security_key)
}
#endif
inline void RegistrationRequest::set_security_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  security_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:e8.RegistrationRequest.security_key)
}
inline void RegistrationRequest::set_security_key(const void* value, size_t size) {
  
  security_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:e8.RegistrationRequest.security_key)
}
inline ::std::string* RegistrationRequest::mutable_security_key() {
  
  // @@protoc_insertion_point(field_mutable:e8.RegistrationRequest.security_key)
  return security_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegistrationRequest::release_security_key() {
  // @@protoc_insertion_point(field_release:e8.RegistrationRequest.security_key)
  
  return security_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegistrationRequest::set_allocated_security_key(::std::string* security_key) {
  if (security_key != NULL) {
    
  } else {
    
  }
  security_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), security_key);
  // @@protoc_insertion_point(field_set_allocated:e8.RegistrationRequest.security_key)
}

// -------------------------------------------------------------------

// RegistrationResponse

// .e8.RegistrationResponse.RegistrationErrorType error_type = 1;
inline void RegistrationResponse::clear_error_type() {
  error_type_ = 0;
}
inline ::e8::RegistrationResponse_RegistrationErrorType RegistrationResponse::error_type() const {
  // @@protoc_insertion_point(field_get:e8.RegistrationResponse.error_type)
  return static_cast< ::e8::RegistrationResponse_RegistrationErrorType >(error_type_);
}
inline void RegistrationResponse::set_error_type(::e8::RegistrationResponse_RegistrationErrorType value) {
  
  error_type_ = value;
  // @@protoc_insertion_point(field_set:e8.RegistrationResponse.error_type)
}

// int64 user_id = 3;
inline void RegistrationResponse::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RegistrationResponse::user_id() const {
  // @@protoc_insertion_point(field_get:e8.RegistrationResponse.user_id)
  return user_id_;
}
inline void RegistrationResponse::set_user_id(::google::protobuf::int64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:e8.RegistrationResponse.user_id)
}

// -------------------------------------------------------------------

// AuthorizationRequest

// int64 user_id = 1;
inline void AuthorizationRequest::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AuthorizationRequest::user_id() const {
  // @@protoc_insertion_point(field_get:e8.AuthorizationRequest.user_id)
  return user_id_;
}
inline void AuthorizationRequest::set_user_id(::google::protobuf::int64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:e8.AuthorizationRequest.user_id)
}

// bytes security_key = 2;
inline void AuthorizationRequest::clear_security_key() {
  security_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthorizationRequest::security_key() const {
  // @@protoc_insertion_point(field_get:e8.AuthorizationRequest.security_key)
  return security_key_.GetNoArena();
}
inline void AuthorizationRequest::set_security_key(const ::std::string& value) {
  
  security_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:e8.AuthorizationRequest.security_key)
}
#if LANG_CXX11
inline void AuthorizationRequest::set_security_key(::std::string&& value) {
  
  security_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:e8.AuthorizationRequest.security_key)
}
#endif
inline void AuthorizationRequest::set_security_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  security_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:e8.AuthorizationRequest.security_key)
}
inline void AuthorizationRequest::set_security_key(const void* value, size_t size) {
  
  security_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:e8.AuthorizationRequest.security_key)
}
inline ::std::string* AuthorizationRequest::mutable_security_key() {
  
  // @@protoc_insertion_point(field_mutable:e8.AuthorizationRequest.security_key)
  return security_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthorizationRequest::release_security_key() {
  // @@protoc_insertion_point(field_release:e8.AuthorizationRequest.security_key)
  
  return security_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthorizationRequest::set_allocated_security_key(::std::string* security_key) {
  if (security_key != NULL) {
    
  } else {
    
  }
  security_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), security_key);
  // @@protoc_insertion_point(field_set_allocated:e8.AuthorizationRequest.security_key)
}

// -------------------------------------------------------------------

// AuthorizationResponse

// .e8.IdentitySignature signed_identity = 1;
inline bool AuthorizationResponse::has_signed_identity() const {
  return this != internal_default_instance() && signed_identity_ != NULL;
}
inline const ::e8::IdentitySignature& AuthorizationResponse::_internal_signed_identity() const {
  return *signed_identity_;
}
inline const ::e8::IdentitySignature& AuthorizationResponse::signed_identity() const {
  const ::e8::IdentitySignature* p = signed_identity_;
  // @@protoc_insertion_point(field_get:e8.AuthorizationResponse.signed_identity)
  return p != NULL ? *p : *reinterpret_cast<const ::e8::IdentitySignature*>(
      &::e8::_IdentitySignature_default_instance_);
}
inline ::e8::IdentitySignature* AuthorizationResponse::release_signed_identity() {
  // @@protoc_insertion_point(field_release:e8.AuthorizationResponse.signed_identity)
  
  ::e8::IdentitySignature* temp = signed_identity_;
  signed_identity_ = NULL;
  return temp;
}
inline ::e8::IdentitySignature* AuthorizationResponse::mutable_signed_identity() {
  
  if (signed_identity_ == NULL) {
    auto* p = CreateMaybeMessage<::e8::IdentitySignature>(GetArenaNoVirtual());
    signed_identity_ = p;
  }
  // @@protoc_insertion_point(field_mutable:e8.AuthorizationResponse.signed_identity)
  return signed_identity_;
}
inline void AuthorizationResponse::set_allocated_signed_identity(::e8::IdentitySignature* signed_identity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(signed_identity_);
  }
  if (signed_identity) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      signed_identity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, signed_identity, submessage_arena);
    }
    
  } else {
    
  }
  signed_identity_ = signed_identity;
  // @@protoc_insertion_point(field_set_allocated:e8.AuthorizationResponse.signed_identity)
}

// -------------------------------------------------------------------

// GetPublicProfileRequest

// int64 user_id = 1;
inline void GetPublicProfileRequest::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetPublicProfileRequest::user_id() const {
  // @@protoc_insertion_point(field_get:e8.GetPublicProfileRequest.user_id)
  return user_id_;
}
inline void GetPublicProfileRequest::set_user_id(::google::protobuf::int64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:e8.GetPublicProfileRequest.user_id)
}

// -------------------------------------------------------------------

// GetPublicProfileResponse

// .e8.UserPublicProfile profile = 1;
inline bool GetPublicProfileResponse::has_profile() const {
  return this != internal_default_instance() && profile_ != NULL;
}
inline const ::e8::UserPublicProfile& GetPublicProfileResponse::_internal_profile() const {
  return *profile_;
}
inline const ::e8::UserPublicProfile& GetPublicProfileResponse::profile() const {
  const ::e8::UserPublicProfile* p = profile_;
  // @@protoc_insertion_point(field_get:e8.GetPublicProfileResponse.profile)
  return p != NULL ? *p : *reinterpret_cast<const ::e8::UserPublicProfile*>(
      &::e8::_UserPublicProfile_default_instance_);
}
inline ::e8::UserPublicProfile* GetPublicProfileResponse::release_profile() {
  // @@protoc_insertion_point(field_release:e8.GetPublicProfileResponse.profile)
  
  ::e8::UserPublicProfile* temp = profile_;
  profile_ = NULL;
  return temp;
}
inline ::e8::UserPublicProfile* GetPublicProfileResponse::mutable_profile() {
  
  if (profile_ == NULL) {
    auto* p = CreateMaybeMessage<::e8::UserPublicProfile>(GetArenaNoVirtual());
    profile_ = p;
  }
  // @@protoc_insertion_point(field_mutable:e8.GetPublicProfileResponse.profile)
  return profile_;
}
inline void GetPublicProfileResponse::set_allocated_profile(::e8::UserPublicProfile* profile) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(profile_);
  }
  if (profile) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      profile = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, profile, submessage_arena);
    }
    
  } else {
    
  }
  profile_ = profile;
  // @@protoc_insertion_point(field_set_allocated:e8.GetPublicProfileResponse.profile)
}

// -------------------------------------------------------------------

// UpdatePublicProfileRequest

// .e8.NullableString alias = 1;
inline bool UpdatePublicProfileRequest::has_alias() const {
  return this != internal_default_instance() && alias_ != NULL;
}
inline const ::e8::NullableString& UpdatePublicProfileRequest::_internal_alias() const {
  return *alias_;
}
inline const ::e8::NullableString& UpdatePublicProfileRequest::alias() const {
  const ::e8::NullableString* p = alias_;
  // @@protoc_insertion_point(field_get:e8.UpdatePublicProfileRequest.alias)
  return p != NULL ? *p : *reinterpret_cast<const ::e8::NullableString*>(
      &::e8::_NullableString_default_instance_);
}
inline ::e8::NullableString* UpdatePublicProfileRequest::release_alias() {
  // @@protoc_insertion_point(field_release:e8.UpdatePublicProfileRequest.alias)
  
  ::e8::NullableString* temp = alias_;
  alias_ = NULL;
  return temp;
}
inline ::e8::NullableString* UpdatePublicProfileRequest::mutable_alias() {
  
  if (alias_ == NULL) {
    auto* p = CreateMaybeMessage<::e8::NullableString>(GetArenaNoVirtual());
    alias_ = p;
  }
  // @@protoc_insertion_point(field_mutable:e8.UpdatePublicProfileRequest.alias)
  return alias_;
}
inline void UpdatePublicProfileRequest::set_allocated_alias(::e8::NullableString* alias) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(alias_);
  }
  if (alias) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      alias = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, alias, submessage_arena);
    }
    
  } else {
    
  }
  alias_ = alias;
  // @@protoc_insertion_point(field_set_allocated:e8.UpdatePublicProfileRequest.alias)
}

// -------------------------------------------------------------------

// UpdatePublicProfileResponse

// .e8.UserPublicProfile profile = 1;
inline bool UpdatePublicProfileResponse::has_profile() const {
  return this != internal_default_instance() && profile_ != NULL;
}
inline const ::e8::UserPublicProfile& UpdatePublicProfileResponse::_internal_profile() const {
  return *profile_;
}
inline const ::e8::UserPublicProfile& UpdatePublicProfileResponse::profile() const {
  const ::e8::UserPublicProfile* p = profile_;
  // @@protoc_insertion_point(field_get:e8.UpdatePublicProfileResponse.profile)
  return p != NULL ? *p : *reinterpret_cast<const ::e8::UserPublicProfile*>(
      &::e8::_UserPublicProfile_default_instance_);
}
inline ::e8::UserPublicProfile* UpdatePublicProfileResponse::release_profile() {
  // @@protoc_insertion_point(field_release:e8.UpdatePublicProfileResponse.profile)
  
  ::e8::UserPublicProfile* temp = profile_;
  profile_ = NULL;
  return temp;
}
inline ::e8::UserPublicProfile* UpdatePublicProfileResponse::mutable_profile() {
  
  if (profile_ == NULL) {
    auto* p = CreateMaybeMessage<::e8::UserPublicProfile>(GetArenaNoVirtual());
    profile_ = p;
  }
  // @@protoc_insertion_point(field_mutable:e8.UpdatePublicProfileResponse.profile)
  return profile_;
}
inline void UpdatePublicProfileResponse::set_allocated_profile(::e8::UserPublicProfile* profile) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(profile_);
  }
  if (profile) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      profile = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, profile, submessage_arena);
    }
    
  } else {
    
  }
  profile_ = profile;
  // @@protoc_insertion_point(field_set_allocated:e8.UpdatePublicProfileResponse.profile)
}

// -------------------------------------------------------------------

// SearchUserRequest

// .e8.NullableString alias = 1;
inline bool SearchUserRequest::has_alias() const {
  return this != internal_default_instance() && alias_ != NULL;
}
inline const ::e8::NullableString& SearchUserRequest::_internal_alias() const {
  return *alias_;
}
inline const ::e8::NullableString& SearchUserRequest::alias() const {
  const ::e8::NullableString* p = alias_;
  // @@protoc_insertion_point(field_get:e8.SearchUserRequest.alias)
  return p != NULL ? *p : *reinterpret_cast<const ::e8::NullableString*>(
      &::e8::_NullableString_default_instance_);
}
inline ::e8::NullableString* SearchUserRequest::release_alias() {
  // @@protoc_insertion_point(field_release:e8.SearchUserRequest.alias)
  
  ::e8::NullableString* temp = alias_;
  alias_ = NULL;
  return temp;
}
inline ::e8::NullableString* SearchUserRequest::mutable_alias() {
  
  if (alias_ == NULL) {
    auto* p = CreateMaybeMessage<::e8::NullableString>(GetArenaNoVirtual());
    alias_ = p;
  }
  // @@protoc_insertion_point(field_mutable:e8.SearchUserRequest.alias)
  return alias_;
}
inline void SearchUserRequest::set_allocated_alias(::e8::NullableString* alias) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(alias_);
  }
  if (alias) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      alias = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, alias, submessage_arena);
    }
    
  } else {
    
  }
  alias_ = alias;
  // @@protoc_insertion_point(field_set_allocated:e8.SearchUserRequest.alias)
}

// .e8.NullableInt64 user_id = 2;
inline bool SearchUserRequest::has_user_id() const {
  return this != internal_default_instance() && user_id_ != NULL;
}
inline const ::e8::NullableInt64& SearchUserRequest::_internal_user_id() const {
  return *user_id_;
}
inline const ::e8::NullableInt64& SearchUserRequest::user_id() const {
  const ::e8::NullableInt64* p = user_id_;
  // @@protoc_insertion_point(field_get:e8.SearchUserRequest.user_id)
  return p != NULL ? *p : *reinterpret_cast<const ::e8::NullableInt64*>(
      &::e8::_NullableInt64_default_instance_);
}
inline ::e8::NullableInt64* SearchUserRequest::release_user_id() {
  // @@protoc_insertion_point(field_release:e8.SearchUserRequest.user_id)
  
  ::e8::NullableInt64* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
inline ::e8::NullableInt64* SearchUserRequest::mutable_user_id() {
  
  if (user_id_ == NULL) {
    auto* p = CreateMaybeMessage<::e8::NullableInt64>(GetArenaNoVirtual());
    user_id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:e8.SearchUserRequest.user_id)
  return user_id_;
}
inline void SearchUserRequest::set_allocated_user_id(::e8::NullableInt64* user_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(user_id_);
  }
  if (user_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      user_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, user_id, submessage_arena);
    }
    
  } else {
    
  }
  user_id_ = user_id;
  // @@protoc_insertion_point(field_set_allocated:e8.SearchUserRequest.user_id)
}

// .e8.Pagination pagination = 3;
inline bool SearchUserRequest::has_pagination() const {
  return this != internal_default_instance() && pagination_ != NULL;
}
inline const ::e8::Pagination& SearchUserRequest::_internal_pagination() const {
  return *pagination_;
}
inline const ::e8::Pagination& SearchUserRequest::pagination() const {
  const ::e8::Pagination* p = pagination_;
  // @@protoc_insertion_point(field_get:e8.SearchUserRequest.pagination)
  return p != NULL ? *p : *reinterpret_cast<const ::e8::Pagination*>(
      &::e8::_Pagination_default_instance_);
}
inline ::e8::Pagination* SearchUserRequest::release_pagination() {
  // @@protoc_insertion_point(field_release:e8.SearchUserRequest.pagination)
  
  ::e8::Pagination* temp = pagination_;
  pagination_ = NULL;
  return temp;
}
inline ::e8::Pagination* SearchUserRequest::mutable_pagination() {
  
  if (pagination_ == NULL) {
    auto* p = CreateMaybeMessage<::e8::Pagination>(GetArenaNoVirtual());
    pagination_ = p;
  }
  // @@protoc_insertion_point(field_mutable:e8.SearchUserRequest.pagination)
  return pagination_;
}
inline void SearchUserRequest::set_allocated_pagination(::e8::Pagination* pagination) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pagination_);
  }
  if (pagination) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pagination = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pagination, submessage_arena);
    }
    
  } else {
    
  }
  pagination_ = pagination;
  // @@protoc_insertion_point(field_set_allocated:e8.SearchUserRequest.pagination)
}

// -------------------------------------------------------------------

// SearchUserResponse

// repeated .e8.UserPublicProfile user_profiles = 1;
inline int SearchUserResponse::user_profiles_size() const {
  return user_profiles_.size();
}
inline ::e8::UserPublicProfile* SearchUserResponse::mutable_user_profiles(int index) {
  // @@protoc_insertion_point(field_mutable:e8.SearchUserResponse.user_profiles)
  return user_profiles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile >*
SearchUserResponse::mutable_user_profiles() {
  // @@protoc_insertion_point(field_mutable_list:e8.SearchUserResponse.user_profiles)
  return &user_profiles_;
}
inline const ::e8::UserPublicProfile& SearchUserResponse::user_profiles(int index) const {
  // @@protoc_insertion_point(field_get:e8.SearchUserResponse.user_profiles)
  return user_profiles_.Get(index);
}
inline ::e8::UserPublicProfile* SearchUserResponse::add_user_profiles() {
  // @@protoc_insertion_point(field_add:e8.SearchUserResponse.user_profiles)
  return user_profiles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile >&
SearchUserResponse::user_profiles() const {
  // @@protoc_insertion_point(field_list:e8.SearchUserResponse.user_profiles)
  return user_profiles_;
}

// -------------------------------------------------------------------

// PrepareNewAvatarRequest

// .e8.FileFormat file_format = 1;
inline void PrepareNewAvatarRequest::clear_file_format() {
  file_format_ = 0;
}
inline ::e8::FileFormat PrepareNewAvatarRequest::file_format() const {
  // @@protoc_insertion_point(field_get:e8.PrepareNewAvatarRequest.file_format)
  return static_cast< ::e8::FileFormat >(file_format_);
}
inline void PrepareNewAvatarRequest::set_file_format(::e8::FileFormat value) {
  
  file_format_ = value;
  // @@protoc_insertion_point(field_set:e8.PrepareNewAvatarRequest.file_format)
}

// -------------------------------------------------------------------

// PrepareNewAvatarResponse

// .e8.FileTokenAccess avatar_readwrite_access = 1;
inline bool PrepareNewAvatarResponse::has_avatar_readwrite_access() const {
  return this != internal_default_instance() && avatar_readwrite_access_ != NULL;
}
inline const ::e8::FileTokenAccess& PrepareNewAvatarResponse::_internal_avatar_readwrite_access() const {
  return *avatar_readwrite_access_;
}
inline const ::e8::FileTokenAccess& PrepareNewAvatarResponse::avatar_readwrite_access() const {
  const ::e8::FileTokenAccess* p = avatar_readwrite_access_;
  // @@protoc_insertion_point(field_get:e8.PrepareNewAvatarResponse.avatar_readwrite_access)
  return p != NULL ? *p : *reinterpret_cast<const ::e8::FileTokenAccess*>(
      &::e8::_FileTokenAccess_default_instance_);
}
inline ::e8::FileTokenAccess* PrepareNewAvatarResponse::release_avatar_readwrite_access() {
  // @@protoc_insertion_point(field_release:e8.PrepareNewAvatarResponse.avatar_readwrite_access)
  
  ::e8::FileTokenAccess* temp = avatar_readwrite_access_;
  avatar_readwrite_access_ = NULL;
  return temp;
}
inline ::e8::FileTokenAccess* PrepareNewAvatarResponse::mutable_avatar_readwrite_access() {
  
  if (avatar_readwrite_access_ == NULL) {
    auto* p = CreateMaybeMessage<::e8::FileTokenAccess>(GetArenaNoVirtual());
    avatar_readwrite_access_ = p;
  }
  // @@protoc_insertion_point(field_mutable:e8.PrepareNewAvatarResponse.avatar_readwrite_access)
  return avatar_readwrite_access_;
}
inline void PrepareNewAvatarResponse::set_allocated_avatar_readwrite_access(::e8::FileTokenAccess* avatar_readwrite_access) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avatar_readwrite_access_);
  }
  if (avatar_readwrite_access) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avatar_readwrite_access = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avatar_readwrite_access, submessage_arena);
    }
    
  } else {
    
  }
  avatar_readwrite_access_ = avatar_readwrite_access;
  // @@protoc_insertion_point(field_set_allocated:e8.PrepareNewAvatarResponse.avatar_readwrite_access)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace e8

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::e8::RegistrationResponse_RegistrationErrorType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::e8::RegistrationResponse_RegistrationErrorType>() {
  return ::e8::RegistrationResponse_RegistrationErrorType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_service_5fuser_2eproto
