// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service_socialnetwork.proto

#ifndef PROTOBUF_INCLUDED_service_5fsocialnetwork_2eproto
#define PROTOBUF_INCLUDED_service_5fsocialnetwork_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "pagination.pb.h"
#include "user_profile.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_service_5fsocialnetwork_2eproto 

namespace protobuf_service_5fsocialnetwork_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[14];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_service_5fsocialnetwork_2eproto
namespace e8 {
class AcceptInvitationRequest;
class AcceptInvitationRequestDefaultTypeInternal;
extern AcceptInvitationRequestDefaultTypeInternal _AcceptInvitationRequest_default_instance_;
class AcceptInvitationResponse;
class AcceptInvitationResponseDefaultTypeInternal;
extern AcceptInvitationResponseDefaultTypeInternal _AcceptInvitationResponse_default_instance_;
class DeleteFriendRequest;
class DeleteFriendRequestDefaultTypeInternal;
extern DeleteFriendRequestDefaultTypeInternal _DeleteFriendRequest_default_instance_;
class DeleteFriendResponse;
class DeleteFriendResponseDefaultTypeInternal;
extern DeleteFriendResponseDefaultTypeInternal _DeleteFriendResponse_default_instance_;
class DeleteInvitationRequest;
class DeleteInvitationRequestDefaultTypeInternal;
extern DeleteInvitationRequestDefaultTypeInternal _DeleteInvitationRequest_default_instance_;
class DeleteInvitationResponse;
class DeleteInvitationResponseDefaultTypeInternal;
extern DeleteInvitationResponseDefaultTypeInternal _DeleteInvitationResponse_default_instance_;
class GetFriendListRequest;
class GetFriendListRequestDefaultTypeInternal;
extern GetFriendListRequestDefaultTypeInternal _GetFriendListRequest_default_instance_;
class GetFriendListResponse;
class GetFriendListResponseDefaultTypeInternal;
extern GetFriendListResponseDefaultTypeInternal _GetFriendListResponse_default_instance_;
class GetInvitationListRequest;
class GetInvitationListRequestDefaultTypeInternal;
extern GetInvitationListRequestDefaultTypeInternal _GetInvitationListRequest_default_instance_;
class GetInvitationListResponse;
class GetInvitationListResponseDefaultTypeInternal;
extern GetInvitationListResponseDefaultTypeInternal _GetInvitationListResponse_default_instance_;
class RejectInvitationRequest;
class RejectInvitationRequestDefaultTypeInternal;
extern RejectInvitationRequestDefaultTypeInternal _RejectInvitationRequest_default_instance_;
class RejectInvitationResponse;
class RejectInvitationResponseDefaultTypeInternal;
extern RejectInvitationResponseDefaultTypeInternal _RejectInvitationResponse_default_instance_;
class SendInvitationRequest;
class SendInvitationRequestDefaultTypeInternal;
extern SendInvitationRequestDefaultTypeInternal _SendInvitationRequest_default_instance_;
class SendInvitationResponse;
class SendInvitationResponseDefaultTypeInternal;
extern SendInvitationResponseDefaultTypeInternal _SendInvitationResponse_default_instance_;
}  // namespace e8
namespace google {
namespace protobuf {
template<> ::e8::AcceptInvitationRequest* Arena::CreateMaybeMessage<::e8::AcceptInvitationRequest>(Arena*);
template<> ::e8::AcceptInvitationResponse* Arena::CreateMaybeMessage<::e8::AcceptInvitationResponse>(Arena*);
template<> ::e8::DeleteFriendRequest* Arena::CreateMaybeMessage<::e8::DeleteFriendRequest>(Arena*);
template<> ::e8::DeleteFriendResponse* Arena::CreateMaybeMessage<::e8::DeleteFriendResponse>(Arena*);
template<> ::e8::DeleteInvitationRequest* Arena::CreateMaybeMessage<::e8::DeleteInvitationRequest>(Arena*);
template<> ::e8::DeleteInvitationResponse* Arena::CreateMaybeMessage<::e8::DeleteInvitationResponse>(Arena*);
template<> ::e8::GetFriendListRequest* Arena::CreateMaybeMessage<::e8::GetFriendListRequest>(Arena*);
template<> ::e8::GetFriendListResponse* Arena::CreateMaybeMessage<::e8::GetFriendListResponse>(Arena*);
template<> ::e8::GetInvitationListRequest* Arena::CreateMaybeMessage<::e8::GetInvitationListRequest>(Arena*);
template<> ::e8::GetInvitationListResponse* Arena::CreateMaybeMessage<::e8::GetInvitationListResponse>(Arena*);
template<> ::e8::RejectInvitationRequest* Arena::CreateMaybeMessage<::e8::RejectInvitationRequest>(Arena*);
template<> ::e8::RejectInvitationResponse* Arena::CreateMaybeMessage<::e8::RejectInvitationResponse>(Arena*);
template<> ::e8::SendInvitationRequest* Arena::CreateMaybeMessage<::e8::SendInvitationRequest>(Arena*);
template<> ::e8::SendInvitationResponse* Arena::CreateMaybeMessage<::e8::SendInvitationResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace e8 {

// ===================================================================

class SendInvitationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.SendInvitationRequest) */ {
 public:
  SendInvitationRequest();
  virtual ~SendInvitationRequest();

  SendInvitationRequest(const SendInvitationRequest& from);

  inline SendInvitationRequest& operator=(const SendInvitationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendInvitationRequest(SendInvitationRequest&& from) noexcept
    : SendInvitationRequest() {
    *this = ::std::move(from);
  }

  inline SendInvitationRequest& operator=(SendInvitationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SendInvitationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendInvitationRequest* internal_default_instance() {
    return reinterpret_cast<const SendInvitationRequest*>(
               &_SendInvitationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(SendInvitationRequest* other);
  friend void swap(SendInvitationRequest& a, SendInvitationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendInvitationRequest* New() const final {
    return CreateMaybeMessage<SendInvitationRequest>(NULL);
  }

  SendInvitationRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SendInvitationRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SendInvitationRequest& from);
  void MergeFrom(const SendInvitationRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendInvitationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 invitee_user_id = 1;
  void clear_invitee_user_id();
  static const int kInviteeUserIdFieldNumber = 1;
  ::google::protobuf::int64 invitee_user_id() const;
  void set_invitee_user_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:e8.SendInvitationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 invitee_user_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendInvitationResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.SendInvitationResponse) */ {
 public:
  SendInvitationResponse();
  virtual ~SendInvitationResponse();

  SendInvitationResponse(const SendInvitationResponse& from);

  inline SendInvitationResponse& operator=(const SendInvitationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendInvitationResponse(SendInvitationResponse&& from) noexcept
    : SendInvitationResponse() {
    *this = ::std::move(from);
  }

  inline SendInvitationResponse& operator=(SendInvitationResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SendInvitationResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendInvitationResponse* internal_default_instance() {
    return reinterpret_cast<const SendInvitationResponse*>(
               &_SendInvitationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(SendInvitationResponse* other);
  friend void swap(SendInvitationResponse& a, SendInvitationResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendInvitationResponse* New() const final {
    return CreateMaybeMessage<SendInvitationResponse>(NULL);
  }

  SendInvitationResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SendInvitationResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SendInvitationResponse& from);
  void MergeFrom(const SendInvitationResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendInvitationResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:e8.SendInvitationResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteInvitationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.DeleteInvitationRequest) */ {
 public:
  DeleteInvitationRequest();
  virtual ~DeleteInvitationRequest();

  DeleteInvitationRequest(const DeleteInvitationRequest& from);

  inline DeleteInvitationRequest& operator=(const DeleteInvitationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteInvitationRequest(DeleteInvitationRequest&& from) noexcept
    : DeleteInvitationRequest() {
    *this = ::std::move(from);
  }

  inline DeleteInvitationRequest& operator=(DeleteInvitationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteInvitationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteInvitationRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteInvitationRequest*>(
               &_DeleteInvitationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(DeleteInvitationRequest* other);
  friend void swap(DeleteInvitationRequest& a, DeleteInvitationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteInvitationRequest* New() const final {
    return CreateMaybeMessage<DeleteInvitationRequest>(NULL);
  }

  DeleteInvitationRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteInvitationRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteInvitationRequest& from);
  void MergeFrom(const DeleteInvitationRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteInvitationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 invitee_user_id = 1;
  void clear_invitee_user_id();
  static const int kInviteeUserIdFieldNumber = 1;
  ::google::protobuf::int64 invitee_user_id() const;
  void set_invitee_user_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:e8.DeleteInvitationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 invitee_user_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteInvitationResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.DeleteInvitationResponse) */ {
 public:
  DeleteInvitationResponse();
  virtual ~DeleteInvitationResponse();

  DeleteInvitationResponse(const DeleteInvitationResponse& from);

  inline DeleteInvitationResponse& operator=(const DeleteInvitationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteInvitationResponse(DeleteInvitationResponse&& from) noexcept
    : DeleteInvitationResponse() {
    *this = ::std::move(from);
  }

  inline DeleteInvitationResponse& operator=(DeleteInvitationResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteInvitationResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteInvitationResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteInvitationResponse*>(
               &_DeleteInvitationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(DeleteInvitationResponse* other);
  friend void swap(DeleteInvitationResponse& a, DeleteInvitationResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteInvitationResponse* New() const final {
    return CreateMaybeMessage<DeleteInvitationResponse>(NULL);
  }

  DeleteInvitationResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteInvitationResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteInvitationResponse& from);
  void MergeFrom(const DeleteInvitationResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteInvitationResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:e8.DeleteInvitationResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AcceptInvitationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.AcceptInvitationRequest) */ {
 public:
  AcceptInvitationRequest();
  virtual ~AcceptInvitationRequest();

  AcceptInvitationRequest(const AcceptInvitationRequest& from);

  inline AcceptInvitationRequest& operator=(const AcceptInvitationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AcceptInvitationRequest(AcceptInvitationRequest&& from) noexcept
    : AcceptInvitationRequest() {
    *this = ::std::move(from);
  }

  inline AcceptInvitationRequest& operator=(AcceptInvitationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AcceptInvitationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AcceptInvitationRequest* internal_default_instance() {
    return reinterpret_cast<const AcceptInvitationRequest*>(
               &_AcceptInvitationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(AcceptInvitationRequest* other);
  friend void swap(AcceptInvitationRequest& a, AcceptInvitationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AcceptInvitationRequest* New() const final {
    return CreateMaybeMessage<AcceptInvitationRequest>(NULL);
  }

  AcceptInvitationRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AcceptInvitationRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AcceptInvitationRequest& from);
  void MergeFrom(const AcceptInvitationRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AcceptInvitationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 inviter_user_id = 1;
  void clear_inviter_user_id();
  static const int kInviterUserIdFieldNumber = 1;
  ::google::protobuf::int64 inviter_user_id() const;
  void set_inviter_user_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:e8.AcceptInvitationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 inviter_user_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AcceptInvitationResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.AcceptInvitationResponse) */ {
 public:
  AcceptInvitationResponse();
  virtual ~AcceptInvitationResponse();

  AcceptInvitationResponse(const AcceptInvitationResponse& from);

  inline AcceptInvitationResponse& operator=(const AcceptInvitationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AcceptInvitationResponse(AcceptInvitationResponse&& from) noexcept
    : AcceptInvitationResponse() {
    *this = ::std::move(from);
  }

  inline AcceptInvitationResponse& operator=(AcceptInvitationResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AcceptInvitationResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AcceptInvitationResponse* internal_default_instance() {
    return reinterpret_cast<const AcceptInvitationResponse*>(
               &_AcceptInvitationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(AcceptInvitationResponse* other);
  friend void swap(AcceptInvitationResponse& a, AcceptInvitationResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AcceptInvitationResponse* New() const final {
    return CreateMaybeMessage<AcceptInvitationResponse>(NULL);
  }

  AcceptInvitationResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AcceptInvitationResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AcceptInvitationResponse& from);
  void MergeFrom(const AcceptInvitationResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AcceptInvitationResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:e8.AcceptInvitationResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RejectInvitationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.RejectInvitationRequest) */ {
 public:
  RejectInvitationRequest();
  virtual ~RejectInvitationRequest();

  RejectInvitationRequest(const RejectInvitationRequest& from);

  inline RejectInvitationRequest& operator=(const RejectInvitationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RejectInvitationRequest(RejectInvitationRequest&& from) noexcept
    : RejectInvitationRequest() {
    *this = ::std::move(from);
  }

  inline RejectInvitationRequest& operator=(RejectInvitationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RejectInvitationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RejectInvitationRequest* internal_default_instance() {
    return reinterpret_cast<const RejectInvitationRequest*>(
               &_RejectInvitationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(RejectInvitationRequest* other);
  friend void swap(RejectInvitationRequest& a, RejectInvitationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RejectInvitationRequest* New() const final {
    return CreateMaybeMessage<RejectInvitationRequest>(NULL);
  }

  RejectInvitationRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RejectInvitationRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RejectInvitationRequest& from);
  void MergeFrom(const RejectInvitationRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RejectInvitationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 inviter_user_id = 1;
  void clear_inviter_user_id();
  static const int kInviterUserIdFieldNumber = 1;
  ::google::protobuf::int64 inviter_user_id() const;
  void set_inviter_user_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:e8.RejectInvitationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 inviter_user_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RejectInvitationResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.RejectInvitationResponse) */ {
 public:
  RejectInvitationResponse();
  virtual ~RejectInvitationResponse();

  RejectInvitationResponse(const RejectInvitationResponse& from);

  inline RejectInvitationResponse& operator=(const RejectInvitationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RejectInvitationResponse(RejectInvitationResponse&& from) noexcept
    : RejectInvitationResponse() {
    *this = ::std::move(from);
  }

  inline RejectInvitationResponse& operator=(RejectInvitationResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RejectInvitationResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RejectInvitationResponse* internal_default_instance() {
    return reinterpret_cast<const RejectInvitationResponse*>(
               &_RejectInvitationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(RejectInvitationResponse* other);
  friend void swap(RejectInvitationResponse& a, RejectInvitationResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RejectInvitationResponse* New() const final {
    return CreateMaybeMessage<RejectInvitationResponse>(NULL);
  }

  RejectInvitationResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RejectInvitationResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RejectInvitationResponse& from);
  void MergeFrom(const RejectInvitationResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RejectInvitationResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:e8.RejectInvitationResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetInvitationListRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.GetInvitationListRequest) */ {
 public:
  GetInvitationListRequest();
  virtual ~GetInvitationListRequest();

  GetInvitationListRequest(const GetInvitationListRequest& from);

  inline GetInvitationListRequest& operator=(const GetInvitationListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetInvitationListRequest(GetInvitationListRequest&& from) noexcept
    : GetInvitationListRequest() {
    *this = ::std::move(from);
  }

  inline GetInvitationListRequest& operator=(GetInvitationListRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetInvitationListRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetInvitationListRequest* internal_default_instance() {
    return reinterpret_cast<const GetInvitationListRequest*>(
               &_GetInvitationListRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(GetInvitationListRequest* other);
  friend void swap(GetInvitationListRequest& a, GetInvitationListRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetInvitationListRequest* New() const final {
    return CreateMaybeMessage<GetInvitationListRequest>(NULL);
  }

  GetInvitationListRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetInvitationListRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetInvitationListRequest& from);
  void MergeFrom(const GetInvitationListRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetInvitationListRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .e8.Pagination pagination = 1;
  bool has_pagination() const;
  void clear_pagination();
  static const int kPaginationFieldNumber = 1;
  private:
  const ::e8::Pagination& _internal_pagination() const;
  public:
  const ::e8::Pagination& pagination() const;
  ::e8::Pagination* release_pagination();
  ::e8::Pagination* mutable_pagination();
  void set_allocated_pagination(::e8::Pagination* pagination);

  // @@protoc_insertion_point(class_scope:e8.GetInvitationListRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::e8::Pagination* pagination_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetInvitationListResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.GetInvitationListResponse) */ {
 public:
  GetInvitationListResponse();
  virtual ~GetInvitationListResponse();

  GetInvitationListResponse(const GetInvitationListResponse& from);

  inline GetInvitationListResponse& operator=(const GetInvitationListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetInvitationListResponse(GetInvitationListResponse&& from) noexcept
    : GetInvitationListResponse() {
    *this = ::std::move(from);
  }

  inline GetInvitationListResponse& operator=(GetInvitationListResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetInvitationListResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetInvitationListResponse* internal_default_instance() {
    return reinterpret_cast<const GetInvitationListResponse*>(
               &_GetInvitationListResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(GetInvitationListResponse* other);
  friend void swap(GetInvitationListResponse& a, GetInvitationListResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetInvitationListResponse* New() const final {
    return CreateMaybeMessage<GetInvitationListResponse>(NULL);
  }

  GetInvitationListResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetInvitationListResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetInvitationListResponse& from);
  void MergeFrom(const GetInvitationListResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetInvitationListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .e8.UserPublicProfile user_profiles = 1;
  int user_profiles_size() const;
  void clear_user_profiles();
  static const int kUserProfilesFieldNumber = 1;
  ::e8::UserPublicProfile* mutable_user_profiles(int index);
  ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile >*
      mutable_user_profiles();
  const ::e8::UserPublicProfile& user_profiles(int index) const;
  ::e8::UserPublicProfile* add_user_profiles();
  const ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile >&
      user_profiles() const;

  // @@protoc_insertion_point(class_scope:e8.GetInvitationListResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile > user_profiles_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteFriendRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.DeleteFriendRequest) */ {
 public:
  DeleteFriendRequest();
  virtual ~DeleteFriendRequest();

  DeleteFriendRequest(const DeleteFriendRequest& from);

  inline DeleteFriendRequest& operator=(const DeleteFriendRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteFriendRequest(DeleteFriendRequest&& from) noexcept
    : DeleteFriendRequest() {
    *this = ::std::move(from);
  }

  inline DeleteFriendRequest& operator=(DeleteFriendRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteFriendRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteFriendRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteFriendRequest*>(
               &_DeleteFriendRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(DeleteFriendRequest* other);
  friend void swap(DeleteFriendRequest& a, DeleteFriendRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteFriendRequest* New() const final {
    return CreateMaybeMessage<DeleteFriendRequest>(NULL);
  }

  DeleteFriendRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteFriendRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteFriendRequest& from);
  void MergeFrom(const DeleteFriendRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteFriendRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 friend_user_id = 1;
  void clear_friend_user_id();
  static const int kFriendUserIdFieldNumber = 1;
  ::google::protobuf::int64 friend_user_id() const;
  void set_friend_user_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:e8.DeleteFriendRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 friend_user_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteFriendResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.DeleteFriendResponse) */ {
 public:
  DeleteFriendResponse();
  virtual ~DeleteFriendResponse();

  DeleteFriendResponse(const DeleteFriendResponse& from);

  inline DeleteFriendResponse& operator=(const DeleteFriendResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteFriendResponse(DeleteFriendResponse&& from) noexcept
    : DeleteFriendResponse() {
    *this = ::std::move(from);
  }

  inline DeleteFriendResponse& operator=(DeleteFriendResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteFriendResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteFriendResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteFriendResponse*>(
               &_DeleteFriendResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(DeleteFriendResponse* other);
  friend void swap(DeleteFriendResponse& a, DeleteFriendResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteFriendResponse* New() const final {
    return CreateMaybeMessage<DeleteFriendResponse>(NULL);
  }

  DeleteFriendResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteFriendResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteFriendResponse& from);
  void MergeFrom(const DeleteFriendResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteFriendResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:e8.DeleteFriendResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetFriendListRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.GetFriendListRequest) */ {
 public:
  GetFriendListRequest();
  virtual ~GetFriendListRequest();

  GetFriendListRequest(const GetFriendListRequest& from);

  inline GetFriendListRequest& operator=(const GetFriendListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetFriendListRequest(GetFriendListRequest&& from) noexcept
    : GetFriendListRequest() {
    *this = ::std::move(from);
  }

  inline GetFriendListRequest& operator=(GetFriendListRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFriendListRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetFriendListRequest* internal_default_instance() {
    return reinterpret_cast<const GetFriendListRequest*>(
               &_GetFriendListRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(GetFriendListRequest* other);
  friend void swap(GetFriendListRequest& a, GetFriendListRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetFriendListRequest* New() const final {
    return CreateMaybeMessage<GetFriendListRequest>(NULL);
  }

  GetFriendListRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetFriendListRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetFriendListRequest& from);
  void MergeFrom(const GetFriendListRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetFriendListRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .e8.Pagination pagination = 1;
  bool has_pagination() const;
  void clear_pagination();
  static const int kPaginationFieldNumber = 1;
  private:
  const ::e8::Pagination& _internal_pagination() const;
  public:
  const ::e8::Pagination& pagination() const;
  ::e8::Pagination* release_pagination();
  ::e8::Pagination* mutable_pagination();
  void set_allocated_pagination(::e8::Pagination* pagination);

  // @@protoc_insertion_point(class_scope:e8.GetFriendListRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::e8::Pagination* pagination_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetFriendListResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.GetFriendListResponse) */ {
 public:
  GetFriendListResponse();
  virtual ~GetFriendListResponse();

  GetFriendListResponse(const GetFriendListResponse& from);

  inline GetFriendListResponse& operator=(const GetFriendListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetFriendListResponse(GetFriendListResponse&& from) noexcept
    : GetFriendListResponse() {
    *this = ::std::move(from);
  }

  inline GetFriendListResponse& operator=(GetFriendListResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFriendListResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetFriendListResponse* internal_default_instance() {
    return reinterpret_cast<const GetFriendListResponse*>(
               &_GetFriendListResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(GetFriendListResponse* other);
  friend void swap(GetFriendListResponse& a, GetFriendListResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetFriendListResponse* New() const final {
    return CreateMaybeMessage<GetFriendListResponse>(NULL);
  }

  GetFriendListResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetFriendListResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetFriendListResponse& from);
  void MergeFrom(const GetFriendListResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetFriendListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .e8.UserPublicProfile user_profiles = 1;
  int user_profiles_size() const;
  void clear_user_profiles();
  static const int kUserProfilesFieldNumber = 1;
  ::e8::UserPublicProfile* mutable_user_profiles(int index);
  ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile >*
      mutable_user_profiles();
  const ::e8::UserPublicProfile& user_profiles(int index) const;
  ::e8::UserPublicProfile* add_user_profiles();
  const ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile >&
      user_profiles() const;

  // @@protoc_insertion_point(class_scope:e8.GetFriendListResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile > user_profiles_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SendInvitationRequest

// int64 invitee_user_id = 1;
inline void SendInvitationRequest::clear_invitee_user_id() {
  invitee_user_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SendInvitationRequest::invitee_user_id() const {
  // @@protoc_insertion_point(field_get:e8.SendInvitationRequest.invitee_user_id)
  return invitee_user_id_;
}
inline void SendInvitationRequest::set_invitee_user_id(::google::protobuf::int64 value) {
  
  invitee_user_id_ = value;
  // @@protoc_insertion_point(field_set:e8.SendInvitationRequest.invitee_user_id)
}

// -------------------------------------------------------------------

// SendInvitationResponse

// -------------------------------------------------------------------

// DeleteInvitationRequest

// int64 invitee_user_id = 1;
inline void DeleteInvitationRequest::clear_invitee_user_id() {
  invitee_user_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 DeleteInvitationRequest::invitee_user_id() const {
  // @@protoc_insertion_point(field_get:e8.DeleteInvitationRequest.invitee_user_id)
  return invitee_user_id_;
}
inline void DeleteInvitationRequest::set_invitee_user_id(::google::protobuf::int64 value) {
  
  invitee_user_id_ = value;
  // @@protoc_insertion_point(field_set:e8.DeleteInvitationRequest.invitee_user_id)
}

// -------------------------------------------------------------------

// DeleteInvitationResponse

// -------------------------------------------------------------------

// AcceptInvitationRequest

// int64 inviter_user_id = 1;
inline void AcceptInvitationRequest::clear_inviter_user_id() {
  inviter_user_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AcceptInvitationRequest::inviter_user_id() const {
  // @@protoc_insertion_point(field_get:e8.AcceptInvitationRequest.inviter_user_id)
  return inviter_user_id_;
}
inline void AcceptInvitationRequest::set_inviter_user_id(::google::protobuf::int64 value) {
  
  inviter_user_id_ = value;
  // @@protoc_insertion_point(field_set:e8.AcceptInvitationRequest.inviter_user_id)
}

// -------------------------------------------------------------------

// AcceptInvitationResponse

// -------------------------------------------------------------------

// RejectInvitationRequest

// int64 inviter_user_id = 1;
inline void RejectInvitationRequest::clear_inviter_user_id() {
  inviter_user_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RejectInvitationRequest::inviter_user_id() const {
  // @@protoc_insertion_point(field_get:e8.RejectInvitationRequest.inviter_user_id)
  return inviter_user_id_;
}
inline void RejectInvitationRequest::set_inviter_user_id(::google::protobuf::int64 value) {
  
  inviter_user_id_ = value;
  // @@protoc_insertion_point(field_set:e8.RejectInvitationRequest.inviter_user_id)
}

// -------------------------------------------------------------------

// RejectInvitationResponse

// -------------------------------------------------------------------

// GetInvitationListRequest

// .e8.Pagination pagination = 1;
inline bool GetInvitationListRequest::has_pagination() const {
  return this != internal_default_instance() && pagination_ != NULL;
}
inline const ::e8::Pagination& GetInvitationListRequest::_internal_pagination() const {
  return *pagination_;
}
inline const ::e8::Pagination& GetInvitationListRequest::pagination() const {
  const ::e8::Pagination* p = pagination_;
  // @@protoc_insertion_point(field_get:e8.GetInvitationListRequest.pagination)
  return p != NULL ? *p : *reinterpret_cast<const ::e8::Pagination*>(
      &::e8::_Pagination_default_instance_);
}
inline ::e8::Pagination* GetInvitationListRequest::release_pagination() {
  // @@protoc_insertion_point(field_release:e8.GetInvitationListRequest.pagination)
  
  ::e8::Pagination* temp = pagination_;
  pagination_ = NULL;
  return temp;
}
inline ::e8::Pagination* GetInvitationListRequest::mutable_pagination() {
  
  if (pagination_ == NULL) {
    auto* p = CreateMaybeMessage<::e8::Pagination>(GetArenaNoVirtual());
    pagination_ = p;
  }
  // @@protoc_insertion_point(field_mutable:e8.GetInvitationListRequest.pagination)
  return pagination_;
}
inline void GetInvitationListRequest::set_allocated_pagination(::e8::Pagination* pagination) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pagination_);
  }
  if (pagination) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pagination = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pagination, submessage_arena);
    }
    
  } else {
    
  }
  pagination_ = pagination;
  // @@protoc_insertion_point(field_set_allocated:e8.GetInvitationListRequest.pagination)
}

// -------------------------------------------------------------------

// GetInvitationListResponse

// repeated .e8.UserPublicProfile user_profiles = 1;
inline int GetInvitationListResponse::user_profiles_size() const {
  return user_profiles_.size();
}
inline ::e8::UserPublicProfile* GetInvitationListResponse::mutable_user_profiles(int index) {
  // @@protoc_insertion_point(field_mutable:e8.GetInvitationListResponse.user_profiles)
  return user_profiles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile >*
GetInvitationListResponse::mutable_user_profiles() {
  // @@protoc_insertion_point(field_mutable_list:e8.GetInvitationListResponse.user_profiles)
  return &user_profiles_;
}
inline const ::e8::UserPublicProfile& GetInvitationListResponse::user_profiles(int index) const {
  // @@protoc_insertion_point(field_get:e8.GetInvitationListResponse.user_profiles)
  return user_profiles_.Get(index);
}
inline ::e8::UserPublicProfile* GetInvitationListResponse::add_user_profiles() {
  // @@protoc_insertion_point(field_add:e8.GetInvitationListResponse.user_profiles)
  return user_profiles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile >&
GetInvitationListResponse::user_profiles() const {
  // @@protoc_insertion_point(field_list:e8.GetInvitationListResponse.user_profiles)
  return user_profiles_;
}

// -------------------------------------------------------------------

// DeleteFriendRequest

// int64 friend_user_id = 1;
inline void DeleteFriendRequest::clear_friend_user_id() {
  friend_user_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 DeleteFriendRequest::friend_user_id() const {
  // @@protoc_insertion_point(field_get:e8.DeleteFriendRequest.friend_user_id)
  return friend_user_id_;
}
inline void DeleteFriendRequest::set_friend_user_id(::google::protobuf::int64 value) {
  
  friend_user_id_ = value;
  // @@protoc_insertion_point(field_set:e8.DeleteFriendRequest.friend_user_id)
}

// -------------------------------------------------------------------

// DeleteFriendResponse

// -------------------------------------------------------------------

// GetFriendListRequest

// .e8.Pagination pagination = 1;
inline bool GetFriendListRequest::has_pagination() const {
  return this != internal_default_instance() && pagination_ != NULL;
}
inline const ::e8::Pagination& GetFriendListRequest::_internal_pagination() const {
  return *pagination_;
}
inline const ::e8::Pagination& GetFriendListRequest::pagination() const {
  const ::e8::Pagination* p = pagination_;
  // @@protoc_insertion_point(field_get:e8.GetFriendListRequest.pagination)
  return p != NULL ? *p : *reinterpret_cast<const ::e8::Pagination*>(
      &::e8::_Pagination_default_instance_);
}
inline ::e8::Pagination* GetFriendListRequest::release_pagination() {
  // @@protoc_insertion_point(field_release:e8.GetFriendListRequest.pagination)
  
  ::e8::Pagination* temp = pagination_;
  pagination_ = NULL;
  return temp;
}
inline ::e8::Pagination* GetFriendListRequest::mutable_pagination() {
  
  if (pagination_ == NULL) {
    auto* p = CreateMaybeMessage<::e8::Pagination>(GetArenaNoVirtual());
    pagination_ = p;
  }
  // @@protoc_insertion_point(field_mutable:e8.GetFriendListRequest.pagination)
  return pagination_;
}
inline void GetFriendListRequest::set_allocated_pagination(::e8::Pagination* pagination) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pagination_);
  }
  if (pagination) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pagination = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pagination, submessage_arena);
    }
    
  } else {
    
  }
  pagination_ = pagination;
  // @@protoc_insertion_point(field_set_allocated:e8.GetFriendListRequest.pagination)
}

// -------------------------------------------------------------------

// GetFriendListResponse

// repeated .e8.UserPublicProfile user_profiles = 1;
inline int GetFriendListResponse::user_profiles_size() const {
  return user_profiles_.size();
}
inline ::e8::UserPublicProfile* GetFriendListResponse::mutable_user_profiles(int index) {
  // @@protoc_insertion_point(field_mutable:e8.GetFriendListResponse.user_profiles)
  return user_profiles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile >*
GetFriendListResponse::mutable_user_profiles() {
  // @@protoc_insertion_point(field_mutable_list:e8.GetFriendListResponse.user_profiles)
  return &user_profiles_;
}
inline const ::e8::UserPublicProfile& GetFriendListResponse::user_profiles(int index) const {
  // @@protoc_insertion_point(field_get:e8.GetFriendListResponse.user_profiles)
  return user_profiles_.Get(index);
}
inline ::e8::UserPublicProfile* GetFriendListResponse::add_user_profiles() {
  // @@protoc_insertion_point(field_add:e8.GetFriendListResponse.user_profiles)
  return user_profiles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile >&
GetFriendListResponse::user_profiles() const {
  // @@protoc_insertion_point(field_list:e8.GetFriendListResponse.user_profiles)
  return user_profiles_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace e8

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_service_5fsocialnetwork_2eproto
