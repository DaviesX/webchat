// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service_socialnetwork.proto

#ifndef PROTOBUF_INCLUDED_service_5fsocialnetwork_2eproto
#define PROTOBUF_INCLUDED_service_5fsocialnetwork_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "user_profile.pb.h"
#include "user_relation.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_service_5fsocialnetwork_2eproto 

namespace protobuf_service_5fsocialnetwork_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[16];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_service_5fsocialnetwork_2eproto
namespace e8 {
class AcceptInvitationRequest;
class AcceptInvitationRequestDefaultTypeInternal;
extern AcceptInvitationRequestDefaultTypeInternal _AcceptInvitationRequest_default_instance_;
class AcceptInvitationResponse;
class AcceptInvitationResponseDefaultTypeInternal;
extern AcceptInvitationResponseDefaultTypeInternal _AcceptInvitationResponse_default_instance_;
class DeleteContactRequest;
class DeleteContactRequestDefaultTypeInternal;
extern DeleteContactRequestDefaultTypeInternal _DeleteContactRequest_default_instance_;
class DeleteContactResponse;
class DeleteContactResponseDefaultTypeInternal;
extern DeleteContactResponseDefaultTypeInternal _DeleteContactResponse_default_instance_;
class DeleteInvitationRequest;
class DeleteInvitationRequestDefaultTypeInternal;
extern DeleteInvitationRequestDefaultTypeInternal _DeleteInvitationRequest_default_instance_;
class DeleteInvitationResponse;
class DeleteInvitationResponseDefaultTypeInternal;
extern DeleteInvitationResponseDefaultTypeInternal _DeleteInvitationResponse_default_instance_;
class GetContactListRequest;
class GetContactListRequestDefaultTypeInternal;
extern GetContactListRequestDefaultTypeInternal _GetContactListRequest_default_instance_;
class GetContactListResponse;
class GetContactListResponseDefaultTypeInternal;
extern GetContactListResponseDefaultTypeInternal _GetContactListResponse_default_instance_;
class GetInvitationListRequest;
class GetInvitationListRequestDefaultTypeInternal;
extern GetInvitationListRequestDefaultTypeInternal _GetInvitationListRequest_default_instance_;
class GetInvitationListResponse;
class GetInvitationListResponseDefaultTypeInternal;
extern GetInvitationListResponseDefaultTypeInternal _GetInvitationListResponse_default_instance_;
class GetUserRelationsRequest;
class GetUserRelationsRequestDefaultTypeInternal;
extern GetUserRelationsRequestDefaultTypeInternal _GetUserRelationsRequest_default_instance_;
class GetUserRelationsResponse;
class GetUserRelationsResponseDefaultTypeInternal;
extern GetUserRelationsResponseDefaultTypeInternal _GetUserRelationsResponse_default_instance_;
class RejectInvitationRequest;
class RejectInvitationRequestDefaultTypeInternal;
extern RejectInvitationRequestDefaultTypeInternal _RejectInvitationRequest_default_instance_;
class RejectInvitationResponse;
class RejectInvitationResponseDefaultTypeInternal;
extern RejectInvitationResponseDefaultTypeInternal _RejectInvitationResponse_default_instance_;
class SendInvitationRequest;
class SendInvitationRequestDefaultTypeInternal;
extern SendInvitationRequestDefaultTypeInternal _SendInvitationRequest_default_instance_;
class SendInvitationResponse;
class SendInvitationResponseDefaultTypeInternal;
extern SendInvitationResponseDefaultTypeInternal _SendInvitationResponse_default_instance_;
}  // namespace e8
namespace google {
namespace protobuf {
template<> ::e8::AcceptInvitationRequest* Arena::CreateMaybeMessage<::e8::AcceptInvitationRequest>(Arena*);
template<> ::e8::AcceptInvitationResponse* Arena::CreateMaybeMessage<::e8::AcceptInvitationResponse>(Arena*);
template<> ::e8::DeleteContactRequest* Arena::CreateMaybeMessage<::e8::DeleteContactRequest>(Arena*);
template<> ::e8::DeleteContactResponse* Arena::CreateMaybeMessage<::e8::DeleteContactResponse>(Arena*);
template<> ::e8::DeleteInvitationRequest* Arena::CreateMaybeMessage<::e8::DeleteInvitationRequest>(Arena*);
template<> ::e8::DeleteInvitationResponse* Arena::CreateMaybeMessage<::e8::DeleteInvitationResponse>(Arena*);
template<> ::e8::GetContactListRequest* Arena::CreateMaybeMessage<::e8::GetContactListRequest>(Arena*);
template<> ::e8::GetContactListResponse* Arena::CreateMaybeMessage<::e8::GetContactListResponse>(Arena*);
template<> ::e8::GetInvitationListRequest* Arena::CreateMaybeMessage<::e8::GetInvitationListRequest>(Arena*);
template<> ::e8::GetInvitationListResponse* Arena::CreateMaybeMessage<::e8::GetInvitationListResponse>(Arena*);
template<> ::e8::GetUserRelationsRequest* Arena::CreateMaybeMessage<::e8::GetUserRelationsRequest>(Arena*);
template<> ::e8::GetUserRelationsResponse* Arena::CreateMaybeMessage<::e8::GetUserRelationsResponse>(Arena*);
template<> ::e8::RejectInvitationRequest* Arena::CreateMaybeMessage<::e8::RejectInvitationRequest>(Arena*);
template<> ::e8::RejectInvitationResponse* Arena::CreateMaybeMessage<::e8::RejectInvitationResponse>(Arena*);
template<> ::e8::SendInvitationRequest* Arena::CreateMaybeMessage<::e8::SendInvitationRequest>(Arena*);
template<> ::e8::SendInvitationResponse* Arena::CreateMaybeMessage<::e8::SendInvitationResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace e8 {

// ===================================================================

class GetUserRelationsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.GetUserRelationsRequest) */ {
 public:
  GetUserRelationsRequest();
  virtual ~GetUserRelationsRequest();

  GetUserRelationsRequest(const GetUserRelationsRequest& from);

  inline GetUserRelationsRequest& operator=(const GetUserRelationsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetUserRelationsRequest(GetUserRelationsRequest&& from) noexcept
    : GetUserRelationsRequest() {
    *this = ::std::move(from);
  }

  inline GetUserRelationsRequest& operator=(GetUserRelationsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUserRelationsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetUserRelationsRequest* internal_default_instance() {
    return reinterpret_cast<const GetUserRelationsRequest*>(
               &_GetUserRelationsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(GetUserRelationsRequest* other);
  friend void swap(GetUserRelationsRequest& a, GetUserRelationsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetUserRelationsRequest* New() const final {
    return CreateMaybeMessage<GetUserRelationsRequest>(NULL);
  }

  GetUserRelationsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetUserRelationsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetUserRelationsRequest& from);
  void MergeFrom(const GetUserRelationsRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetUserRelationsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 target_user_id = 1;
  void clear_target_user_id();
  static const int kTargetUserIdFieldNumber = 1;
  ::google::protobuf::int64 target_user_id() const;
  void set_target_user_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:e8.GetUserRelationsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 target_user_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetUserRelationsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.GetUserRelationsResponse) */ {
 public:
  GetUserRelationsResponse();
  virtual ~GetUserRelationsResponse();

  GetUserRelationsResponse(const GetUserRelationsResponse& from);

  inline GetUserRelationsResponse& operator=(const GetUserRelationsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetUserRelationsResponse(GetUserRelationsResponse&& from) noexcept
    : GetUserRelationsResponse() {
    *this = ::std::move(from);
  }

  inline GetUserRelationsResponse& operator=(GetUserRelationsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUserRelationsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetUserRelationsResponse* internal_default_instance() {
    return reinterpret_cast<const GetUserRelationsResponse*>(
               &_GetUserRelationsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(GetUserRelationsResponse* other);
  friend void swap(GetUserRelationsResponse& a, GetUserRelationsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetUserRelationsResponse* New() const final {
    return CreateMaybeMessage<GetUserRelationsResponse>(NULL);
  }

  GetUserRelationsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetUserRelationsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetUserRelationsResponse& from);
  void MergeFrom(const GetUserRelationsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetUserRelationsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .e8.UserRelation user_relation = 3;
  int user_relation_size() const;
  void clear_user_relation();
  static const int kUserRelationFieldNumber = 3;
  ::e8::UserRelation user_relation(int index) const;
  void set_user_relation(int index, ::e8::UserRelation value);
  void add_user_relation(::e8::UserRelation value);
  const ::google::protobuf::RepeatedField<int>& user_relation() const;
  ::google::protobuf::RepeatedField<int>* mutable_user_relation();

  // int64 source_user_id = 1;
  void clear_source_user_id();
  static const int kSourceUserIdFieldNumber = 1;
  ::google::protobuf::int64 source_user_id() const;
  void set_source_user_id(::google::protobuf::int64 value);

  // int64 target_user_id = 2;
  void clear_target_user_id();
  static const int kTargetUserIdFieldNumber = 2;
  ::google::protobuf::int64 target_user_id() const;
  void set_target_user_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:e8.GetUserRelationsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField<int> user_relation_;
  mutable int _user_relation_cached_byte_size_;
  ::google::protobuf::int64 source_user_id_;
  ::google::protobuf::int64 target_user_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendInvitationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.SendInvitationRequest) */ {
 public:
  SendInvitationRequest();
  virtual ~SendInvitationRequest();

  SendInvitationRequest(const SendInvitationRequest& from);

  inline SendInvitationRequest& operator=(const SendInvitationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendInvitationRequest(SendInvitationRequest&& from) noexcept
    : SendInvitationRequest() {
    *this = ::std::move(from);
  }

  inline SendInvitationRequest& operator=(SendInvitationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SendInvitationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendInvitationRequest* internal_default_instance() {
    return reinterpret_cast<const SendInvitationRequest*>(
               &_SendInvitationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(SendInvitationRequest* other);
  friend void swap(SendInvitationRequest& a, SendInvitationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendInvitationRequest* New() const final {
    return CreateMaybeMessage<SendInvitationRequest>(NULL);
  }

  SendInvitationRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SendInvitationRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SendInvitationRequest& from);
  void MergeFrom(const SendInvitationRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendInvitationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 invitee_user_id = 1;
  void clear_invitee_user_id();
  static const int kInviteeUserIdFieldNumber = 1;
  ::google::protobuf::int64 invitee_user_id() const;
  void set_invitee_user_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:e8.SendInvitationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 invitee_user_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendInvitationResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.SendInvitationResponse) */ {
 public:
  SendInvitationResponse();
  virtual ~SendInvitationResponse();

  SendInvitationResponse(const SendInvitationResponse& from);

  inline SendInvitationResponse& operator=(const SendInvitationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendInvitationResponse(SendInvitationResponse&& from) noexcept
    : SendInvitationResponse() {
    *this = ::std::move(from);
  }

  inline SendInvitationResponse& operator=(SendInvitationResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SendInvitationResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendInvitationResponse* internal_default_instance() {
    return reinterpret_cast<const SendInvitationResponse*>(
               &_SendInvitationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(SendInvitationResponse* other);
  friend void swap(SendInvitationResponse& a, SendInvitationResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendInvitationResponse* New() const final {
    return CreateMaybeMessage<SendInvitationResponse>(NULL);
  }

  SendInvitationResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SendInvitationResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SendInvitationResponse& from);
  void MergeFrom(const SendInvitationResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendInvitationResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:e8.SendInvitationResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteInvitationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.DeleteInvitationRequest) */ {
 public:
  DeleteInvitationRequest();
  virtual ~DeleteInvitationRequest();

  DeleteInvitationRequest(const DeleteInvitationRequest& from);

  inline DeleteInvitationRequest& operator=(const DeleteInvitationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteInvitationRequest(DeleteInvitationRequest&& from) noexcept
    : DeleteInvitationRequest() {
    *this = ::std::move(from);
  }

  inline DeleteInvitationRequest& operator=(DeleteInvitationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteInvitationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteInvitationRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteInvitationRequest*>(
               &_DeleteInvitationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(DeleteInvitationRequest* other);
  friend void swap(DeleteInvitationRequest& a, DeleteInvitationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteInvitationRequest* New() const final {
    return CreateMaybeMessage<DeleteInvitationRequest>(NULL);
  }

  DeleteInvitationRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteInvitationRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteInvitationRequest& from);
  void MergeFrom(const DeleteInvitationRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteInvitationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 invitee_user_id = 1;
  void clear_invitee_user_id();
  static const int kInviteeUserIdFieldNumber = 1;
  ::google::protobuf::int64 invitee_user_id() const;
  void set_invitee_user_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:e8.DeleteInvitationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 invitee_user_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteInvitationResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.DeleteInvitationResponse) */ {
 public:
  DeleteInvitationResponse();
  virtual ~DeleteInvitationResponse();

  DeleteInvitationResponse(const DeleteInvitationResponse& from);

  inline DeleteInvitationResponse& operator=(const DeleteInvitationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteInvitationResponse(DeleteInvitationResponse&& from) noexcept
    : DeleteInvitationResponse() {
    *this = ::std::move(from);
  }

  inline DeleteInvitationResponse& operator=(DeleteInvitationResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteInvitationResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteInvitationResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteInvitationResponse*>(
               &_DeleteInvitationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(DeleteInvitationResponse* other);
  friend void swap(DeleteInvitationResponse& a, DeleteInvitationResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteInvitationResponse* New() const final {
    return CreateMaybeMessage<DeleteInvitationResponse>(NULL);
  }

  DeleteInvitationResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteInvitationResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteInvitationResponse& from);
  void MergeFrom(const DeleteInvitationResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteInvitationResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:e8.DeleteInvitationResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AcceptInvitationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.AcceptInvitationRequest) */ {
 public:
  AcceptInvitationRequest();
  virtual ~AcceptInvitationRequest();

  AcceptInvitationRequest(const AcceptInvitationRequest& from);

  inline AcceptInvitationRequest& operator=(const AcceptInvitationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AcceptInvitationRequest(AcceptInvitationRequest&& from) noexcept
    : AcceptInvitationRequest() {
    *this = ::std::move(from);
  }

  inline AcceptInvitationRequest& operator=(AcceptInvitationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AcceptInvitationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AcceptInvitationRequest* internal_default_instance() {
    return reinterpret_cast<const AcceptInvitationRequest*>(
               &_AcceptInvitationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(AcceptInvitationRequest* other);
  friend void swap(AcceptInvitationRequest& a, AcceptInvitationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AcceptInvitationRequest* New() const final {
    return CreateMaybeMessage<AcceptInvitationRequest>(NULL);
  }

  AcceptInvitationRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AcceptInvitationRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AcceptInvitationRequest& from);
  void MergeFrom(const AcceptInvitationRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AcceptInvitationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 inviter_user_id = 1;
  void clear_inviter_user_id();
  static const int kInviterUserIdFieldNumber = 1;
  ::google::protobuf::int64 inviter_user_id() const;
  void set_inviter_user_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:e8.AcceptInvitationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 inviter_user_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AcceptInvitationResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.AcceptInvitationResponse) */ {
 public:
  AcceptInvitationResponse();
  virtual ~AcceptInvitationResponse();

  AcceptInvitationResponse(const AcceptInvitationResponse& from);

  inline AcceptInvitationResponse& operator=(const AcceptInvitationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AcceptInvitationResponse(AcceptInvitationResponse&& from) noexcept
    : AcceptInvitationResponse() {
    *this = ::std::move(from);
  }

  inline AcceptInvitationResponse& operator=(AcceptInvitationResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AcceptInvitationResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AcceptInvitationResponse* internal_default_instance() {
    return reinterpret_cast<const AcceptInvitationResponse*>(
               &_AcceptInvitationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(AcceptInvitationResponse* other);
  friend void swap(AcceptInvitationResponse& a, AcceptInvitationResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AcceptInvitationResponse* New() const final {
    return CreateMaybeMessage<AcceptInvitationResponse>(NULL);
  }

  AcceptInvitationResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AcceptInvitationResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AcceptInvitationResponse& from);
  void MergeFrom(const AcceptInvitationResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AcceptInvitationResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:e8.AcceptInvitationResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RejectInvitationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.RejectInvitationRequest) */ {
 public:
  RejectInvitationRequest();
  virtual ~RejectInvitationRequest();

  RejectInvitationRequest(const RejectInvitationRequest& from);

  inline RejectInvitationRequest& operator=(const RejectInvitationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RejectInvitationRequest(RejectInvitationRequest&& from) noexcept
    : RejectInvitationRequest() {
    *this = ::std::move(from);
  }

  inline RejectInvitationRequest& operator=(RejectInvitationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RejectInvitationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RejectInvitationRequest* internal_default_instance() {
    return reinterpret_cast<const RejectInvitationRequest*>(
               &_RejectInvitationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(RejectInvitationRequest* other);
  friend void swap(RejectInvitationRequest& a, RejectInvitationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RejectInvitationRequest* New() const final {
    return CreateMaybeMessage<RejectInvitationRequest>(NULL);
  }

  RejectInvitationRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RejectInvitationRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RejectInvitationRequest& from);
  void MergeFrom(const RejectInvitationRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RejectInvitationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 inviter_user_id = 1;
  void clear_inviter_user_id();
  static const int kInviterUserIdFieldNumber = 1;
  ::google::protobuf::int64 inviter_user_id() const;
  void set_inviter_user_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:e8.RejectInvitationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 inviter_user_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RejectInvitationResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.RejectInvitationResponse) */ {
 public:
  RejectInvitationResponse();
  virtual ~RejectInvitationResponse();

  RejectInvitationResponse(const RejectInvitationResponse& from);

  inline RejectInvitationResponse& operator=(const RejectInvitationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RejectInvitationResponse(RejectInvitationResponse&& from) noexcept
    : RejectInvitationResponse() {
    *this = ::std::move(from);
  }

  inline RejectInvitationResponse& operator=(RejectInvitationResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RejectInvitationResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RejectInvitationResponse* internal_default_instance() {
    return reinterpret_cast<const RejectInvitationResponse*>(
               &_RejectInvitationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(RejectInvitationResponse* other);
  friend void swap(RejectInvitationResponse& a, RejectInvitationResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RejectInvitationResponse* New() const final {
    return CreateMaybeMessage<RejectInvitationResponse>(NULL);
  }

  RejectInvitationResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RejectInvitationResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RejectInvitationResponse& from);
  void MergeFrom(const RejectInvitationResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RejectInvitationResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:e8.RejectInvitationResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetInvitationListRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.GetInvitationListRequest) */ {
 public:
  GetInvitationListRequest();
  virtual ~GetInvitationListRequest();

  GetInvitationListRequest(const GetInvitationListRequest& from);

  inline GetInvitationListRequest& operator=(const GetInvitationListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetInvitationListRequest(GetInvitationListRequest&& from) noexcept
    : GetInvitationListRequest() {
    *this = ::std::move(from);
  }

  inline GetInvitationListRequest& operator=(GetInvitationListRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetInvitationListRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetInvitationListRequest* internal_default_instance() {
    return reinterpret_cast<const GetInvitationListRequest*>(
               &_GetInvitationListRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(GetInvitationListRequest* other);
  friend void swap(GetInvitationListRequest& a, GetInvitationListRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetInvitationListRequest* New() const final {
    return CreateMaybeMessage<GetInvitationListRequest>(NULL);
  }

  GetInvitationListRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetInvitationListRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetInvitationListRequest& from);
  void MergeFrom(const GetInvitationListRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetInvitationListRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:e8.GetInvitationListRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetInvitationListResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.GetInvitationListResponse) */ {
 public:
  GetInvitationListResponse();
  virtual ~GetInvitationListResponse();

  GetInvitationListResponse(const GetInvitationListResponse& from);

  inline GetInvitationListResponse& operator=(const GetInvitationListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetInvitationListResponse(GetInvitationListResponse&& from) noexcept
    : GetInvitationListResponse() {
    *this = ::std::move(from);
  }

  inline GetInvitationListResponse& operator=(GetInvitationListResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetInvitationListResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetInvitationListResponse* internal_default_instance() {
    return reinterpret_cast<const GetInvitationListResponse*>(
               &_GetInvitationListResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(GetInvitationListResponse* other);
  friend void swap(GetInvitationListResponse& a, GetInvitationListResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetInvitationListResponse* New() const final {
    return CreateMaybeMessage<GetInvitationListResponse>(NULL);
  }

  GetInvitationListResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetInvitationListResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetInvitationListResponse& from);
  void MergeFrom(const GetInvitationListResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetInvitationListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .e8.UserPublicProfile user_profiles = 1;
  int user_profiles_size() const;
  void clear_user_profiles();
  static const int kUserProfilesFieldNumber = 1;
  ::e8::UserPublicProfile* mutable_user_profiles(int index);
  ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile >*
      mutable_user_profiles();
  const ::e8::UserPublicProfile& user_profiles(int index) const;
  ::e8::UserPublicProfile* add_user_profiles();
  const ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile >&
      user_profiles() const;

  // @@protoc_insertion_point(class_scope:e8.GetInvitationListResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile > user_profiles_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteContactRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.DeleteContactRequest) */ {
 public:
  DeleteContactRequest();
  virtual ~DeleteContactRequest();

  DeleteContactRequest(const DeleteContactRequest& from);

  inline DeleteContactRequest& operator=(const DeleteContactRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteContactRequest(DeleteContactRequest&& from) noexcept
    : DeleteContactRequest() {
    *this = ::std::move(from);
  }

  inline DeleteContactRequest& operator=(DeleteContactRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteContactRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteContactRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteContactRequest*>(
               &_DeleteContactRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(DeleteContactRequest* other);
  friend void swap(DeleteContactRequest& a, DeleteContactRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteContactRequest* New() const final {
    return CreateMaybeMessage<DeleteContactRequest>(NULL);
  }

  DeleteContactRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteContactRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteContactRequest& from);
  void MergeFrom(const DeleteContactRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteContactRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 deleted_contact_user_id = 1;
  void clear_deleted_contact_user_id();
  static const int kDeletedContactUserIdFieldNumber = 1;
  ::google::protobuf::int64 deleted_contact_user_id() const;
  void set_deleted_contact_user_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:e8.DeleteContactRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 deleted_contact_user_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteContactResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.DeleteContactResponse) */ {
 public:
  DeleteContactResponse();
  virtual ~DeleteContactResponse();

  DeleteContactResponse(const DeleteContactResponse& from);

  inline DeleteContactResponse& operator=(const DeleteContactResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteContactResponse(DeleteContactResponse&& from) noexcept
    : DeleteContactResponse() {
    *this = ::std::move(from);
  }

  inline DeleteContactResponse& operator=(DeleteContactResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteContactResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteContactResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteContactResponse*>(
               &_DeleteContactResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(DeleteContactResponse* other);
  friend void swap(DeleteContactResponse& a, DeleteContactResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteContactResponse* New() const final {
    return CreateMaybeMessage<DeleteContactResponse>(NULL);
  }

  DeleteContactResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteContactResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteContactResponse& from);
  void MergeFrom(const DeleteContactResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteContactResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:e8.DeleteContactResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetContactListRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.GetContactListRequest) */ {
 public:
  GetContactListRequest();
  virtual ~GetContactListRequest();

  GetContactListRequest(const GetContactListRequest& from);

  inline GetContactListRequest& operator=(const GetContactListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetContactListRequest(GetContactListRequest&& from) noexcept
    : GetContactListRequest() {
    *this = ::std::move(from);
  }

  inline GetContactListRequest& operator=(GetContactListRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetContactListRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetContactListRequest* internal_default_instance() {
    return reinterpret_cast<const GetContactListRequest*>(
               &_GetContactListRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(GetContactListRequest* other);
  friend void swap(GetContactListRequest& a, GetContactListRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetContactListRequest* New() const final {
    return CreateMaybeMessage<GetContactListRequest>(NULL);
  }

  GetContactListRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetContactListRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetContactListRequest& from);
  void MergeFrom(const GetContactListRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetContactListRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:e8.GetContactListRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetContactListResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.GetContactListResponse) */ {
 public:
  GetContactListResponse();
  virtual ~GetContactListResponse();

  GetContactListResponse(const GetContactListResponse& from);

  inline GetContactListResponse& operator=(const GetContactListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetContactListResponse(GetContactListResponse&& from) noexcept
    : GetContactListResponse() {
    *this = ::std::move(from);
  }

  inline GetContactListResponse& operator=(GetContactListResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetContactListResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetContactListResponse* internal_default_instance() {
    return reinterpret_cast<const GetContactListResponse*>(
               &_GetContactListResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(GetContactListResponse* other);
  friend void swap(GetContactListResponse& a, GetContactListResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetContactListResponse* New() const final {
    return CreateMaybeMessage<GetContactListResponse>(NULL);
  }

  GetContactListResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetContactListResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetContactListResponse& from);
  void MergeFrom(const GetContactListResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetContactListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .e8.UserPublicProfile user_profiles = 1;
  int user_profiles_size() const;
  void clear_user_profiles();
  static const int kUserProfilesFieldNumber = 1;
  ::e8::UserPublicProfile* mutable_user_profiles(int index);
  ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile >*
      mutable_user_profiles();
  const ::e8::UserPublicProfile& user_profiles(int index) const;
  ::e8::UserPublicProfile* add_user_profiles();
  const ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile >&
      user_profiles() const;

  // @@protoc_insertion_point(class_scope:e8.GetContactListResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile > user_profiles_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GetUserRelationsRequest

// int64 target_user_id = 1;
inline void GetUserRelationsRequest::clear_target_user_id() {
  target_user_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetUserRelationsRequest::target_user_id() const {
  // @@protoc_insertion_point(field_get:e8.GetUserRelationsRequest.target_user_id)
  return target_user_id_;
}
inline void GetUserRelationsRequest::set_target_user_id(::google::protobuf::int64 value) {
  
  target_user_id_ = value;
  // @@protoc_insertion_point(field_set:e8.GetUserRelationsRequest.target_user_id)
}

// -------------------------------------------------------------------

// GetUserRelationsResponse

// int64 source_user_id = 1;
inline void GetUserRelationsResponse::clear_source_user_id() {
  source_user_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetUserRelationsResponse::source_user_id() const {
  // @@protoc_insertion_point(field_get:e8.GetUserRelationsResponse.source_user_id)
  return source_user_id_;
}
inline void GetUserRelationsResponse::set_source_user_id(::google::protobuf::int64 value) {
  
  source_user_id_ = value;
  // @@protoc_insertion_point(field_set:e8.GetUserRelationsResponse.source_user_id)
}

// int64 target_user_id = 2;
inline void GetUserRelationsResponse::clear_target_user_id() {
  target_user_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetUserRelationsResponse::target_user_id() const {
  // @@protoc_insertion_point(field_get:e8.GetUserRelationsResponse.target_user_id)
  return target_user_id_;
}
inline void GetUserRelationsResponse::set_target_user_id(::google::protobuf::int64 value) {
  
  target_user_id_ = value;
  // @@protoc_insertion_point(field_set:e8.GetUserRelationsResponse.target_user_id)
}

// repeated .e8.UserRelation user_relation = 3;
inline int GetUserRelationsResponse::user_relation_size() const {
  return user_relation_.size();
}
inline void GetUserRelationsResponse::clear_user_relation() {
  user_relation_.Clear();
}
inline ::e8::UserRelation GetUserRelationsResponse::user_relation(int index) const {
  // @@protoc_insertion_point(field_get:e8.GetUserRelationsResponse.user_relation)
  return static_cast< ::e8::UserRelation >(user_relation_.Get(index));
}
inline void GetUserRelationsResponse::set_user_relation(int index, ::e8::UserRelation value) {
  user_relation_.Set(index, value);
  // @@protoc_insertion_point(field_set:e8.GetUserRelationsResponse.user_relation)
}
inline void GetUserRelationsResponse::add_user_relation(::e8::UserRelation value) {
  user_relation_.Add(value);
  // @@protoc_insertion_point(field_add:e8.GetUserRelationsResponse.user_relation)
}
inline const ::google::protobuf::RepeatedField<int>&
GetUserRelationsResponse::user_relation() const {
  // @@protoc_insertion_point(field_list:e8.GetUserRelationsResponse.user_relation)
  return user_relation_;
}
inline ::google::protobuf::RepeatedField<int>*
GetUserRelationsResponse::mutable_user_relation() {
  // @@protoc_insertion_point(field_mutable_list:e8.GetUserRelationsResponse.user_relation)
  return &user_relation_;
}

// -------------------------------------------------------------------

// SendInvitationRequest

// int64 invitee_user_id = 1;
inline void SendInvitationRequest::clear_invitee_user_id() {
  invitee_user_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SendInvitationRequest::invitee_user_id() const {
  // @@protoc_insertion_point(field_get:e8.SendInvitationRequest.invitee_user_id)
  return invitee_user_id_;
}
inline void SendInvitationRequest::set_invitee_user_id(::google::protobuf::int64 value) {
  
  invitee_user_id_ = value;
  // @@protoc_insertion_point(field_set:e8.SendInvitationRequest.invitee_user_id)
}

// -------------------------------------------------------------------

// SendInvitationResponse

// -------------------------------------------------------------------

// DeleteInvitationRequest

// int64 invitee_user_id = 1;
inline void DeleteInvitationRequest::clear_invitee_user_id() {
  invitee_user_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 DeleteInvitationRequest::invitee_user_id() const {
  // @@protoc_insertion_point(field_get:e8.DeleteInvitationRequest.invitee_user_id)
  return invitee_user_id_;
}
inline void DeleteInvitationRequest::set_invitee_user_id(::google::protobuf::int64 value) {
  
  invitee_user_id_ = value;
  // @@protoc_insertion_point(field_set:e8.DeleteInvitationRequest.invitee_user_id)
}

// -------------------------------------------------------------------

// DeleteInvitationResponse

// -------------------------------------------------------------------

// AcceptInvitationRequest

// int64 inviter_user_id = 1;
inline void AcceptInvitationRequest::clear_inviter_user_id() {
  inviter_user_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AcceptInvitationRequest::inviter_user_id() const {
  // @@protoc_insertion_point(field_get:e8.AcceptInvitationRequest.inviter_user_id)
  return inviter_user_id_;
}
inline void AcceptInvitationRequest::set_inviter_user_id(::google::protobuf::int64 value) {
  
  inviter_user_id_ = value;
  // @@protoc_insertion_point(field_set:e8.AcceptInvitationRequest.inviter_user_id)
}

// -------------------------------------------------------------------

// AcceptInvitationResponse

// -------------------------------------------------------------------

// RejectInvitationRequest

// int64 inviter_user_id = 1;
inline void RejectInvitationRequest::clear_inviter_user_id() {
  inviter_user_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RejectInvitationRequest::inviter_user_id() const {
  // @@protoc_insertion_point(field_get:e8.RejectInvitationRequest.inviter_user_id)
  return inviter_user_id_;
}
inline void RejectInvitationRequest::set_inviter_user_id(::google::protobuf::int64 value) {
  
  inviter_user_id_ = value;
  // @@protoc_insertion_point(field_set:e8.RejectInvitationRequest.inviter_user_id)
}

// -------------------------------------------------------------------

// RejectInvitationResponse

// -------------------------------------------------------------------

// GetInvitationListRequest

// -------------------------------------------------------------------

// GetInvitationListResponse

// repeated .e8.UserPublicProfile user_profiles = 1;
inline int GetInvitationListResponse::user_profiles_size() const {
  return user_profiles_.size();
}
inline ::e8::UserPublicProfile* GetInvitationListResponse::mutable_user_profiles(int index) {
  // @@protoc_insertion_point(field_mutable:e8.GetInvitationListResponse.user_profiles)
  return user_profiles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile >*
GetInvitationListResponse::mutable_user_profiles() {
  // @@protoc_insertion_point(field_mutable_list:e8.GetInvitationListResponse.user_profiles)
  return &user_profiles_;
}
inline const ::e8::UserPublicProfile& GetInvitationListResponse::user_profiles(int index) const {
  // @@protoc_insertion_point(field_get:e8.GetInvitationListResponse.user_profiles)
  return user_profiles_.Get(index);
}
inline ::e8::UserPublicProfile* GetInvitationListResponse::add_user_profiles() {
  // @@protoc_insertion_point(field_add:e8.GetInvitationListResponse.user_profiles)
  return user_profiles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile >&
GetInvitationListResponse::user_profiles() const {
  // @@protoc_insertion_point(field_list:e8.GetInvitationListResponse.user_profiles)
  return user_profiles_;
}

// -------------------------------------------------------------------

// DeleteContactRequest

// int64 deleted_contact_user_id = 1;
inline void DeleteContactRequest::clear_deleted_contact_user_id() {
  deleted_contact_user_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 DeleteContactRequest::deleted_contact_user_id() const {
  // @@protoc_insertion_point(field_get:e8.DeleteContactRequest.deleted_contact_user_id)
  return deleted_contact_user_id_;
}
inline void DeleteContactRequest::set_deleted_contact_user_id(::google::protobuf::int64 value) {
  
  deleted_contact_user_id_ = value;
  // @@protoc_insertion_point(field_set:e8.DeleteContactRequest.deleted_contact_user_id)
}

// -------------------------------------------------------------------

// DeleteContactResponse

// -------------------------------------------------------------------

// GetContactListRequest

// -------------------------------------------------------------------

// GetContactListResponse

// repeated .e8.UserPublicProfile user_profiles = 1;
inline int GetContactListResponse::user_profiles_size() const {
  return user_profiles_.size();
}
inline ::e8::UserPublicProfile* GetContactListResponse::mutable_user_profiles(int index) {
  // @@protoc_insertion_point(field_mutable:e8.GetContactListResponse.user_profiles)
  return user_profiles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile >*
GetContactListResponse::mutable_user_profiles() {
  // @@protoc_insertion_point(field_mutable_list:e8.GetContactListResponse.user_profiles)
  return &user_profiles_;
}
inline const ::e8::UserPublicProfile& GetContactListResponse::user_profiles(int index) const {
  // @@protoc_insertion_point(field_get:e8.GetContactListResponse.user_profiles)
  return user_profiles_.Get(index);
}
inline ::e8::UserPublicProfile* GetContactListResponse::add_user_profiles() {
  // @@protoc_insertion_point(field_add:e8.GetContactListResponse.user_profiles)
  return user_profiles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile >&
GetContactListResponse::user_profiles() const {
  // @@protoc_insertion_point(field_list:e8.GetContactListResponse.user_profiles)
  return user_profiles_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace e8

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_service_5fsocialnetwork_2eproto
