// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: service_socialnetwork.proto

#include "service_socialnetwork.pb.h"
#include "service_socialnetwork.grpc.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace e8 {

static const char* SocialNetworkService_method_names[] = {
  "/e8.SocialNetworkService/SendInvitation",
  "/e8.SocialNetworkService/DeleteInvitation",
  "/e8.SocialNetworkService/AcceptInvitation",
  "/e8.SocialNetworkService/RejectInvitation",
  "/e8.SocialNetworkService/GetInvitationList",
  "/e8.SocialNetworkService/DeleteFriend",
  "/e8.SocialNetworkService/GetFriendList",
};

std::unique_ptr< SocialNetworkService::Stub> SocialNetworkService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< SocialNetworkService::Stub> stub(new SocialNetworkService::Stub(channel));
  return stub;
}

SocialNetworkService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_SendInvitation_(SocialNetworkService_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteInvitation_(SocialNetworkService_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_AcceptInvitation_(SocialNetworkService_method_names[2], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_RejectInvitation_(SocialNetworkService_method_names[3], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetInvitationList_(SocialNetworkService_method_names[4], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteFriend_(SocialNetworkService_method_names[5], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetFriendList_(SocialNetworkService_method_names[6], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status SocialNetworkService::Stub::SendInvitation(::grpc::ClientContext* context, const ::e8::SendInvitationRequest& request, ::e8::SendInvitationResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_SendInvitation_, context, request, response);
}

void SocialNetworkService::Stub::experimental_async::SendInvitation(::grpc::ClientContext* context, const ::e8::SendInvitationRequest* request, ::e8::SendInvitationResponse* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_SendInvitation_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::e8::SendInvitationResponse>* SocialNetworkService::Stub::AsyncSendInvitationRaw(::grpc::ClientContext* context, const ::e8::SendInvitationRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::e8::SendInvitationResponse>::Create(channel_.get(), cq, rpcmethod_SendInvitation_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::e8::SendInvitationResponse>* SocialNetworkService::Stub::PrepareAsyncSendInvitationRaw(::grpc::ClientContext* context, const ::e8::SendInvitationRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::e8::SendInvitationResponse>::Create(channel_.get(), cq, rpcmethod_SendInvitation_, context, request, false);
}

::grpc::Status SocialNetworkService::Stub::DeleteInvitation(::grpc::ClientContext* context, const ::e8::DeleteInvitationRequest& request, ::e8::DeleteInvitationResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteInvitation_, context, request, response);
}

void SocialNetworkService::Stub::experimental_async::DeleteInvitation(::grpc::ClientContext* context, const ::e8::DeleteInvitationRequest* request, ::e8::DeleteInvitationResponse* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_DeleteInvitation_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::e8::DeleteInvitationResponse>* SocialNetworkService::Stub::AsyncDeleteInvitationRaw(::grpc::ClientContext* context, const ::e8::DeleteInvitationRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::e8::DeleteInvitationResponse>::Create(channel_.get(), cq, rpcmethod_DeleteInvitation_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::e8::DeleteInvitationResponse>* SocialNetworkService::Stub::PrepareAsyncDeleteInvitationRaw(::grpc::ClientContext* context, const ::e8::DeleteInvitationRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::e8::DeleteInvitationResponse>::Create(channel_.get(), cq, rpcmethod_DeleteInvitation_, context, request, false);
}

::grpc::Status SocialNetworkService::Stub::AcceptInvitation(::grpc::ClientContext* context, const ::e8::AcceptInvitationRequest& request, ::e8::AcceptInvitationResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_AcceptInvitation_, context, request, response);
}

void SocialNetworkService::Stub::experimental_async::AcceptInvitation(::grpc::ClientContext* context, const ::e8::AcceptInvitationRequest* request, ::e8::AcceptInvitationResponse* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_AcceptInvitation_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::e8::AcceptInvitationResponse>* SocialNetworkService::Stub::AsyncAcceptInvitationRaw(::grpc::ClientContext* context, const ::e8::AcceptInvitationRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::e8::AcceptInvitationResponse>::Create(channel_.get(), cq, rpcmethod_AcceptInvitation_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::e8::AcceptInvitationResponse>* SocialNetworkService::Stub::PrepareAsyncAcceptInvitationRaw(::grpc::ClientContext* context, const ::e8::AcceptInvitationRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::e8::AcceptInvitationResponse>::Create(channel_.get(), cq, rpcmethod_AcceptInvitation_, context, request, false);
}

::grpc::Status SocialNetworkService::Stub::RejectInvitation(::grpc::ClientContext* context, const ::e8::RejectInvitationRequest& request, ::e8::RejectInvitationResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_RejectInvitation_, context, request, response);
}

void SocialNetworkService::Stub::experimental_async::RejectInvitation(::grpc::ClientContext* context, const ::e8::RejectInvitationRequest* request, ::e8::RejectInvitationResponse* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_RejectInvitation_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::e8::RejectInvitationResponse>* SocialNetworkService::Stub::AsyncRejectInvitationRaw(::grpc::ClientContext* context, const ::e8::RejectInvitationRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::e8::RejectInvitationResponse>::Create(channel_.get(), cq, rpcmethod_RejectInvitation_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::e8::RejectInvitationResponse>* SocialNetworkService::Stub::PrepareAsyncRejectInvitationRaw(::grpc::ClientContext* context, const ::e8::RejectInvitationRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::e8::RejectInvitationResponse>::Create(channel_.get(), cq, rpcmethod_RejectInvitation_, context, request, false);
}

::grpc::Status SocialNetworkService::Stub::GetInvitationList(::grpc::ClientContext* context, const ::e8::GetInvitationListRequest& request, ::e8::GetInvitationListResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetInvitationList_, context, request, response);
}

void SocialNetworkService::Stub::experimental_async::GetInvitationList(::grpc::ClientContext* context, const ::e8::GetInvitationListRequest* request, ::e8::GetInvitationListResponse* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_GetInvitationList_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::e8::GetInvitationListResponse>* SocialNetworkService::Stub::AsyncGetInvitationListRaw(::grpc::ClientContext* context, const ::e8::GetInvitationListRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::e8::GetInvitationListResponse>::Create(channel_.get(), cq, rpcmethod_GetInvitationList_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::e8::GetInvitationListResponse>* SocialNetworkService::Stub::PrepareAsyncGetInvitationListRaw(::grpc::ClientContext* context, const ::e8::GetInvitationListRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::e8::GetInvitationListResponse>::Create(channel_.get(), cq, rpcmethod_GetInvitationList_, context, request, false);
}

::grpc::Status SocialNetworkService::Stub::DeleteFriend(::grpc::ClientContext* context, const ::e8::DeleteFriendRequest& request, ::e8::DeleteFriendResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteFriend_, context, request, response);
}

void SocialNetworkService::Stub::experimental_async::DeleteFriend(::grpc::ClientContext* context, const ::e8::DeleteFriendRequest* request, ::e8::DeleteFriendResponse* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_DeleteFriend_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::e8::DeleteFriendResponse>* SocialNetworkService::Stub::AsyncDeleteFriendRaw(::grpc::ClientContext* context, const ::e8::DeleteFriendRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::e8::DeleteFriendResponse>::Create(channel_.get(), cq, rpcmethod_DeleteFriend_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::e8::DeleteFriendResponse>* SocialNetworkService::Stub::PrepareAsyncDeleteFriendRaw(::grpc::ClientContext* context, const ::e8::DeleteFriendRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::e8::DeleteFriendResponse>::Create(channel_.get(), cq, rpcmethod_DeleteFriend_, context, request, false);
}

::grpc::Status SocialNetworkService::Stub::GetFriendList(::grpc::ClientContext* context, const ::e8::GetFriendListRequest& request, ::e8::GetFriendListResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetFriendList_, context, request, response);
}

void SocialNetworkService::Stub::experimental_async::GetFriendList(::grpc::ClientContext* context, const ::e8::GetFriendListRequest* request, ::e8::GetFriendListResponse* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_GetFriendList_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::e8::GetFriendListResponse>* SocialNetworkService::Stub::AsyncGetFriendListRaw(::grpc::ClientContext* context, const ::e8::GetFriendListRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::e8::GetFriendListResponse>::Create(channel_.get(), cq, rpcmethod_GetFriendList_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::e8::GetFriendListResponse>* SocialNetworkService::Stub::PrepareAsyncGetFriendListRaw(::grpc::ClientContext* context, const ::e8::GetFriendListRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::e8::GetFriendListResponse>::Create(channel_.get(), cq, rpcmethod_GetFriendList_, context, request, false);
}

SocialNetworkService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      SocialNetworkService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< SocialNetworkService::Service, ::e8::SendInvitationRequest, ::e8::SendInvitationResponse>(
          std::mem_fn(&SocialNetworkService::Service::SendInvitation), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      SocialNetworkService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< SocialNetworkService::Service, ::e8::DeleteInvitationRequest, ::e8::DeleteInvitationResponse>(
          std::mem_fn(&SocialNetworkService::Service::DeleteInvitation), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      SocialNetworkService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< SocialNetworkService::Service, ::e8::AcceptInvitationRequest, ::e8::AcceptInvitationResponse>(
          std::mem_fn(&SocialNetworkService::Service::AcceptInvitation), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      SocialNetworkService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< SocialNetworkService::Service, ::e8::RejectInvitationRequest, ::e8::RejectInvitationResponse>(
          std::mem_fn(&SocialNetworkService::Service::RejectInvitation), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      SocialNetworkService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< SocialNetworkService::Service, ::e8::GetInvitationListRequest, ::e8::GetInvitationListResponse>(
          std::mem_fn(&SocialNetworkService::Service::GetInvitationList), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      SocialNetworkService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< SocialNetworkService::Service, ::e8::DeleteFriendRequest, ::e8::DeleteFriendResponse>(
          std::mem_fn(&SocialNetworkService::Service::DeleteFriend), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      SocialNetworkService_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< SocialNetworkService::Service, ::e8::GetFriendListRequest, ::e8::GetFriendListResponse>(
          std::mem_fn(&SocialNetworkService::Service::GetFriendList), this)));
}

SocialNetworkService::Service::~Service() {
}

::grpc::Status SocialNetworkService::Service::SendInvitation(::grpc::ServerContext* context, const ::e8::SendInvitationRequest* request, ::e8::SendInvitationResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status SocialNetworkService::Service::DeleteInvitation(::grpc::ServerContext* context, const ::e8::DeleteInvitationRequest* request, ::e8::DeleteInvitationResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status SocialNetworkService::Service::AcceptInvitation(::grpc::ServerContext* context, const ::e8::AcceptInvitationRequest* request, ::e8::AcceptInvitationResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status SocialNetworkService::Service::RejectInvitation(::grpc::ServerContext* context, const ::e8::RejectInvitationRequest* request, ::e8::RejectInvitationResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status SocialNetworkService::Service::GetInvitationList(::grpc::ServerContext* context, const ::e8::GetInvitationListRequest* request, ::e8::GetInvitationListResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status SocialNetworkService::Service::DeleteFriend(::grpc::ServerContext* context, const ::e8::DeleteFriendRequest* request, ::e8::DeleteFriendResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status SocialNetworkService::Service::GetFriendList(::grpc::ServerContext* context, const ::e8::GetFriendListRequest* request, ::e8::GetFriendListResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace e8

