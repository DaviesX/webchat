// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: user_profile.proto

#ifndef PROTOBUF_INCLUDED_user_5fprofile_2eproto
#define PROTOBUF_INCLUDED_user_5fprofile_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "file.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_user_5fprofile_2eproto 

namespace protobuf_user_5fprofile_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_user_5fprofile_2eproto
namespace e8 {
class UserPublicProfile;
class UserPublicProfileDefaultTypeInternal;
extern UserPublicProfileDefaultTypeInternal _UserPublicProfile_default_instance_;
}  // namespace e8
namespace google {
namespace protobuf {
template<> ::e8::UserPublicProfile* Arena::CreateMaybeMessage<::e8::UserPublicProfile>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace e8 {

// ===================================================================

class UserPublicProfile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.UserPublicProfile) */ {
 public:
  UserPublicProfile();
  virtual ~UserPublicProfile();

  UserPublicProfile(const UserPublicProfile& from);

  inline UserPublicProfile& operator=(const UserPublicProfile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserPublicProfile(UserPublicProfile&& from) noexcept
    : UserPublicProfile() {
    *this = ::std::move(from);
  }

  inline UserPublicProfile& operator=(UserPublicProfile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserPublicProfile& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserPublicProfile* internal_default_instance() {
    return reinterpret_cast<const UserPublicProfile*>(
               &_UserPublicProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(UserPublicProfile* other);
  friend void swap(UserPublicProfile& a, UserPublicProfile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserPublicProfile* New() const final {
    return CreateMaybeMessage<UserPublicProfile>(NULL);
  }

  UserPublicProfile* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserPublicProfile>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserPublicProfile& from);
  void MergeFrom(const UserPublicProfile& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserPublicProfile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string alias = 2;
  void clear_alias();
  static const int kAliasFieldNumber = 2;
  const ::std::string& alias() const;
  void set_alias(const ::std::string& value);
  #if LANG_CXX11
  void set_alias(::std::string&& value);
  #endif
  void set_alias(const char* value);
  void set_alias(const char* value, size_t size);
  ::std::string* mutable_alias();
  ::std::string* release_alias();
  void set_allocated_alias(::std::string* alias);

  // .e8.FileTokenAccess avatar_readonly_access = 3;
  bool has_avatar_readonly_access() const;
  void clear_avatar_readonly_access();
  static const int kAvatarReadonlyAccessFieldNumber = 3;
  private:
  const ::e8::FileTokenAccess& _internal_avatar_readonly_access() const;
  public:
  const ::e8::FileTokenAccess& avatar_readonly_access() const;
  ::e8::FileTokenAccess* release_avatar_readonly_access();
  ::e8::FileTokenAccess* mutable_avatar_readonly_access();
  void set_allocated_avatar_readonly_access(::e8::FileTokenAccess* avatar_readonly_access);

  // .e8.FileTokenAccess avatar_preview_readonly_access = 4;
  bool has_avatar_preview_readonly_access() const;
  void clear_avatar_preview_readonly_access();
  static const int kAvatarPreviewReadonlyAccessFieldNumber = 4;
  private:
  const ::e8::FileTokenAccess& _internal_avatar_preview_readonly_access() const;
  public:
  const ::e8::FileTokenAccess& avatar_preview_readonly_access() const;
  ::e8::FileTokenAccess* release_avatar_preview_readonly_access();
  ::e8::FileTokenAccess* mutable_avatar_preview_readonly_access();
  void set_allocated_avatar_preview_readonly_access(::e8::FileTokenAccess* avatar_preview_readonly_access);

  // int64 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int64 user_id() const;
  void set_user_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:e8.UserPublicProfile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr alias_;
  ::e8::FileTokenAccess* avatar_readonly_access_;
  ::e8::FileTokenAccess* avatar_preview_readonly_access_;
  ::google::protobuf::int64 user_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_user_5fprofile_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UserPublicProfile

// int64 user_id = 1;
inline void UserPublicProfile::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 UserPublicProfile::user_id() const {
  // @@protoc_insertion_point(field_get:e8.UserPublicProfile.user_id)
  return user_id_;
}
inline void UserPublicProfile::set_user_id(::google::protobuf::int64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:e8.UserPublicProfile.user_id)
}

// string alias = 2;
inline void UserPublicProfile::clear_alias() {
  alias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserPublicProfile::alias() const {
  // @@protoc_insertion_point(field_get:e8.UserPublicProfile.alias)
  return alias_.GetNoArena();
}
inline void UserPublicProfile::set_alias(const ::std::string& value) {
  
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:e8.UserPublicProfile.alias)
}
#if LANG_CXX11
inline void UserPublicProfile::set_alias(::std::string&& value) {
  
  alias_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:e8.UserPublicProfile.alias)
}
#endif
inline void UserPublicProfile::set_alias(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:e8.UserPublicProfile.alias)
}
inline void UserPublicProfile::set_alias(const char* value, size_t size) {
  
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:e8.UserPublicProfile.alias)
}
inline ::std::string* UserPublicProfile::mutable_alias() {
  
  // @@protoc_insertion_point(field_mutable:e8.UserPublicProfile.alias)
  return alias_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserPublicProfile::release_alias() {
  // @@protoc_insertion_point(field_release:e8.UserPublicProfile.alias)
  
  return alias_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserPublicProfile::set_allocated_alias(::std::string* alias) {
  if (alias != NULL) {
    
  } else {
    
  }
  alias_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alias);
  // @@protoc_insertion_point(field_set_allocated:e8.UserPublicProfile.alias)
}

// .e8.FileTokenAccess avatar_readonly_access = 3;
inline bool UserPublicProfile::has_avatar_readonly_access() const {
  return this != internal_default_instance() && avatar_readonly_access_ != NULL;
}
inline const ::e8::FileTokenAccess& UserPublicProfile::_internal_avatar_readonly_access() const {
  return *avatar_readonly_access_;
}
inline const ::e8::FileTokenAccess& UserPublicProfile::avatar_readonly_access() const {
  const ::e8::FileTokenAccess* p = avatar_readonly_access_;
  // @@protoc_insertion_point(field_get:e8.UserPublicProfile.avatar_readonly_access)
  return p != NULL ? *p : *reinterpret_cast<const ::e8::FileTokenAccess*>(
      &::e8::_FileTokenAccess_default_instance_);
}
inline ::e8::FileTokenAccess* UserPublicProfile::release_avatar_readonly_access() {
  // @@protoc_insertion_point(field_release:e8.UserPublicProfile.avatar_readonly_access)
  
  ::e8::FileTokenAccess* temp = avatar_readonly_access_;
  avatar_readonly_access_ = NULL;
  return temp;
}
inline ::e8::FileTokenAccess* UserPublicProfile::mutable_avatar_readonly_access() {
  
  if (avatar_readonly_access_ == NULL) {
    auto* p = CreateMaybeMessage<::e8::FileTokenAccess>(GetArenaNoVirtual());
    avatar_readonly_access_ = p;
  }
  // @@protoc_insertion_point(field_mutable:e8.UserPublicProfile.avatar_readonly_access)
  return avatar_readonly_access_;
}
inline void UserPublicProfile::set_allocated_avatar_readonly_access(::e8::FileTokenAccess* avatar_readonly_access) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avatar_readonly_access_);
  }
  if (avatar_readonly_access) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avatar_readonly_access = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avatar_readonly_access, submessage_arena);
    }
    
  } else {
    
  }
  avatar_readonly_access_ = avatar_readonly_access;
  // @@protoc_insertion_point(field_set_allocated:e8.UserPublicProfile.avatar_readonly_access)
}

// .e8.FileTokenAccess avatar_preview_readonly_access = 4;
inline bool UserPublicProfile::has_avatar_preview_readonly_access() const {
  return this != internal_default_instance() && avatar_preview_readonly_access_ != NULL;
}
inline const ::e8::FileTokenAccess& UserPublicProfile::_internal_avatar_preview_readonly_access() const {
  return *avatar_preview_readonly_access_;
}
inline const ::e8::FileTokenAccess& UserPublicProfile::avatar_preview_readonly_access() const {
  const ::e8::FileTokenAccess* p = avatar_preview_readonly_access_;
  // @@protoc_insertion_point(field_get:e8.UserPublicProfile.avatar_preview_readonly_access)
  return p != NULL ? *p : *reinterpret_cast<const ::e8::FileTokenAccess*>(
      &::e8::_FileTokenAccess_default_instance_);
}
inline ::e8::FileTokenAccess* UserPublicProfile::release_avatar_preview_readonly_access() {
  // @@protoc_insertion_point(field_release:e8.UserPublicProfile.avatar_preview_readonly_access)
  
  ::e8::FileTokenAccess* temp = avatar_preview_readonly_access_;
  avatar_preview_readonly_access_ = NULL;
  return temp;
}
inline ::e8::FileTokenAccess* UserPublicProfile::mutable_avatar_preview_readonly_access() {
  
  if (avatar_preview_readonly_access_ == NULL) {
    auto* p = CreateMaybeMessage<::e8::FileTokenAccess>(GetArenaNoVirtual());
    avatar_preview_readonly_access_ = p;
  }
  // @@protoc_insertion_point(field_mutable:e8.UserPublicProfile.avatar_preview_readonly_access)
  return avatar_preview_readonly_access_;
}
inline void UserPublicProfile::set_allocated_avatar_preview_readonly_access(::e8::FileTokenAccess* avatar_preview_readonly_access) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avatar_preview_readonly_access_);
  }
  if (avatar_preview_readonly_access) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avatar_preview_readonly_access = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avatar_preview_readonly_access, submessage_arena);
    }
    
  } else {
    
  }
  avatar_preview_readonly_access_ = avatar_preview_readonly_access;
  // @@protoc_insertion_point(field_set_allocated:e8.UserPublicProfile.avatar_preview_readonly_access)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace e8

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_user_5fprofile_2eproto
