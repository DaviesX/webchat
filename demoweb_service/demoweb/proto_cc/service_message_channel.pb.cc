// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service_message_channel.proto

#include "service_message_channel.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_message_5fchannel_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_5fchannel_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MessageChannel;
}  // namespace protobuf_message_5fchannel_2eproto
namespace protobuf_pagination_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_pagination_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Pagination;
}  // namespace protobuf_pagination_2eproto
namespace protobuf_service_5fmessage_5fchannel_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_service_5fmessage_5fchannel_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GetMessageChannelMembersResponse_MemberTypesEntry_DoNotUse;
}  // namespace protobuf_service_5fmessage_5fchannel_2eproto
namespace protobuf_user_5fprofile_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_user_5fprofile_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_UserPublicProfile;
}  // namespace protobuf_user_5fprofile_2eproto
namespace e8 {
class CreateMessageChannelRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateMessageChannelRequest>
      _instance;
} _CreateMessageChannelRequest_default_instance_;
class CreateMessageChannelResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateMessageChannelResponse>
      _instance;
} _CreateMessageChannelResponse_default_instance_;
class AddMemberToMessageChannelRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddMemberToMessageChannelRequest>
      _instance;
} _AddMemberToMessageChannelRequest_default_instance_;
class AddMemberToMessageChannelResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddMemberToMessageChannelResponse>
      _instance;
} _AddMemberToMessageChannelResponse_default_instance_;
class GetMessageChannelKeyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetMessageChannelKeyRequest>
      _instance;
} _GetMessageChannelKeyRequest_default_instance_;
class GetMessageChannelKeyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetMessageChannelKeyResponse>
      _instance;
} _GetMessageChannelKeyResponse_default_instance_;
class LeaveMessageChannelRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LeaveMessageChannelRequest>
      _instance;
} _LeaveMessageChannelRequest_default_instance_;
class LeaveMessageChannelResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LeaveMessageChannelResponse>
      _instance;
} _LeaveMessageChannelResponse_default_instance_;
class GetJoinedInMessageChannelsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetJoinedInMessageChannelsRequest>
      _instance;
} _GetJoinedInMessageChannelsRequest_default_instance_;
class GetJoinedInMessageChannelsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetJoinedInMessageChannelsResponse>
      _instance;
} _GetJoinedInMessageChannelsResponse_default_instance_;
class GetMessageChannelMembersRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetMessageChannelMembersRequest>
      _instance;
} _GetMessageChannelMembersRequest_default_instance_;
class GetMessageChannelMembersResponse_MemberTypesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetMessageChannelMembersResponse_MemberTypesEntry_DoNotUse>
      _instance;
} _GetMessageChannelMembersResponse_MemberTypesEntry_DoNotUse_default_instance_;
class GetMessageChannelMembersResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetMessageChannelMembersResponse>
      _instance;
} _GetMessageChannelMembersResponse_default_instance_;
}  // namespace e8
namespace protobuf_service_5fmessage_5fchannel_2eproto {
static void InitDefaultsCreateMessageChannelRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_CreateMessageChannelRequest_default_instance_;
    new (ptr) ::e8::CreateMessageChannelRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::CreateMessageChannelRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateMessageChannelRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateMessageChannelRequest}, {}};

static void InitDefaultsCreateMessageChannelResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_CreateMessageChannelResponse_default_instance_;
    new (ptr) ::e8::CreateMessageChannelResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::CreateMessageChannelResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateMessageChannelResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateMessageChannelResponse}, {}};

static void InitDefaultsAddMemberToMessageChannelRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_AddMemberToMessageChannelRequest_default_instance_;
    new (ptr) ::e8::AddMemberToMessageChannelRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::AddMemberToMessageChannelRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AddMemberToMessageChannelRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAddMemberToMessageChannelRequest}, {}};

static void InitDefaultsAddMemberToMessageChannelResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_AddMemberToMessageChannelResponse_default_instance_;
    new (ptr) ::e8::AddMemberToMessageChannelResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::AddMemberToMessageChannelResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AddMemberToMessageChannelResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAddMemberToMessageChannelResponse}, {}};

static void InitDefaultsGetMessageChannelKeyRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_GetMessageChannelKeyRequest_default_instance_;
    new (ptr) ::e8::GetMessageChannelKeyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::GetMessageChannelKeyRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetMessageChannelKeyRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetMessageChannelKeyRequest}, {}};

static void InitDefaultsGetMessageChannelKeyResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_GetMessageChannelKeyResponse_default_instance_;
    new (ptr) ::e8::GetMessageChannelKeyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::GetMessageChannelKeyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetMessageChannelKeyResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetMessageChannelKeyResponse}, {}};

static void InitDefaultsLeaveMessageChannelRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_LeaveMessageChannelRequest_default_instance_;
    new (ptr) ::e8::LeaveMessageChannelRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::LeaveMessageChannelRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LeaveMessageChannelRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLeaveMessageChannelRequest}, {}};

static void InitDefaultsLeaveMessageChannelResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_LeaveMessageChannelResponse_default_instance_;
    new (ptr) ::e8::LeaveMessageChannelResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::LeaveMessageChannelResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LeaveMessageChannelResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLeaveMessageChannelResponse}, {}};

static void InitDefaultsGetJoinedInMessageChannelsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_GetJoinedInMessageChannelsRequest_default_instance_;
    new (ptr) ::e8::GetJoinedInMessageChannelsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::GetJoinedInMessageChannelsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetJoinedInMessageChannelsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetJoinedInMessageChannelsRequest}, {
      &protobuf_pagination_2eproto::scc_info_Pagination.base,}};

static void InitDefaultsGetJoinedInMessageChannelsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_GetJoinedInMessageChannelsResponse_default_instance_;
    new (ptr) ::e8::GetJoinedInMessageChannelsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::GetJoinedInMessageChannelsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetJoinedInMessageChannelsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetJoinedInMessageChannelsResponse}, {
      &protobuf_message_5fchannel_2eproto::scc_info_MessageChannel.base,}};

static void InitDefaultsGetMessageChannelMembersRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_GetMessageChannelMembersRequest_default_instance_;
    new (ptr) ::e8::GetMessageChannelMembersRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::GetMessageChannelMembersRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetMessageChannelMembersRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetMessageChannelMembersRequest}, {}};

static void InitDefaultsGetMessageChannelMembersResponse_MemberTypesEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_GetMessageChannelMembersResponse_MemberTypesEntry_DoNotUse_default_instance_;
    new (ptr) ::e8::GetMessageChannelMembersResponse_MemberTypesEntry_DoNotUse();
  }
  ::e8::GetMessageChannelMembersResponse_MemberTypesEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetMessageChannelMembersResponse_MemberTypesEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetMessageChannelMembersResponse_MemberTypesEntry_DoNotUse}, {}};

static void InitDefaultsGetMessageChannelMembersResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_GetMessageChannelMembersResponse_default_instance_;
    new (ptr) ::e8::GetMessageChannelMembersResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::GetMessageChannelMembersResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_GetMessageChannelMembersResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsGetMessageChannelMembersResponse}, {
      &protobuf_user_5fprofile_2eproto::scc_info_UserPublicProfile.base,
      &protobuf_service_5fmessage_5fchannel_2eproto::scc_info_GetMessageChannelMembersResponse_MemberTypesEntry_DoNotUse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CreateMessageChannelRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateMessageChannelResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddMemberToMessageChannelRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddMemberToMessageChannelResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetMessageChannelKeyRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetMessageChannelKeyResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LeaveMessageChannelRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LeaveMessageChannelResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetJoinedInMessageChannelsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetJoinedInMessageChannelsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetMessageChannelMembersRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetMessageChannelMembersResponse_MemberTypesEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetMessageChannelMembersResponse.base);
}

::google::protobuf::Metadata file_level_metadata[13];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::CreateMessageChannelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::CreateMessageChannelRequest, encrypted_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::CreateMessageChannelRequest, title_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::CreateMessageChannelResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::CreateMessageChannelResponse, channel_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::AddMemberToMessageChannelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::AddMemberToMessageChannelRequest, channel_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::AddMemberToMessageChannelRequest, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::AddMemberToMessageChannelResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetMessageChannelKeyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetMessageChannelKeyRequest, channel_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetMessageChannelKeyRequest, timeout_secs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetMessageChannelKeyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetMessageChannelKeyResponse, channel_key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::LeaveMessageChannelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::LeaveMessageChannelRequest, channel_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::LeaveMessageChannelResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetJoinedInMessageChannelsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetJoinedInMessageChannelsRequest, pagination_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetJoinedInMessageChannelsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetJoinedInMessageChannelsResponse, channels_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetMessageChannelMembersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetMessageChannelMembersRequest, channel_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetMessageChannelMembersResponse_MemberTypesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetMessageChannelMembersResponse_MemberTypesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetMessageChannelMembersResponse_MemberTypesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetMessageChannelMembersResponse_MemberTypesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetMessageChannelMembersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetMessageChannelMembersResponse, user_profiles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetMessageChannelMembersResponse, member_types_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::e8::CreateMessageChannelRequest)},
  { 7, -1, sizeof(::e8::CreateMessageChannelResponse)},
  { 13, -1, sizeof(::e8::AddMemberToMessageChannelRequest)},
  { 20, -1, sizeof(::e8::AddMemberToMessageChannelResponse)},
  { 25, -1, sizeof(::e8::GetMessageChannelKeyRequest)},
  { 32, -1, sizeof(::e8::GetMessageChannelKeyResponse)},
  { 38, -1, sizeof(::e8::LeaveMessageChannelRequest)},
  { 44, -1, sizeof(::e8::LeaveMessageChannelResponse)},
  { 49, -1, sizeof(::e8::GetJoinedInMessageChannelsRequest)},
  { 55, -1, sizeof(::e8::GetJoinedInMessageChannelsResponse)},
  { 61, -1, sizeof(::e8::GetMessageChannelMembersRequest)},
  { 67, 74, sizeof(::e8::GetMessageChannelMembersResponse_MemberTypesEntry_DoNotUse)},
  { 76, -1, sizeof(::e8::GetMessageChannelMembersResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_CreateMessageChannelRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_CreateMessageChannelResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_AddMemberToMessageChannelRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_AddMemberToMessageChannelResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_GetMessageChannelKeyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_GetMessageChannelKeyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_LeaveMessageChannelRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_LeaveMessageChannelResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_GetJoinedInMessageChannelsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_GetJoinedInMessageChannelsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_GetMessageChannelMembersRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_GetMessageChannelMembersResponse_MemberTypesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_GetMessageChannelMembersResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "service_message_channel.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 13);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\035service_message_channel.proto\022\002e8\032\020pag"
      "ination.proto\032\025message_channel.proto\032\022us"
      "er_profile.proto\"\?\n\033CreateMessageChannel"
      "Request\022\021\n\tencrypted\030\001 \001(\010\022\r\n\005title\030\002 \001("
      "\t\"2\n\034CreateMessageChannelResponse\022\022\n\ncha"
      "nnel_id\030\001 \001(\003\"G\n AddMemberToMessageChann"
      "elRequest\022\022\n\nchannel_id\030\001 \001(\003\022\017\n\007user_id"
      "\030\002 \001(\003\"#\n!AddMemberToMessageChannelRespo"
      "nse\"G\n\033GetMessageChannelKeyRequest\022\022\n\nch"
      "annel_id\030\001 \001(\003\022\024\n\014timeout_secs\030\002 \001(\005\"3\n\034"
      "GetMessageChannelKeyResponse\022\023\n\013channel_"
      "key\030\003 \001(\t\"0\n\032LeaveMessageChannelRequest\022"
      "\022\n\nchannel_id\030\001 \001(\003\"\035\n\033LeaveMessageChann"
      "elResponse\"G\n!GetJoinedInMessageChannels"
      "Request\022\"\n\npagination\030\001 \001(\0132\016.e8.Paginat"
      "ion\"J\n\"GetJoinedInMessageChannelsRespons"
      "e\022$\n\010channels\030\001 \003(\0132\022.e8.MessageChannel\""
      "5\n\037GetMessageChannelMembersRequest\022\022\n\nch"
      "annel_id\030\001 \001(\003\"\357\001\n GetMessageChannelMemb"
      "ersResponse\022,\n\ruser_profiles\030\001 \003(\0132\025.e8."
      "UserPublicProfile\022K\n\014member_types\030\002 \003(\0132"
      "5.e8.GetMessageChannelMembersResponse.Me"
      "mberTypesEntry\032P\n\020MemberTypesEntry\022\013\n\003ke"
      "y\030\001 \001(\003\022+\n\005value\030\002 \001(\0162\034.e8.MessageChann"
      "elMemberType:\0028\0012\343\004\n\025MessageChannelServi"
      "ce\022Y\n\024CreateMessageChannel\022\037.e8.CreateMe"
      "ssageChannelRequest\032 .e8.CreateMessageCh"
      "annelResponse\022h\n\031AddMemberToMessageChann"
      "el\022$.e8.AddMemberToMessageChannelRequest"
      "\032%.e8.AddMemberToMessageChannelResponse\022"
      "Y\n\024GetMessageChannelKey\022\037.e8.GetMessageC"
      "hannelKeyRequest\032 .e8.GetMessageChannelK"
      "eyResponse\022V\n\023LeaveMessageChannel\022\036.e8.L"
      "eaveMessageChannelRequest\032\037.e8.LeaveMess"
      "ageChannelResponse\022k\n\032GetJoinedInMessage"
      "Channels\022%.e8.GetJoinedInMessageChannels"
      "Request\032&.e8.GetJoinedInMessageChannelsR"
      "esponse\022e\n\030GetMessageChannelMembers\022#.e8"
      ".GetMessageChannelMembersRequest\032$.e8.Ge"
      "tMessageChannelMembersResponseb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1598);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "service_message_channel.proto", &protobuf_RegisterTypes);
  ::protobuf_pagination_2eproto::AddDescriptors();
  ::protobuf_message_5fchannel_2eproto::AddDescriptors();
  ::protobuf_user_5fprofile_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_service_5fmessage_5fchannel_2eproto
namespace e8 {

// ===================================================================

void CreateMessageChannelRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateMessageChannelRequest::kEncryptedFieldNumber;
const int CreateMessageChannelRequest::kTitleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateMessageChannelRequest::CreateMessageChannelRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fmessage_5fchannel_2eproto::scc_info_CreateMessageChannelRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.CreateMessageChannelRequest)
}
CreateMessageChannelRequest::CreateMessageChannelRequest(const CreateMessageChannelRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  encrypted_ = from.encrypted_;
  // @@protoc_insertion_point(copy_constructor:e8.CreateMessageChannelRequest)
}

void CreateMessageChannelRequest::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encrypted_ = false;
}

CreateMessageChannelRequest::~CreateMessageChannelRequest() {
  // @@protoc_insertion_point(destructor:e8.CreateMessageChannelRequest)
  SharedDtor();
}

void CreateMessageChannelRequest::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateMessageChannelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateMessageChannelRequest::descriptor() {
  ::protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateMessageChannelRequest& CreateMessageChannelRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fmessage_5fchannel_2eproto::scc_info_CreateMessageChannelRequest.base);
  return *internal_default_instance();
}


void CreateMessageChannelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.CreateMessageChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encrypted_ = false;
  _internal_metadata_.Clear();
}

bool CreateMessageChannelRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.CreateMessageChannelRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool encrypted = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &encrypted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "e8.CreateMessageChannelRequest.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.CreateMessageChannelRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.CreateMessageChannelRequest)
  return false;
#undef DO_
}

void CreateMessageChannelRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.CreateMessageChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool encrypted = 1;
  if (this->encrypted() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->encrypted(), output);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "e8.CreateMessageChannelRequest.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.CreateMessageChannelRequest)
}

::google::protobuf::uint8* CreateMessageChannelRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.CreateMessageChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool encrypted = 1;
  if (this->encrypted() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->encrypted(), target);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "e8.CreateMessageChannelRequest.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.CreateMessageChannelRequest)
  return target;
}

size_t CreateMessageChannelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.CreateMessageChannelRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // bool encrypted = 1;
  if (this->encrypted() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateMessageChannelRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.CreateMessageChannelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateMessageChannelRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateMessageChannelRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.CreateMessageChannelRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.CreateMessageChannelRequest)
    MergeFrom(*source);
  }
}

void CreateMessageChannelRequest::MergeFrom(const CreateMessageChannelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.CreateMessageChannelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.encrypted() != 0) {
    set_encrypted(from.encrypted());
  }
}

void CreateMessageChannelRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.CreateMessageChannelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateMessageChannelRequest::CopyFrom(const CreateMessageChannelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.CreateMessageChannelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateMessageChannelRequest::IsInitialized() const {
  return true;
}

void CreateMessageChannelRequest::Swap(CreateMessageChannelRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateMessageChannelRequest::InternalSwap(CreateMessageChannelRequest* other) {
  using std::swap;
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(encrypted_, other->encrypted_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateMessageChannelRequest::GetMetadata() const {
  protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateMessageChannelResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateMessageChannelResponse::kChannelIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateMessageChannelResponse::CreateMessageChannelResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fmessage_5fchannel_2eproto::scc_info_CreateMessageChannelResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.CreateMessageChannelResponse)
}
CreateMessageChannelResponse::CreateMessageChannelResponse(const CreateMessageChannelResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  channel_id_ = from.channel_id_;
  // @@protoc_insertion_point(copy_constructor:e8.CreateMessageChannelResponse)
}

void CreateMessageChannelResponse::SharedCtor() {
  channel_id_ = GOOGLE_LONGLONG(0);
}

CreateMessageChannelResponse::~CreateMessageChannelResponse() {
  // @@protoc_insertion_point(destructor:e8.CreateMessageChannelResponse)
  SharedDtor();
}

void CreateMessageChannelResponse::SharedDtor() {
}

void CreateMessageChannelResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateMessageChannelResponse::descriptor() {
  ::protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateMessageChannelResponse& CreateMessageChannelResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fmessage_5fchannel_2eproto::scc_info_CreateMessageChannelResponse.base);
  return *internal_default_instance();
}


void CreateMessageChannelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.CreateMessageChannelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channel_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool CreateMessageChannelResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.CreateMessageChannelResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 channel_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &channel_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.CreateMessageChannelResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.CreateMessageChannelResponse)
  return false;
#undef DO_
}

void CreateMessageChannelResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.CreateMessageChannelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->channel_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.CreateMessageChannelResponse)
}

::google::protobuf::uint8* CreateMessageChannelResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.CreateMessageChannelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->channel_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.CreateMessageChannelResponse)
  return target;
}

size_t CreateMessageChannelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.CreateMessageChannelResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->channel_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateMessageChannelResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.CreateMessageChannelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateMessageChannelResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateMessageChannelResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.CreateMessageChannelResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.CreateMessageChannelResponse)
    MergeFrom(*source);
  }
}

void CreateMessageChannelResponse::MergeFrom(const CreateMessageChannelResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.CreateMessageChannelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.channel_id() != 0) {
    set_channel_id(from.channel_id());
  }
}

void CreateMessageChannelResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.CreateMessageChannelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateMessageChannelResponse::CopyFrom(const CreateMessageChannelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.CreateMessageChannelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateMessageChannelResponse::IsInitialized() const {
  return true;
}

void CreateMessageChannelResponse::Swap(CreateMessageChannelResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateMessageChannelResponse::InternalSwap(CreateMessageChannelResponse* other) {
  using std::swap;
  swap(channel_id_, other->channel_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateMessageChannelResponse::GetMetadata() const {
  protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddMemberToMessageChannelRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddMemberToMessageChannelRequest::kChannelIdFieldNumber;
const int AddMemberToMessageChannelRequest::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddMemberToMessageChannelRequest::AddMemberToMessageChannelRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fmessage_5fchannel_2eproto::scc_info_AddMemberToMessageChannelRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.AddMemberToMessageChannelRequest)
}
AddMemberToMessageChannelRequest::AddMemberToMessageChannelRequest(const AddMemberToMessageChannelRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&channel_id_, &from.channel_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&user_id_) -
    reinterpret_cast<char*>(&channel_id_)) + sizeof(user_id_));
  // @@protoc_insertion_point(copy_constructor:e8.AddMemberToMessageChannelRequest)
}

void AddMemberToMessageChannelRequest::SharedCtor() {
  ::memset(&channel_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&channel_id_)) + sizeof(user_id_));
}

AddMemberToMessageChannelRequest::~AddMemberToMessageChannelRequest() {
  // @@protoc_insertion_point(destructor:e8.AddMemberToMessageChannelRequest)
  SharedDtor();
}

void AddMemberToMessageChannelRequest::SharedDtor() {
}

void AddMemberToMessageChannelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddMemberToMessageChannelRequest::descriptor() {
  ::protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddMemberToMessageChannelRequest& AddMemberToMessageChannelRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fmessage_5fchannel_2eproto::scc_info_AddMemberToMessageChannelRequest.base);
  return *internal_default_instance();
}


void AddMemberToMessageChannelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.AddMemberToMessageChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&channel_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&channel_id_)) + sizeof(user_id_));
  _internal_metadata_.Clear();
}

bool AddMemberToMessageChannelRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.AddMemberToMessageChannelRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 channel_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &channel_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.AddMemberToMessageChannelRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.AddMemberToMessageChannelRequest)
  return false;
#undef DO_
}

void AddMemberToMessageChannelRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.AddMemberToMessageChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->channel_id(), output);
  }

  // int64 user_id = 2;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->user_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.AddMemberToMessageChannelRequest)
}

::google::protobuf::uint8* AddMemberToMessageChannelRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.AddMemberToMessageChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->channel_id(), target);
  }

  // int64 user_id = 2;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->user_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.AddMemberToMessageChannelRequest)
  return target;
}

size_t AddMemberToMessageChannelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.AddMemberToMessageChannelRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->channel_id());
  }

  // int64 user_id = 2;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddMemberToMessageChannelRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.AddMemberToMessageChannelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddMemberToMessageChannelRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddMemberToMessageChannelRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.AddMemberToMessageChannelRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.AddMemberToMessageChannelRequest)
    MergeFrom(*source);
  }
}

void AddMemberToMessageChannelRequest::MergeFrom(const AddMemberToMessageChannelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.AddMemberToMessageChannelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.channel_id() != 0) {
    set_channel_id(from.channel_id());
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void AddMemberToMessageChannelRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.AddMemberToMessageChannelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddMemberToMessageChannelRequest::CopyFrom(const AddMemberToMessageChannelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.AddMemberToMessageChannelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddMemberToMessageChannelRequest::IsInitialized() const {
  return true;
}

void AddMemberToMessageChannelRequest::Swap(AddMemberToMessageChannelRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddMemberToMessageChannelRequest::InternalSwap(AddMemberToMessageChannelRequest* other) {
  using std::swap;
  swap(channel_id_, other->channel_id_);
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddMemberToMessageChannelRequest::GetMetadata() const {
  protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddMemberToMessageChannelResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddMemberToMessageChannelResponse::AddMemberToMessageChannelResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fmessage_5fchannel_2eproto::scc_info_AddMemberToMessageChannelResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.AddMemberToMessageChannelResponse)
}
AddMemberToMessageChannelResponse::AddMemberToMessageChannelResponse(const AddMemberToMessageChannelResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:e8.AddMemberToMessageChannelResponse)
}

void AddMemberToMessageChannelResponse::SharedCtor() {
}

AddMemberToMessageChannelResponse::~AddMemberToMessageChannelResponse() {
  // @@protoc_insertion_point(destructor:e8.AddMemberToMessageChannelResponse)
  SharedDtor();
}

void AddMemberToMessageChannelResponse::SharedDtor() {
}

void AddMemberToMessageChannelResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddMemberToMessageChannelResponse::descriptor() {
  ::protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddMemberToMessageChannelResponse& AddMemberToMessageChannelResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fmessage_5fchannel_2eproto::scc_info_AddMemberToMessageChannelResponse.base);
  return *internal_default_instance();
}


void AddMemberToMessageChannelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.AddMemberToMessageChannelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool AddMemberToMessageChannelResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.AddMemberToMessageChannelResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:e8.AddMemberToMessageChannelResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.AddMemberToMessageChannelResponse)
  return false;
#undef DO_
}

void AddMemberToMessageChannelResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.AddMemberToMessageChannelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.AddMemberToMessageChannelResponse)
}

::google::protobuf::uint8* AddMemberToMessageChannelResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.AddMemberToMessageChannelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.AddMemberToMessageChannelResponse)
  return target;
}

size_t AddMemberToMessageChannelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.AddMemberToMessageChannelResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddMemberToMessageChannelResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.AddMemberToMessageChannelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AddMemberToMessageChannelResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddMemberToMessageChannelResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.AddMemberToMessageChannelResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.AddMemberToMessageChannelResponse)
    MergeFrom(*source);
  }
}

void AddMemberToMessageChannelResponse::MergeFrom(const AddMemberToMessageChannelResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.AddMemberToMessageChannelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AddMemberToMessageChannelResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.AddMemberToMessageChannelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddMemberToMessageChannelResponse::CopyFrom(const AddMemberToMessageChannelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.AddMemberToMessageChannelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddMemberToMessageChannelResponse::IsInitialized() const {
  return true;
}

void AddMemberToMessageChannelResponse::Swap(AddMemberToMessageChannelResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddMemberToMessageChannelResponse::InternalSwap(AddMemberToMessageChannelResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddMemberToMessageChannelResponse::GetMetadata() const {
  protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetMessageChannelKeyRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMessageChannelKeyRequest::kChannelIdFieldNumber;
const int GetMessageChannelKeyRequest::kTimeoutSecsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMessageChannelKeyRequest::GetMessageChannelKeyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fmessage_5fchannel_2eproto::scc_info_GetMessageChannelKeyRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.GetMessageChannelKeyRequest)
}
GetMessageChannelKeyRequest::GetMessageChannelKeyRequest(const GetMessageChannelKeyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&channel_id_, &from.channel_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&timeout_secs_) -
    reinterpret_cast<char*>(&channel_id_)) + sizeof(timeout_secs_));
  // @@protoc_insertion_point(copy_constructor:e8.GetMessageChannelKeyRequest)
}

void GetMessageChannelKeyRequest::SharedCtor() {
  ::memset(&channel_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timeout_secs_) -
      reinterpret_cast<char*>(&channel_id_)) + sizeof(timeout_secs_));
}

GetMessageChannelKeyRequest::~GetMessageChannelKeyRequest() {
  // @@protoc_insertion_point(destructor:e8.GetMessageChannelKeyRequest)
  SharedDtor();
}

void GetMessageChannelKeyRequest::SharedDtor() {
}

void GetMessageChannelKeyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetMessageChannelKeyRequest::descriptor() {
  ::protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetMessageChannelKeyRequest& GetMessageChannelKeyRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fmessage_5fchannel_2eproto::scc_info_GetMessageChannelKeyRequest.base);
  return *internal_default_instance();
}


void GetMessageChannelKeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.GetMessageChannelKeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&channel_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timeout_secs_) -
      reinterpret_cast<char*>(&channel_id_)) + sizeof(timeout_secs_));
  _internal_metadata_.Clear();
}

bool GetMessageChannelKeyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.GetMessageChannelKeyRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 channel_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &channel_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 timeout_secs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timeout_secs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.GetMessageChannelKeyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.GetMessageChannelKeyRequest)
  return false;
#undef DO_
}

void GetMessageChannelKeyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.GetMessageChannelKeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->channel_id(), output);
  }

  // int32 timeout_secs = 2;
  if (this->timeout_secs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->timeout_secs(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.GetMessageChannelKeyRequest)
}

::google::protobuf::uint8* GetMessageChannelKeyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.GetMessageChannelKeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->channel_id(), target);
  }

  // int32 timeout_secs = 2;
  if (this->timeout_secs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->timeout_secs(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.GetMessageChannelKeyRequest)
  return target;
}

size_t GetMessageChannelKeyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.GetMessageChannelKeyRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->channel_id());
  }

  // int32 timeout_secs = 2;
  if (this->timeout_secs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timeout_secs());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMessageChannelKeyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.GetMessageChannelKeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMessageChannelKeyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetMessageChannelKeyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.GetMessageChannelKeyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.GetMessageChannelKeyRequest)
    MergeFrom(*source);
  }
}

void GetMessageChannelKeyRequest::MergeFrom(const GetMessageChannelKeyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.GetMessageChannelKeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.channel_id() != 0) {
    set_channel_id(from.channel_id());
  }
  if (from.timeout_secs() != 0) {
    set_timeout_secs(from.timeout_secs());
  }
}

void GetMessageChannelKeyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.GetMessageChannelKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMessageChannelKeyRequest::CopyFrom(const GetMessageChannelKeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.GetMessageChannelKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMessageChannelKeyRequest::IsInitialized() const {
  return true;
}

void GetMessageChannelKeyRequest::Swap(GetMessageChannelKeyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMessageChannelKeyRequest::InternalSwap(GetMessageChannelKeyRequest* other) {
  using std::swap;
  swap(channel_id_, other->channel_id_);
  swap(timeout_secs_, other->timeout_secs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetMessageChannelKeyRequest::GetMetadata() const {
  protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetMessageChannelKeyResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMessageChannelKeyResponse::kChannelKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMessageChannelKeyResponse::GetMessageChannelKeyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fmessage_5fchannel_2eproto::scc_info_GetMessageChannelKeyResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.GetMessageChannelKeyResponse)
}
GetMessageChannelKeyResponse::GetMessageChannelKeyResponse(const GetMessageChannelKeyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  channel_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.channel_key().size() > 0) {
    channel_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_key_);
  }
  // @@protoc_insertion_point(copy_constructor:e8.GetMessageChannelKeyResponse)
}

void GetMessageChannelKeyResponse::SharedCtor() {
  channel_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetMessageChannelKeyResponse::~GetMessageChannelKeyResponse() {
  // @@protoc_insertion_point(destructor:e8.GetMessageChannelKeyResponse)
  SharedDtor();
}

void GetMessageChannelKeyResponse::SharedDtor() {
  channel_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetMessageChannelKeyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetMessageChannelKeyResponse::descriptor() {
  ::protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetMessageChannelKeyResponse& GetMessageChannelKeyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fmessage_5fchannel_2eproto::scc_info_GetMessageChannelKeyResponse.base);
  return *internal_default_instance();
}


void GetMessageChannelKeyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.GetMessageChannelKeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channel_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetMessageChannelKeyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.GetMessageChannelKeyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string channel_key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->channel_key().data(), static_cast<int>(this->channel_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "e8.GetMessageChannelKeyResponse.channel_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.GetMessageChannelKeyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.GetMessageChannelKeyResponse)
  return false;
#undef DO_
}

void GetMessageChannelKeyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.GetMessageChannelKeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string channel_key = 3;
  if (this->channel_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channel_key().data(), static_cast<int>(this->channel_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "e8.GetMessageChannelKeyResponse.channel_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->channel_key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.GetMessageChannelKeyResponse)
}

::google::protobuf::uint8* GetMessageChannelKeyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.GetMessageChannelKeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string channel_key = 3;
  if (this->channel_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channel_key().data(), static_cast<int>(this->channel_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "e8.GetMessageChannelKeyResponse.channel_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->channel_key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.GetMessageChannelKeyResponse)
  return target;
}

size_t GetMessageChannelKeyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.GetMessageChannelKeyResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string channel_key = 3;
  if (this->channel_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->channel_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMessageChannelKeyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.GetMessageChannelKeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMessageChannelKeyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetMessageChannelKeyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.GetMessageChannelKeyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.GetMessageChannelKeyResponse)
    MergeFrom(*source);
  }
}

void GetMessageChannelKeyResponse::MergeFrom(const GetMessageChannelKeyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.GetMessageChannelKeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.channel_key().size() > 0) {

    channel_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_key_);
  }
}

void GetMessageChannelKeyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.GetMessageChannelKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMessageChannelKeyResponse::CopyFrom(const GetMessageChannelKeyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.GetMessageChannelKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMessageChannelKeyResponse::IsInitialized() const {
  return true;
}

void GetMessageChannelKeyResponse::Swap(GetMessageChannelKeyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMessageChannelKeyResponse::InternalSwap(GetMessageChannelKeyResponse* other) {
  using std::swap;
  channel_key_.Swap(&other->channel_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetMessageChannelKeyResponse::GetMetadata() const {
  protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LeaveMessageChannelRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LeaveMessageChannelRequest::kChannelIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeaveMessageChannelRequest::LeaveMessageChannelRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fmessage_5fchannel_2eproto::scc_info_LeaveMessageChannelRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.LeaveMessageChannelRequest)
}
LeaveMessageChannelRequest::LeaveMessageChannelRequest(const LeaveMessageChannelRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  channel_id_ = from.channel_id_;
  // @@protoc_insertion_point(copy_constructor:e8.LeaveMessageChannelRequest)
}

void LeaveMessageChannelRequest::SharedCtor() {
  channel_id_ = GOOGLE_LONGLONG(0);
}

LeaveMessageChannelRequest::~LeaveMessageChannelRequest() {
  // @@protoc_insertion_point(destructor:e8.LeaveMessageChannelRequest)
  SharedDtor();
}

void LeaveMessageChannelRequest::SharedDtor() {
}

void LeaveMessageChannelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LeaveMessageChannelRequest::descriptor() {
  ::protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LeaveMessageChannelRequest& LeaveMessageChannelRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fmessage_5fchannel_2eproto::scc_info_LeaveMessageChannelRequest.base);
  return *internal_default_instance();
}


void LeaveMessageChannelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.LeaveMessageChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channel_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool LeaveMessageChannelRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.LeaveMessageChannelRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 channel_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &channel_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.LeaveMessageChannelRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.LeaveMessageChannelRequest)
  return false;
#undef DO_
}

void LeaveMessageChannelRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.LeaveMessageChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->channel_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.LeaveMessageChannelRequest)
}

::google::protobuf::uint8* LeaveMessageChannelRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.LeaveMessageChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->channel_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.LeaveMessageChannelRequest)
  return target;
}

size_t LeaveMessageChannelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.LeaveMessageChannelRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->channel_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LeaveMessageChannelRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.LeaveMessageChannelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LeaveMessageChannelRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LeaveMessageChannelRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.LeaveMessageChannelRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.LeaveMessageChannelRequest)
    MergeFrom(*source);
  }
}

void LeaveMessageChannelRequest::MergeFrom(const LeaveMessageChannelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.LeaveMessageChannelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.channel_id() != 0) {
    set_channel_id(from.channel_id());
  }
}

void LeaveMessageChannelRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.LeaveMessageChannelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaveMessageChannelRequest::CopyFrom(const LeaveMessageChannelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.LeaveMessageChannelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaveMessageChannelRequest::IsInitialized() const {
  return true;
}

void LeaveMessageChannelRequest::Swap(LeaveMessageChannelRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeaveMessageChannelRequest::InternalSwap(LeaveMessageChannelRequest* other) {
  using std::swap;
  swap(channel_id_, other->channel_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LeaveMessageChannelRequest::GetMetadata() const {
  protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LeaveMessageChannelResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeaveMessageChannelResponse::LeaveMessageChannelResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fmessage_5fchannel_2eproto::scc_info_LeaveMessageChannelResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.LeaveMessageChannelResponse)
}
LeaveMessageChannelResponse::LeaveMessageChannelResponse(const LeaveMessageChannelResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:e8.LeaveMessageChannelResponse)
}

void LeaveMessageChannelResponse::SharedCtor() {
}

LeaveMessageChannelResponse::~LeaveMessageChannelResponse() {
  // @@protoc_insertion_point(destructor:e8.LeaveMessageChannelResponse)
  SharedDtor();
}

void LeaveMessageChannelResponse::SharedDtor() {
}

void LeaveMessageChannelResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LeaveMessageChannelResponse::descriptor() {
  ::protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LeaveMessageChannelResponse& LeaveMessageChannelResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fmessage_5fchannel_2eproto::scc_info_LeaveMessageChannelResponse.base);
  return *internal_default_instance();
}


void LeaveMessageChannelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.LeaveMessageChannelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool LeaveMessageChannelResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.LeaveMessageChannelResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:e8.LeaveMessageChannelResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.LeaveMessageChannelResponse)
  return false;
#undef DO_
}

void LeaveMessageChannelResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.LeaveMessageChannelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.LeaveMessageChannelResponse)
}

::google::protobuf::uint8* LeaveMessageChannelResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.LeaveMessageChannelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.LeaveMessageChannelResponse)
  return target;
}

size_t LeaveMessageChannelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.LeaveMessageChannelResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LeaveMessageChannelResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.LeaveMessageChannelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LeaveMessageChannelResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LeaveMessageChannelResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.LeaveMessageChannelResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.LeaveMessageChannelResponse)
    MergeFrom(*source);
  }
}

void LeaveMessageChannelResponse::MergeFrom(const LeaveMessageChannelResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.LeaveMessageChannelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void LeaveMessageChannelResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.LeaveMessageChannelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaveMessageChannelResponse::CopyFrom(const LeaveMessageChannelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.LeaveMessageChannelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaveMessageChannelResponse::IsInitialized() const {
  return true;
}

void LeaveMessageChannelResponse::Swap(LeaveMessageChannelResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeaveMessageChannelResponse::InternalSwap(LeaveMessageChannelResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LeaveMessageChannelResponse::GetMetadata() const {
  protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetJoinedInMessageChannelsRequest::InitAsDefaultInstance() {
  ::e8::_GetJoinedInMessageChannelsRequest_default_instance_._instance.get_mutable()->pagination_ = const_cast< ::e8::Pagination*>(
      ::e8::Pagination::internal_default_instance());
}
void GetJoinedInMessageChannelsRequest::clear_pagination() {
  if (GetArenaNoVirtual() == NULL && pagination_ != NULL) {
    delete pagination_;
  }
  pagination_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetJoinedInMessageChannelsRequest::kPaginationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetJoinedInMessageChannelsRequest::GetJoinedInMessageChannelsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fmessage_5fchannel_2eproto::scc_info_GetJoinedInMessageChannelsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.GetJoinedInMessageChannelsRequest)
}
GetJoinedInMessageChannelsRequest::GetJoinedInMessageChannelsRequest(const GetJoinedInMessageChannelsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pagination()) {
    pagination_ = new ::e8::Pagination(*from.pagination_);
  } else {
    pagination_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:e8.GetJoinedInMessageChannelsRequest)
}

void GetJoinedInMessageChannelsRequest::SharedCtor() {
  pagination_ = NULL;
}

GetJoinedInMessageChannelsRequest::~GetJoinedInMessageChannelsRequest() {
  // @@protoc_insertion_point(destructor:e8.GetJoinedInMessageChannelsRequest)
  SharedDtor();
}

void GetJoinedInMessageChannelsRequest::SharedDtor() {
  if (this != internal_default_instance()) delete pagination_;
}

void GetJoinedInMessageChannelsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetJoinedInMessageChannelsRequest::descriptor() {
  ::protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetJoinedInMessageChannelsRequest& GetJoinedInMessageChannelsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fmessage_5fchannel_2eproto::scc_info_GetJoinedInMessageChannelsRequest.base);
  return *internal_default_instance();
}


void GetJoinedInMessageChannelsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.GetJoinedInMessageChannelsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pagination_ != NULL) {
    delete pagination_;
  }
  pagination_ = NULL;
  _internal_metadata_.Clear();
}

bool GetJoinedInMessageChannelsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.GetJoinedInMessageChannelsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .e8.Pagination pagination = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pagination()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.GetJoinedInMessageChannelsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.GetJoinedInMessageChannelsRequest)
  return false;
#undef DO_
}

void GetJoinedInMessageChannelsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.GetJoinedInMessageChannelsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .e8.Pagination pagination = 1;
  if (this->has_pagination()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pagination(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.GetJoinedInMessageChannelsRequest)
}

::google::protobuf::uint8* GetJoinedInMessageChannelsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.GetJoinedInMessageChannelsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .e8.Pagination pagination = 1;
  if (this->has_pagination()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pagination(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.GetJoinedInMessageChannelsRequest)
  return target;
}

size_t GetJoinedInMessageChannelsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.GetJoinedInMessageChannelsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .e8.Pagination pagination = 1;
  if (this->has_pagination()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pagination_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetJoinedInMessageChannelsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.GetJoinedInMessageChannelsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetJoinedInMessageChannelsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetJoinedInMessageChannelsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.GetJoinedInMessageChannelsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.GetJoinedInMessageChannelsRequest)
    MergeFrom(*source);
  }
}

void GetJoinedInMessageChannelsRequest::MergeFrom(const GetJoinedInMessageChannelsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.GetJoinedInMessageChannelsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pagination()) {
    mutable_pagination()->::e8::Pagination::MergeFrom(from.pagination());
  }
}

void GetJoinedInMessageChannelsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.GetJoinedInMessageChannelsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetJoinedInMessageChannelsRequest::CopyFrom(const GetJoinedInMessageChannelsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.GetJoinedInMessageChannelsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetJoinedInMessageChannelsRequest::IsInitialized() const {
  return true;
}

void GetJoinedInMessageChannelsRequest::Swap(GetJoinedInMessageChannelsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetJoinedInMessageChannelsRequest::InternalSwap(GetJoinedInMessageChannelsRequest* other) {
  using std::swap;
  swap(pagination_, other->pagination_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetJoinedInMessageChannelsRequest::GetMetadata() const {
  protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetJoinedInMessageChannelsResponse::InitAsDefaultInstance() {
}
void GetJoinedInMessageChannelsResponse::clear_channels() {
  channels_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetJoinedInMessageChannelsResponse::kChannelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetJoinedInMessageChannelsResponse::GetJoinedInMessageChannelsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fmessage_5fchannel_2eproto::scc_info_GetJoinedInMessageChannelsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.GetJoinedInMessageChannelsResponse)
}
GetJoinedInMessageChannelsResponse::GetJoinedInMessageChannelsResponse(const GetJoinedInMessageChannelsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      channels_(from.channels_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:e8.GetJoinedInMessageChannelsResponse)
}

void GetJoinedInMessageChannelsResponse::SharedCtor() {
}

GetJoinedInMessageChannelsResponse::~GetJoinedInMessageChannelsResponse() {
  // @@protoc_insertion_point(destructor:e8.GetJoinedInMessageChannelsResponse)
  SharedDtor();
}

void GetJoinedInMessageChannelsResponse::SharedDtor() {
}

void GetJoinedInMessageChannelsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetJoinedInMessageChannelsResponse::descriptor() {
  ::protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetJoinedInMessageChannelsResponse& GetJoinedInMessageChannelsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fmessage_5fchannel_2eproto::scc_info_GetJoinedInMessageChannelsResponse.base);
  return *internal_default_instance();
}


void GetJoinedInMessageChannelsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.GetJoinedInMessageChannelsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channels_.Clear();
  _internal_metadata_.Clear();
}

bool GetJoinedInMessageChannelsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.GetJoinedInMessageChannelsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .e8.MessageChannel channels = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_channels()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.GetJoinedInMessageChannelsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.GetJoinedInMessageChannelsResponse)
  return false;
#undef DO_
}

void GetJoinedInMessageChannelsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.GetJoinedInMessageChannelsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .e8.MessageChannel channels = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channels_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->channels(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.GetJoinedInMessageChannelsResponse)
}

::google::protobuf::uint8* GetJoinedInMessageChannelsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.GetJoinedInMessageChannelsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .e8.MessageChannel channels = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channels_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->channels(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.GetJoinedInMessageChannelsResponse)
  return target;
}

size_t GetJoinedInMessageChannelsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.GetJoinedInMessageChannelsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .e8.MessageChannel channels = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->channels_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->channels(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetJoinedInMessageChannelsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.GetJoinedInMessageChannelsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetJoinedInMessageChannelsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetJoinedInMessageChannelsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.GetJoinedInMessageChannelsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.GetJoinedInMessageChannelsResponse)
    MergeFrom(*source);
  }
}

void GetJoinedInMessageChannelsResponse::MergeFrom(const GetJoinedInMessageChannelsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.GetJoinedInMessageChannelsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  channels_.MergeFrom(from.channels_);
}

void GetJoinedInMessageChannelsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.GetJoinedInMessageChannelsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetJoinedInMessageChannelsResponse::CopyFrom(const GetJoinedInMessageChannelsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.GetJoinedInMessageChannelsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetJoinedInMessageChannelsResponse::IsInitialized() const {
  return true;
}

void GetJoinedInMessageChannelsResponse::Swap(GetJoinedInMessageChannelsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetJoinedInMessageChannelsResponse::InternalSwap(GetJoinedInMessageChannelsResponse* other) {
  using std::swap;
  CastToBase(&channels_)->InternalSwap(CastToBase(&other->channels_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetJoinedInMessageChannelsResponse::GetMetadata() const {
  protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetMessageChannelMembersRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMessageChannelMembersRequest::kChannelIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMessageChannelMembersRequest::GetMessageChannelMembersRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fmessage_5fchannel_2eproto::scc_info_GetMessageChannelMembersRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.GetMessageChannelMembersRequest)
}
GetMessageChannelMembersRequest::GetMessageChannelMembersRequest(const GetMessageChannelMembersRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  channel_id_ = from.channel_id_;
  // @@protoc_insertion_point(copy_constructor:e8.GetMessageChannelMembersRequest)
}

void GetMessageChannelMembersRequest::SharedCtor() {
  channel_id_ = GOOGLE_LONGLONG(0);
}

GetMessageChannelMembersRequest::~GetMessageChannelMembersRequest() {
  // @@protoc_insertion_point(destructor:e8.GetMessageChannelMembersRequest)
  SharedDtor();
}

void GetMessageChannelMembersRequest::SharedDtor() {
}

void GetMessageChannelMembersRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetMessageChannelMembersRequest::descriptor() {
  ::protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetMessageChannelMembersRequest& GetMessageChannelMembersRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fmessage_5fchannel_2eproto::scc_info_GetMessageChannelMembersRequest.base);
  return *internal_default_instance();
}


void GetMessageChannelMembersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.GetMessageChannelMembersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channel_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool GetMessageChannelMembersRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.GetMessageChannelMembersRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 channel_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &channel_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.GetMessageChannelMembersRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.GetMessageChannelMembersRequest)
  return false;
#undef DO_
}

void GetMessageChannelMembersRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.GetMessageChannelMembersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->channel_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.GetMessageChannelMembersRequest)
}

::google::protobuf::uint8* GetMessageChannelMembersRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.GetMessageChannelMembersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->channel_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.GetMessageChannelMembersRequest)
  return target;
}

size_t GetMessageChannelMembersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.GetMessageChannelMembersRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->channel_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMessageChannelMembersRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.GetMessageChannelMembersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMessageChannelMembersRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetMessageChannelMembersRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.GetMessageChannelMembersRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.GetMessageChannelMembersRequest)
    MergeFrom(*source);
  }
}

void GetMessageChannelMembersRequest::MergeFrom(const GetMessageChannelMembersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.GetMessageChannelMembersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.channel_id() != 0) {
    set_channel_id(from.channel_id());
  }
}

void GetMessageChannelMembersRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.GetMessageChannelMembersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMessageChannelMembersRequest::CopyFrom(const GetMessageChannelMembersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.GetMessageChannelMembersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMessageChannelMembersRequest::IsInitialized() const {
  return true;
}

void GetMessageChannelMembersRequest::Swap(GetMessageChannelMembersRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMessageChannelMembersRequest::InternalSwap(GetMessageChannelMembersRequest* other) {
  using std::swap;
  swap(channel_id_, other->channel_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetMessageChannelMembersRequest::GetMetadata() const {
  protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

GetMessageChannelMembersResponse_MemberTypesEntry_DoNotUse::GetMessageChannelMembersResponse_MemberTypesEntry_DoNotUse() {}
GetMessageChannelMembersResponse_MemberTypesEntry_DoNotUse::GetMessageChannelMembersResponse_MemberTypesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void GetMessageChannelMembersResponse_MemberTypesEntry_DoNotUse::MergeFrom(const GetMessageChannelMembersResponse_MemberTypesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata GetMessageChannelMembersResponse_MemberTypesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[11];
}
void GetMessageChannelMembersResponse_MemberTypesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void GetMessageChannelMembersResponse::InitAsDefaultInstance() {
}
void GetMessageChannelMembersResponse::clear_user_profiles() {
  user_profiles_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMessageChannelMembersResponse::kUserProfilesFieldNumber;
const int GetMessageChannelMembersResponse::kMemberTypesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMessageChannelMembersResponse::GetMessageChannelMembersResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fmessage_5fchannel_2eproto::scc_info_GetMessageChannelMembersResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.GetMessageChannelMembersResponse)
}
GetMessageChannelMembersResponse::GetMessageChannelMembersResponse(const GetMessageChannelMembersResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      user_profiles_(from.user_profiles_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  member_types_.MergeFrom(from.member_types_);
  // @@protoc_insertion_point(copy_constructor:e8.GetMessageChannelMembersResponse)
}

void GetMessageChannelMembersResponse::SharedCtor() {
}

GetMessageChannelMembersResponse::~GetMessageChannelMembersResponse() {
  // @@protoc_insertion_point(destructor:e8.GetMessageChannelMembersResponse)
  SharedDtor();
}

void GetMessageChannelMembersResponse::SharedDtor() {
}

void GetMessageChannelMembersResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetMessageChannelMembersResponse::descriptor() {
  ::protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetMessageChannelMembersResponse& GetMessageChannelMembersResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fmessage_5fchannel_2eproto::scc_info_GetMessageChannelMembersResponse.base);
  return *internal_default_instance();
}


void GetMessageChannelMembersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.GetMessageChannelMembersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_profiles_.Clear();
  member_types_.Clear();
  _internal_metadata_.Clear();
}

bool GetMessageChannelMembersResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.GetMessageChannelMembersResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .e8.UserPublicProfile user_profiles = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_user_profiles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int64, .e8.MessageChannelMemberType> member_types = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          GetMessageChannelMembersResponse_MemberTypesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              GetMessageChannelMembersResponse_MemberTypesEntry_DoNotUse,
              ::google::protobuf::int64, ::e8::MessageChannelMemberType,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_ENUM,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int64, ::e8::MessageChannelMemberType > > parser(&member_types_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.GetMessageChannelMembersResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.GetMessageChannelMembersResponse)
  return false;
#undef DO_
}

void GetMessageChannelMembersResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.GetMessageChannelMembersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .e8.UserPublicProfile user_profiles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->user_profiles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->user_profiles(static_cast<int>(i)),
      output);
  }

  // map<int64, .e8.MessageChannelMemberType> member_types = 2;
  if (!this->member_types().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::e8::MessageChannelMemberType >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->member_types().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->member_types().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::e8::MessageChannelMemberType >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::e8::MessageChannelMemberType >::const_iterator
          it = this->member_types().begin();
          it != this->member_types().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<GetMessageChannelMembersResponse_MemberTypesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(member_types_.NewEnumEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    } else {
      ::std::unique_ptr<GetMessageChannelMembersResponse_MemberTypesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::e8::MessageChannelMemberType >::const_iterator
          it = this->member_types().begin();
          it != this->member_types().end(); ++it) {
        entry.reset(member_types_.NewEnumEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.GetMessageChannelMembersResponse)
}

::google::protobuf::uint8* GetMessageChannelMembersResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.GetMessageChannelMembersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .e8.UserPublicProfile user_profiles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->user_profiles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->user_profiles(static_cast<int>(i)), deterministic, target);
  }

  // map<int64, .e8.MessageChannelMemberType> member_types = 2;
  if (!this->member_types().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::e8::MessageChannelMemberType >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->member_types().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->member_types().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::e8::MessageChannelMemberType >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::e8::MessageChannelMemberType >::const_iterator
          it = this->member_types().begin();
          it != this->member_types().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<GetMessageChannelMembersResponse_MemberTypesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(member_types_.NewEnumEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    } else {
      ::std::unique_ptr<GetMessageChannelMembersResponse_MemberTypesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::e8::MessageChannelMemberType >::const_iterator
          it = this->member_types().begin();
          it != this->member_types().end(); ++it) {
        entry.reset(member_types_.NewEnumEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.GetMessageChannelMembersResponse)
  return target;
}

size_t GetMessageChannelMembersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.GetMessageChannelMembersResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .e8.UserPublicProfile user_profiles = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->user_profiles_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->user_profiles(static_cast<int>(i)));
    }
  }

  // map<int64, .e8.MessageChannelMemberType> member_types = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->member_types_size());
  {
    ::std::unique_ptr<GetMessageChannelMembersResponse_MemberTypesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int64, ::e8::MessageChannelMemberType >::const_iterator
        it = this->member_types().begin();
        it != this->member_types().end(); ++it) {
      entry.reset(member_types_.NewEnumEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMessageChannelMembersResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.GetMessageChannelMembersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMessageChannelMembersResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetMessageChannelMembersResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.GetMessageChannelMembersResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.GetMessageChannelMembersResponse)
    MergeFrom(*source);
  }
}

void GetMessageChannelMembersResponse::MergeFrom(const GetMessageChannelMembersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.GetMessageChannelMembersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  user_profiles_.MergeFrom(from.user_profiles_);
  member_types_.MergeFrom(from.member_types_);
}

void GetMessageChannelMembersResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.GetMessageChannelMembersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMessageChannelMembersResponse::CopyFrom(const GetMessageChannelMembersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.GetMessageChannelMembersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMessageChannelMembersResponse::IsInitialized() const {
  return true;
}

void GetMessageChannelMembersResponse::Swap(GetMessageChannelMembersResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMessageChannelMembersResponse::InternalSwap(GetMessageChannelMembersResponse* other) {
  using std::swap;
  CastToBase(&user_profiles_)->InternalSwap(CastToBase(&other->user_profiles_));
  member_types_.Swap(&other->member_types_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetMessageChannelMembersResponse::GetMetadata() const {
  protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace e8
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::CreateMessageChannelRequest* Arena::CreateMaybeMessage< ::e8::CreateMessageChannelRequest >(Arena* arena) {
  return Arena::CreateInternal< ::e8::CreateMessageChannelRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::CreateMessageChannelResponse* Arena::CreateMaybeMessage< ::e8::CreateMessageChannelResponse >(Arena* arena) {
  return Arena::CreateInternal< ::e8::CreateMessageChannelResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::AddMemberToMessageChannelRequest* Arena::CreateMaybeMessage< ::e8::AddMemberToMessageChannelRequest >(Arena* arena) {
  return Arena::CreateInternal< ::e8::AddMemberToMessageChannelRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::AddMemberToMessageChannelResponse* Arena::CreateMaybeMessage< ::e8::AddMemberToMessageChannelResponse >(Arena* arena) {
  return Arena::CreateInternal< ::e8::AddMemberToMessageChannelResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::GetMessageChannelKeyRequest* Arena::CreateMaybeMessage< ::e8::GetMessageChannelKeyRequest >(Arena* arena) {
  return Arena::CreateInternal< ::e8::GetMessageChannelKeyRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::GetMessageChannelKeyResponse* Arena::CreateMaybeMessage< ::e8::GetMessageChannelKeyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::e8::GetMessageChannelKeyResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::LeaveMessageChannelRequest* Arena::CreateMaybeMessage< ::e8::LeaveMessageChannelRequest >(Arena* arena) {
  return Arena::CreateInternal< ::e8::LeaveMessageChannelRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::LeaveMessageChannelResponse* Arena::CreateMaybeMessage< ::e8::LeaveMessageChannelResponse >(Arena* arena) {
  return Arena::CreateInternal< ::e8::LeaveMessageChannelResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::GetJoinedInMessageChannelsRequest* Arena::CreateMaybeMessage< ::e8::GetJoinedInMessageChannelsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::e8::GetJoinedInMessageChannelsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::GetJoinedInMessageChannelsResponse* Arena::CreateMaybeMessage< ::e8::GetJoinedInMessageChannelsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::e8::GetJoinedInMessageChannelsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::GetMessageChannelMembersRequest* Arena::CreateMaybeMessage< ::e8::GetMessageChannelMembersRequest >(Arena* arena) {
  return Arena::CreateInternal< ::e8::GetMessageChannelMembersRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::GetMessageChannelMembersResponse_MemberTypesEntry_DoNotUse* Arena::CreateMaybeMessage< ::e8::GetMessageChannelMembersResponse_MemberTypesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::e8::GetMessageChannelMembersResponse_MemberTypesEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::GetMessageChannelMembersResponse* Arena::CreateMaybeMessage< ::e8::GetMessageChannelMembersResponse >(Arena* arena) {
  return Arena::CreateInternal< ::e8::GetMessageChannelMembersResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
