// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: deployment_service.proto

#ifndef PROTOBUF_INCLUDED_deployment_5fservice_2eproto
#define PROTOBUF_INCLUDED_deployment_5fservice_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_deployment_5fservice_2eproto 

namespace protobuf_deployment_5fservice_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_deployment_5fservice_2eproto
namespace e8 {
class DeployRequest;
class DeployRequestDefaultTypeInternal;
extern DeployRequestDefaultTypeInternal _DeployRequest_default_instance_;
class DeployResponse;
class DeployResponseDefaultTypeInternal;
extern DeployResponseDefaultTypeInternal _DeployResponse_default_instance_;
}  // namespace e8
namespace google {
namespace protobuf {
template<> ::e8::DeployRequest* Arena::CreateMaybeMessage<::e8::DeployRequest>(Arena*);
template<> ::e8::DeployResponse* Arena::CreateMaybeMessage<::e8::DeployResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace e8 {

// ===================================================================

class DeployRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.DeployRequest) */ {
 public:
  DeployRequest();
  virtual ~DeployRequest();

  DeployRequest(const DeployRequest& from);

  inline DeployRequest& operator=(const DeployRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeployRequest(DeployRequest&& from) noexcept
    : DeployRequest() {
    *this = ::std::move(from);
  }

  inline DeployRequest& operator=(DeployRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeployRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeployRequest* internal_default_instance() {
    return reinterpret_cast<const DeployRequest*>(
               &_DeployRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(DeployRequest* other);
  friend void swap(DeployRequest& a, DeployRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeployRequest* New() const final {
    return CreateMaybeMessage<DeployRequest>(NULL);
  }

  DeployRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeployRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeployRequest& from);
  void MergeFrom(const DeployRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeployRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string git_url = 1;
  void clear_git_url();
  static const int kGitUrlFieldNumber = 1;
  const ::std::string& git_url() const;
  void set_git_url(const ::std::string& value);
  #if LANG_CXX11
  void set_git_url(::std::string&& value);
  #endif
  void set_git_url(const char* value);
  void set_git_url(const char* value, size_t size);
  ::std::string* mutable_git_url();
  ::std::string* release_git_url();
  void set_allocated_git_url(::std::string* git_url);

  // string folder_name = 2;
  void clear_folder_name();
  static const int kFolderNameFieldNumber = 2;
  const ::std::string& folder_name() const;
  void set_folder_name(const ::std::string& value);
  #if LANG_CXX11
  void set_folder_name(::std::string&& value);
  #endif
  void set_folder_name(const char* value);
  void set_folder_name(const char* value, size_t size);
  ::std::string* mutable_folder_name();
  ::std::string* release_folder_name();
  void set_allocated_folder_name(::std::string* folder_name);

  // string build_script = 3;
  void clear_build_script();
  static const int kBuildScriptFieldNumber = 3;
  const ::std::string& build_script() const;
  void set_build_script(const ::std::string& value);
  #if LANG_CXX11
  void set_build_script(::std::string&& value);
  #endif
  void set_build_script(const char* value);
  void set_build_script(const char* value, size_t size);
  ::std::string* mutable_build_script();
  ::std::string* release_build_script();
  void set_allocated_build_script(::std::string* build_script);

  // string image_name = 4;
  void clear_image_name();
  static const int kImageNameFieldNumber = 4;
  const ::std::string& image_name() const;
  void set_image_name(const ::std::string& value);
  #if LANG_CXX11
  void set_image_name(::std::string&& value);
  #endif
  void set_image_name(const char* value);
  void set_image_name(const char* value, size_t size);
  ::std::string* mutable_image_name();
  ::std::string* release_image_name();
  void set_allocated_image_name(::std::string* image_name);

  // @@protoc_insertion_point(class_scope:e8.DeployRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr git_url_;
  ::google::protobuf::internal::ArenaStringPtr folder_name_;
  ::google::protobuf::internal::ArenaStringPtr build_script_;
  ::google::protobuf::internal::ArenaStringPtr image_name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_deployment_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeployResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.DeployResponse) */ {
 public:
  DeployResponse();
  virtual ~DeployResponse();

  DeployResponse(const DeployResponse& from);

  inline DeployResponse& operator=(const DeployResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeployResponse(DeployResponse&& from) noexcept
    : DeployResponse() {
    *this = ::std::move(from);
  }

  inline DeployResponse& operator=(DeployResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeployResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeployResponse* internal_default_instance() {
    return reinterpret_cast<const DeployResponse*>(
               &_DeployResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(DeployResponse* other);
  friend void swap(DeployResponse& a, DeployResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeployResponse* New() const final {
    return CreateMaybeMessage<DeployResponse>(NULL);
  }

  DeployResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeployResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeployResponse& from);
  void MergeFrom(const DeployResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeployResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string step_description = 3;
  void clear_step_description();
  static const int kStepDescriptionFieldNumber = 3;
  const ::std::string& step_description() const;
  void set_step_description(const ::std::string& value);
  #if LANG_CXX11
  void set_step_description(::std::string&& value);
  #endif
  void set_step_description(const char* value);
  void set_step_description(const char* value, size_t size);
  ::std::string* mutable_step_description();
  ::std::string* release_step_description();
  void set_allocated_step_description(::std::string* step_description);

  // int32 current_step = 1;
  void clear_current_step();
  static const int kCurrentStepFieldNumber = 1;
  ::google::protobuf::int32 current_step() const;
  void set_current_step(::google::protobuf::int32 value);

  // int32 total_num_steps = 2;
  void clear_total_num_steps();
  static const int kTotalNumStepsFieldNumber = 2;
  ::google::protobuf::int32 total_num_steps() const;
  void set_total_num_steps(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:e8.DeployResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr step_description_;
  ::google::protobuf::int32 current_step_;
  ::google::protobuf::int32 total_num_steps_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_deployment_5fservice_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DeployRequest

// string git_url = 1;
inline void DeployRequest::clear_git_url() {
  git_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeployRequest::git_url() const {
  // @@protoc_insertion_point(field_get:e8.DeployRequest.git_url)
  return git_url_.GetNoArena();
}
inline void DeployRequest::set_git_url(const ::std::string& value) {
  
  git_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:e8.DeployRequest.git_url)
}
#if LANG_CXX11
inline void DeployRequest::set_git_url(::std::string&& value) {
  
  git_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:e8.DeployRequest.git_url)
}
#endif
inline void DeployRequest::set_git_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  git_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:e8.DeployRequest.git_url)
}
inline void DeployRequest::set_git_url(const char* value, size_t size) {
  
  git_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:e8.DeployRequest.git_url)
}
inline ::std::string* DeployRequest::mutable_git_url() {
  
  // @@protoc_insertion_point(field_mutable:e8.DeployRequest.git_url)
  return git_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeployRequest::release_git_url() {
  // @@protoc_insertion_point(field_release:e8.DeployRequest.git_url)
  
  return git_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeployRequest::set_allocated_git_url(::std::string* git_url) {
  if (git_url != NULL) {
    
  } else {
    
  }
  git_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), git_url);
  // @@protoc_insertion_point(field_set_allocated:e8.DeployRequest.git_url)
}

// string folder_name = 2;
inline void DeployRequest::clear_folder_name() {
  folder_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeployRequest::folder_name() const {
  // @@protoc_insertion_point(field_get:e8.DeployRequest.folder_name)
  return folder_name_.GetNoArena();
}
inline void DeployRequest::set_folder_name(const ::std::string& value) {
  
  folder_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:e8.DeployRequest.folder_name)
}
#if LANG_CXX11
inline void DeployRequest::set_folder_name(::std::string&& value) {
  
  folder_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:e8.DeployRequest.folder_name)
}
#endif
inline void DeployRequest::set_folder_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  folder_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:e8.DeployRequest.folder_name)
}
inline void DeployRequest::set_folder_name(const char* value, size_t size) {
  
  folder_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:e8.DeployRequest.folder_name)
}
inline ::std::string* DeployRequest::mutable_folder_name() {
  
  // @@protoc_insertion_point(field_mutable:e8.DeployRequest.folder_name)
  return folder_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeployRequest::release_folder_name() {
  // @@protoc_insertion_point(field_release:e8.DeployRequest.folder_name)
  
  return folder_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeployRequest::set_allocated_folder_name(::std::string* folder_name) {
  if (folder_name != NULL) {
    
  } else {
    
  }
  folder_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), folder_name);
  // @@protoc_insertion_point(field_set_allocated:e8.DeployRequest.folder_name)
}

// string build_script = 3;
inline void DeployRequest::clear_build_script() {
  build_script_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeployRequest::build_script() const {
  // @@protoc_insertion_point(field_get:e8.DeployRequest.build_script)
  return build_script_.GetNoArena();
}
inline void DeployRequest::set_build_script(const ::std::string& value) {
  
  build_script_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:e8.DeployRequest.build_script)
}
#if LANG_CXX11
inline void DeployRequest::set_build_script(::std::string&& value) {
  
  build_script_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:e8.DeployRequest.build_script)
}
#endif
inline void DeployRequest::set_build_script(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  build_script_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:e8.DeployRequest.build_script)
}
inline void DeployRequest::set_build_script(const char* value, size_t size) {
  
  build_script_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:e8.DeployRequest.build_script)
}
inline ::std::string* DeployRequest::mutable_build_script() {
  
  // @@protoc_insertion_point(field_mutable:e8.DeployRequest.build_script)
  return build_script_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeployRequest::release_build_script() {
  // @@protoc_insertion_point(field_release:e8.DeployRequest.build_script)
  
  return build_script_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeployRequest::set_allocated_build_script(::std::string* build_script) {
  if (build_script != NULL) {
    
  } else {
    
  }
  build_script_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), build_script);
  // @@protoc_insertion_point(field_set_allocated:e8.DeployRequest.build_script)
}

// string image_name = 4;
inline void DeployRequest::clear_image_name() {
  image_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeployRequest::image_name() const {
  // @@protoc_insertion_point(field_get:e8.DeployRequest.image_name)
  return image_name_.GetNoArena();
}
inline void DeployRequest::set_image_name(const ::std::string& value) {
  
  image_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:e8.DeployRequest.image_name)
}
#if LANG_CXX11
inline void DeployRequest::set_image_name(::std::string&& value) {
  
  image_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:e8.DeployRequest.image_name)
}
#endif
inline void DeployRequest::set_image_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  image_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:e8.DeployRequest.image_name)
}
inline void DeployRequest::set_image_name(const char* value, size_t size) {
  
  image_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:e8.DeployRequest.image_name)
}
inline ::std::string* DeployRequest::mutable_image_name() {
  
  // @@protoc_insertion_point(field_mutable:e8.DeployRequest.image_name)
  return image_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeployRequest::release_image_name() {
  // @@protoc_insertion_point(field_release:e8.DeployRequest.image_name)
  
  return image_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeployRequest::set_allocated_image_name(::std::string* image_name) {
  if (image_name != NULL) {
    
  } else {
    
  }
  image_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image_name);
  // @@protoc_insertion_point(field_set_allocated:e8.DeployRequest.image_name)
}

// -------------------------------------------------------------------

// DeployResponse

// int32 current_step = 1;
inline void DeployResponse::clear_current_step() {
  current_step_ = 0;
}
inline ::google::protobuf::int32 DeployResponse::current_step() const {
  // @@protoc_insertion_point(field_get:e8.DeployResponse.current_step)
  return current_step_;
}
inline void DeployResponse::set_current_step(::google::protobuf::int32 value) {
  
  current_step_ = value;
  // @@protoc_insertion_point(field_set:e8.DeployResponse.current_step)
}

// int32 total_num_steps = 2;
inline void DeployResponse::clear_total_num_steps() {
  total_num_steps_ = 0;
}
inline ::google::protobuf::int32 DeployResponse::total_num_steps() const {
  // @@protoc_insertion_point(field_get:e8.DeployResponse.total_num_steps)
  return total_num_steps_;
}
inline void DeployResponse::set_total_num_steps(::google::protobuf::int32 value) {
  
  total_num_steps_ = value;
  // @@protoc_insertion_point(field_set:e8.DeployResponse.total_num_steps)
}

// string step_description = 3;
inline void DeployResponse::clear_step_description() {
  step_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeployResponse::step_description() const {
  // @@protoc_insertion_point(field_get:e8.DeployResponse.step_description)
  return step_description_.GetNoArena();
}
inline void DeployResponse::set_step_description(const ::std::string& value) {
  
  step_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:e8.DeployResponse.step_description)
}
#if LANG_CXX11
inline void DeployResponse::set_step_description(::std::string&& value) {
  
  step_description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:e8.DeployResponse.step_description)
}
#endif
inline void DeployResponse::set_step_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  step_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:e8.DeployResponse.step_description)
}
inline void DeployResponse::set_step_description(const char* value, size_t size) {
  
  step_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:e8.DeployResponse.step_description)
}
inline ::std::string* DeployResponse::mutable_step_description() {
  
  // @@protoc_insertion_point(field_mutable:e8.DeployResponse.step_description)
  return step_description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeployResponse::release_step_description() {
  // @@protoc_insertion_point(field_release:e8.DeployResponse.step_description)
  
  return step_description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeployResponse::set_allocated_step_description(::std::string* step_description) {
  if (step_description != NULL) {
    
  } else {
    
  }
  step_description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), step_description);
  // @@protoc_insertion_point(field_set_allocated:e8.DeployResponse.step_description)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace e8

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_deployment_5fservice_2eproto
