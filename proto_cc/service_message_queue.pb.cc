// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service_message_queue.proto

#include "service_message_queue.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_real_5ftime_5fmessage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_real_5ftime_5fmessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RealTimeMessage;
}  // namespace protobuf_real_5ftime_5fmessage_2eproto
namespace e8 {
class EnqueueMessageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnqueueMessageRequest>
      _instance;
} _EnqueueMessageRequest_default_instance_;
class EnqueueMessageResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnqueueMessageResponse>
      _instance;
} _EnqueueMessageResponse_default_instance_;
class DequeueMessageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DequeueMessageRequest>
      _instance;
} _DequeueMessageRequest_default_instance_;
class DequeueMessageResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DequeueMessageResponse>
      _instance;
} _DequeueMessageResponse_default_instance_;
class ListQueueMessageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListQueueMessageRequest>
      _instance;
} _ListQueueMessageRequest_default_instance_;
class ListQueueMessageResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListQueueMessageResponse>
      _instance;
} _ListQueueMessageResponse_default_instance_;
}  // namespace e8
namespace protobuf_service_5fmessage_5fqueue_2eproto {
static void InitDefaultsEnqueueMessageRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_EnqueueMessageRequest_default_instance_;
    new (ptr) ::e8::EnqueueMessageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::EnqueueMessageRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EnqueueMessageRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEnqueueMessageRequest}, {
      &protobuf_real_5ftime_5fmessage_2eproto::scc_info_RealTimeMessage.base,}};

static void InitDefaultsEnqueueMessageResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_EnqueueMessageResponse_default_instance_;
    new (ptr) ::e8::EnqueueMessageResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::EnqueueMessageResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EnqueueMessageResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEnqueueMessageResponse}, {}};

static void InitDefaultsDequeueMessageRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_DequeueMessageRequest_default_instance_;
    new (ptr) ::e8::DequeueMessageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::DequeueMessageRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DequeueMessageRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDequeueMessageRequest}, {}};

static void InitDefaultsDequeueMessageResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_DequeueMessageResponse_default_instance_;
    new (ptr) ::e8::DequeueMessageResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::DequeueMessageResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DequeueMessageResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDequeueMessageResponse}, {
      &protobuf_real_5ftime_5fmessage_2eproto::scc_info_RealTimeMessage.base,}};

static void InitDefaultsListQueueMessageRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_ListQueueMessageRequest_default_instance_;
    new (ptr) ::e8::ListQueueMessageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::ListQueueMessageRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListQueueMessageRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListQueueMessageRequest}, {}};

static void InitDefaultsListQueueMessageResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_ListQueueMessageResponse_default_instance_;
    new (ptr) ::e8::ListQueueMessageResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::ListQueueMessageResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListQueueMessageResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListQueueMessageResponse}, {
      &protobuf_real_5ftime_5fmessage_2eproto::scc_info_RealTimeMessage.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_EnqueueMessageRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EnqueueMessageResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DequeueMessageRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DequeueMessageResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListQueueMessageRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListQueueMessageResponse.base);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::EnqueueMessageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::EnqueueMessageRequest, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::EnqueueMessageRequest, messages_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::EnqueueMessageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::DequeueMessageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::DequeueMessageRequest, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::DequeueMessageRequest, previous_message_delivered_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::DequeueMessageRequest, end_operation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::DequeueMessageRequest, wait_duration_secs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::DequeueMessageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::DequeueMessageResponse, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::ListQueueMessageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::ListQueueMessageRequest, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::ListQueueMessageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::ListQueueMessageResponse, messages_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::e8::EnqueueMessageRequest)},
  { 7, -1, sizeof(::e8::EnqueueMessageResponse)},
  { 12, -1, sizeof(::e8::DequeueMessageRequest)},
  { 21, -1, sizeof(::e8::DequeueMessageResponse)},
  { 27, -1, sizeof(::e8::ListQueueMessageRequest)},
  { 33, -1, sizeof(::e8::ListQueueMessageResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_EnqueueMessageRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_EnqueueMessageResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_DequeueMessageRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_DequeueMessageResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_ListQueueMessageRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_ListQueueMessageResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "service_message_queue.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\033service_message_queue.proto\022\002e8\032\027real_"
      "time_message.proto\"O\n\025EnqueueMessageRequ"
      "est\022\017\n\007user_id\030\001 \001(\003\022%\n\010messages\030\002 \003(\0132\023"
      ".e8.RealTimeMessage\"\030\n\026EnqueueMessageRes"
      "ponse\"\177\n\025DequeueMessageRequest\022\017\n\007user_i"
      "d\030\001 \001(\003\022\"\n\032previous_message_delivered\030\002 "
      "\001(\010\022\025\n\rend_operation\030\003 \001(\010\022\032\n\022wait_durat"
      "ion_secs\030\004 \001(\005\">\n\026DequeueMessageResponse"
      "\022$\n\007message\030\001 \001(\0132\023.e8.RealTimeMessage\"*"
      "\n\027ListQueueMessageRequest\022\017\n\007user_id\030\001 \001"
      "(\003\"A\n\030ListQueueMessageResponse\022%\n\010messag"
      "es\030\001 \003(\0132\023.e8.RealTimeMessage2\372\001\n\023Messag"
      "eQueueService\022G\n\016EnqueueMessage\022\031.e8.Enq"
      "ueueMessageRequest\032\032.e8.EnqueueMessageRe"
      "sponse\022K\n\016DequeueMessage\022\031.e8.DequeueMes"
      "sageRequest\032\032.e8.DequeueMessageResponse("
      "\0010\001\022M\n\020ListQueueMessage\022\033.e8.ListQueueMe"
      "ssageRequest\032\034.e8.ListQueueMessageRespon"
      "seb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 730);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "service_message_queue.proto", &protobuf_RegisterTypes);
  ::protobuf_real_5ftime_5fmessage_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_service_5fmessage_5fqueue_2eproto
namespace e8 {

// ===================================================================

void EnqueueMessageRequest::InitAsDefaultInstance() {
}
void EnqueueMessageRequest::clear_messages() {
  messages_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnqueueMessageRequest::kUserIdFieldNumber;
const int EnqueueMessageRequest::kMessagesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnqueueMessageRequest::EnqueueMessageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fmessage_5fqueue_2eproto::scc_info_EnqueueMessageRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.EnqueueMessageRequest)
}
EnqueueMessageRequest::EnqueueMessageRequest(const EnqueueMessageRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      messages_(from.messages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:e8.EnqueueMessageRequest)
}

void EnqueueMessageRequest::SharedCtor() {
  user_id_ = GOOGLE_LONGLONG(0);
}

EnqueueMessageRequest::~EnqueueMessageRequest() {
  // @@protoc_insertion_point(destructor:e8.EnqueueMessageRequest)
  SharedDtor();
}

void EnqueueMessageRequest::SharedDtor() {
}

void EnqueueMessageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EnqueueMessageRequest::descriptor() {
  ::protobuf_service_5fmessage_5fqueue_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fqueue_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnqueueMessageRequest& EnqueueMessageRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fmessage_5fqueue_2eproto::scc_info_EnqueueMessageRequest.base);
  return *internal_default_instance();
}


void EnqueueMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.EnqueueMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  messages_.Clear();
  user_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool EnqueueMessageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.EnqueueMessageRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .e8.RealTimeMessage messages = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_messages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.EnqueueMessageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.EnqueueMessageRequest)
  return false;
#undef DO_
}

void EnqueueMessageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.EnqueueMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->user_id(), output);
  }

  // repeated .e8.RealTimeMessage messages = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->messages_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->messages(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.EnqueueMessageRequest)
}

::google::protobuf::uint8* EnqueueMessageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.EnqueueMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->user_id(), target);
  }

  // repeated .e8.RealTimeMessage messages = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->messages_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->messages(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.EnqueueMessageRequest)
  return target;
}

size_t EnqueueMessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.EnqueueMessageRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .e8.RealTimeMessage messages = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->messages_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->messages(static_cast<int>(i)));
    }
  }

  // int64 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnqueueMessageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.EnqueueMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EnqueueMessageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnqueueMessageRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.EnqueueMessageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.EnqueueMessageRequest)
    MergeFrom(*source);
  }
}

void EnqueueMessageRequest::MergeFrom(const EnqueueMessageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.EnqueueMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  messages_.MergeFrom(from.messages_);
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void EnqueueMessageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.EnqueueMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnqueueMessageRequest::CopyFrom(const EnqueueMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.EnqueueMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnqueueMessageRequest::IsInitialized() const {
  return true;
}

void EnqueueMessageRequest::Swap(EnqueueMessageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnqueueMessageRequest::InternalSwap(EnqueueMessageRequest* other) {
  using std::swap;
  CastToBase(&messages_)->InternalSwap(CastToBase(&other->messages_));
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EnqueueMessageRequest::GetMetadata() const {
  protobuf_service_5fmessage_5fqueue_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fqueue_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EnqueueMessageResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnqueueMessageResponse::EnqueueMessageResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fmessage_5fqueue_2eproto::scc_info_EnqueueMessageResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.EnqueueMessageResponse)
}
EnqueueMessageResponse::EnqueueMessageResponse(const EnqueueMessageResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:e8.EnqueueMessageResponse)
}

void EnqueueMessageResponse::SharedCtor() {
}

EnqueueMessageResponse::~EnqueueMessageResponse() {
  // @@protoc_insertion_point(destructor:e8.EnqueueMessageResponse)
  SharedDtor();
}

void EnqueueMessageResponse::SharedDtor() {
}

void EnqueueMessageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EnqueueMessageResponse::descriptor() {
  ::protobuf_service_5fmessage_5fqueue_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fqueue_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnqueueMessageResponse& EnqueueMessageResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fmessage_5fqueue_2eproto::scc_info_EnqueueMessageResponse.base);
  return *internal_default_instance();
}


void EnqueueMessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.EnqueueMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool EnqueueMessageResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.EnqueueMessageResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:e8.EnqueueMessageResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.EnqueueMessageResponse)
  return false;
#undef DO_
}

void EnqueueMessageResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.EnqueueMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.EnqueueMessageResponse)
}

::google::protobuf::uint8* EnqueueMessageResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.EnqueueMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.EnqueueMessageResponse)
  return target;
}

size_t EnqueueMessageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.EnqueueMessageResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnqueueMessageResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.EnqueueMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const EnqueueMessageResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnqueueMessageResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.EnqueueMessageResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.EnqueueMessageResponse)
    MergeFrom(*source);
  }
}

void EnqueueMessageResponse::MergeFrom(const EnqueueMessageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.EnqueueMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void EnqueueMessageResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.EnqueueMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnqueueMessageResponse::CopyFrom(const EnqueueMessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.EnqueueMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnqueueMessageResponse::IsInitialized() const {
  return true;
}

void EnqueueMessageResponse::Swap(EnqueueMessageResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnqueueMessageResponse::InternalSwap(EnqueueMessageResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EnqueueMessageResponse::GetMetadata() const {
  protobuf_service_5fmessage_5fqueue_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fqueue_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DequeueMessageRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DequeueMessageRequest::kUserIdFieldNumber;
const int DequeueMessageRequest::kPreviousMessageDeliveredFieldNumber;
const int DequeueMessageRequest::kEndOperationFieldNumber;
const int DequeueMessageRequest::kWaitDurationSecsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DequeueMessageRequest::DequeueMessageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fmessage_5fqueue_2eproto::scc_info_DequeueMessageRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.DequeueMessageRequest)
}
DequeueMessageRequest::DequeueMessageRequest(const DequeueMessageRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&wait_duration_secs_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(wait_duration_secs_));
  // @@protoc_insertion_point(copy_constructor:e8.DequeueMessageRequest)
}

void DequeueMessageRequest::SharedCtor() {
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wait_duration_secs_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(wait_duration_secs_));
}

DequeueMessageRequest::~DequeueMessageRequest() {
  // @@protoc_insertion_point(destructor:e8.DequeueMessageRequest)
  SharedDtor();
}

void DequeueMessageRequest::SharedDtor() {
}

void DequeueMessageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DequeueMessageRequest::descriptor() {
  ::protobuf_service_5fmessage_5fqueue_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fqueue_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DequeueMessageRequest& DequeueMessageRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fmessage_5fqueue_2eproto::scc_info_DequeueMessageRequest.base);
  return *internal_default_instance();
}


void DequeueMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.DequeueMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wait_duration_secs_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(wait_duration_secs_));
  _internal_metadata_.Clear();
}

bool DequeueMessageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.DequeueMessageRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool previous_message_delivered = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &previous_message_delivered_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool end_operation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &end_operation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 wait_duration_secs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wait_duration_secs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.DequeueMessageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.DequeueMessageRequest)
  return false;
#undef DO_
}

void DequeueMessageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.DequeueMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->user_id(), output);
  }

  // bool previous_message_delivered = 2;
  if (this->previous_message_delivered() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->previous_message_delivered(), output);
  }

  // bool end_operation = 3;
  if (this->end_operation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->end_operation(), output);
  }

  // int32 wait_duration_secs = 4;
  if (this->wait_duration_secs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->wait_duration_secs(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.DequeueMessageRequest)
}

::google::protobuf::uint8* DequeueMessageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.DequeueMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->user_id(), target);
  }

  // bool previous_message_delivered = 2;
  if (this->previous_message_delivered() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->previous_message_delivered(), target);
  }

  // bool end_operation = 3;
  if (this->end_operation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->end_operation(), target);
  }

  // int32 wait_duration_secs = 4;
  if (this->wait_duration_secs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->wait_duration_secs(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.DequeueMessageRequest)
  return target;
}

size_t DequeueMessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.DequeueMessageRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->user_id());
  }

  // bool previous_message_delivered = 2;
  if (this->previous_message_delivered() != 0) {
    total_size += 1 + 1;
  }

  // bool end_operation = 3;
  if (this->end_operation() != 0) {
    total_size += 1 + 1;
  }

  // int32 wait_duration_secs = 4;
  if (this->wait_duration_secs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->wait_duration_secs());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DequeueMessageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.DequeueMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DequeueMessageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DequeueMessageRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.DequeueMessageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.DequeueMessageRequest)
    MergeFrom(*source);
  }
}

void DequeueMessageRequest::MergeFrom(const DequeueMessageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.DequeueMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.previous_message_delivered() != 0) {
    set_previous_message_delivered(from.previous_message_delivered());
  }
  if (from.end_operation() != 0) {
    set_end_operation(from.end_operation());
  }
  if (from.wait_duration_secs() != 0) {
    set_wait_duration_secs(from.wait_duration_secs());
  }
}

void DequeueMessageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.DequeueMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DequeueMessageRequest::CopyFrom(const DequeueMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.DequeueMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DequeueMessageRequest::IsInitialized() const {
  return true;
}

void DequeueMessageRequest::Swap(DequeueMessageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DequeueMessageRequest::InternalSwap(DequeueMessageRequest* other) {
  using std::swap;
  swap(user_id_, other->user_id_);
  swap(previous_message_delivered_, other->previous_message_delivered_);
  swap(end_operation_, other->end_operation_);
  swap(wait_duration_secs_, other->wait_duration_secs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DequeueMessageRequest::GetMetadata() const {
  protobuf_service_5fmessage_5fqueue_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fqueue_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DequeueMessageResponse::InitAsDefaultInstance() {
  ::e8::_DequeueMessageResponse_default_instance_._instance.get_mutable()->message_ = const_cast< ::e8::RealTimeMessage*>(
      ::e8::RealTimeMessage::internal_default_instance());
}
void DequeueMessageResponse::clear_message() {
  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DequeueMessageResponse::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DequeueMessageResponse::DequeueMessageResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fmessage_5fqueue_2eproto::scc_info_DequeueMessageResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.DequeueMessageResponse)
}
DequeueMessageResponse::DequeueMessageResponse(const DequeueMessageResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_message()) {
    message_ = new ::e8::RealTimeMessage(*from.message_);
  } else {
    message_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:e8.DequeueMessageResponse)
}

void DequeueMessageResponse::SharedCtor() {
  message_ = NULL;
}

DequeueMessageResponse::~DequeueMessageResponse() {
  // @@protoc_insertion_point(destructor:e8.DequeueMessageResponse)
  SharedDtor();
}

void DequeueMessageResponse::SharedDtor() {
  if (this != internal_default_instance()) delete message_;
}

void DequeueMessageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DequeueMessageResponse::descriptor() {
  ::protobuf_service_5fmessage_5fqueue_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fqueue_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DequeueMessageResponse& DequeueMessageResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fmessage_5fqueue_2eproto::scc_info_DequeueMessageResponse.base);
  return *internal_default_instance();
}


void DequeueMessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.DequeueMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
  _internal_metadata_.Clear();
}

bool DequeueMessageResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.DequeueMessageResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .e8.RealTimeMessage message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.DequeueMessageResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.DequeueMessageResponse)
  return false;
#undef DO_
}

void DequeueMessageResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.DequeueMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .e8.RealTimeMessage message = 1;
  if (this->has_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.DequeueMessageResponse)
}

::google::protobuf::uint8* DequeueMessageResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.DequeueMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .e8.RealTimeMessage message = 1;
  if (this->has_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_message(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.DequeueMessageResponse)
  return target;
}

size_t DequeueMessageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.DequeueMessageResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .e8.RealTimeMessage message = 1;
  if (this->has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *message_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DequeueMessageResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.DequeueMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DequeueMessageResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DequeueMessageResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.DequeueMessageResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.DequeueMessageResponse)
    MergeFrom(*source);
  }
}

void DequeueMessageResponse::MergeFrom(const DequeueMessageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.DequeueMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_message()) {
    mutable_message()->::e8::RealTimeMessage::MergeFrom(from.message());
  }
}

void DequeueMessageResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.DequeueMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DequeueMessageResponse::CopyFrom(const DequeueMessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.DequeueMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DequeueMessageResponse::IsInitialized() const {
  return true;
}

void DequeueMessageResponse::Swap(DequeueMessageResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DequeueMessageResponse::InternalSwap(DequeueMessageResponse* other) {
  using std::swap;
  swap(message_, other->message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DequeueMessageResponse::GetMetadata() const {
  protobuf_service_5fmessage_5fqueue_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fqueue_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListQueueMessageRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListQueueMessageRequest::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListQueueMessageRequest::ListQueueMessageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fmessage_5fqueue_2eproto::scc_info_ListQueueMessageRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.ListQueueMessageRequest)
}
ListQueueMessageRequest::ListQueueMessageRequest(const ListQueueMessageRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:e8.ListQueueMessageRequest)
}

void ListQueueMessageRequest::SharedCtor() {
  user_id_ = GOOGLE_LONGLONG(0);
}

ListQueueMessageRequest::~ListQueueMessageRequest() {
  // @@protoc_insertion_point(destructor:e8.ListQueueMessageRequest)
  SharedDtor();
}

void ListQueueMessageRequest::SharedDtor() {
}

void ListQueueMessageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListQueueMessageRequest::descriptor() {
  ::protobuf_service_5fmessage_5fqueue_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fqueue_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListQueueMessageRequest& ListQueueMessageRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fmessage_5fqueue_2eproto::scc_info_ListQueueMessageRequest.base);
  return *internal_default_instance();
}


void ListQueueMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.ListQueueMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool ListQueueMessageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.ListQueueMessageRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.ListQueueMessageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.ListQueueMessageRequest)
  return false;
#undef DO_
}

void ListQueueMessageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.ListQueueMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->user_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.ListQueueMessageRequest)
}

::google::protobuf::uint8* ListQueueMessageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.ListQueueMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->user_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.ListQueueMessageRequest)
  return target;
}

size_t ListQueueMessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.ListQueueMessageRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListQueueMessageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.ListQueueMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListQueueMessageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListQueueMessageRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.ListQueueMessageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.ListQueueMessageRequest)
    MergeFrom(*source);
  }
}

void ListQueueMessageRequest::MergeFrom(const ListQueueMessageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.ListQueueMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void ListQueueMessageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.ListQueueMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListQueueMessageRequest::CopyFrom(const ListQueueMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.ListQueueMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListQueueMessageRequest::IsInitialized() const {
  return true;
}

void ListQueueMessageRequest::Swap(ListQueueMessageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListQueueMessageRequest::InternalSwap(ListQueueMessageRequest* other) {
  using std::swap;
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListQueueMessageRequest::GetMetadata() const {
  protobuf_service_5fmessage_5fqueue_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fqueue_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListQueueMessageResponse::InitAsDefaultInstance() {
}
void ListQueueMessageResponse::clear_messages() {
  messages_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListQueueMessageResponse::kMessagesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListQueueMessageResponse::ListQueueMessageResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fmessage_5fqueue_2eproto::scc_info_ListQueueMessageResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.ListQueueMessageResponse)
}
ListQueueMessageResponse::ListQueueMessageResponse(const ListQueueMessageResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      messages_(from.messages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:e8.ListQueueMessageResponse)
}

void ListQueueMessageResponse::SharedCtor() {
}

ListQueueMessageResponse::~ListQueueMessageResponse() {
  // @@protoc_insertion_point(destructor:e8.ListQueueMessageResponse)
  SharedDtor();
}

void ListQueueMessageResponse::SharedDtor() {
}

void ListQueueMessageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListQueueMessageResponse::descriptor() {
  ::protobuf_service_5fmessage_5fqueue_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fqueue_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListQueueMessageResponse& ListQueueMessageResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fmessage_5fqueue_2eproto::scc_info_ListQueueMessageResponse.base);
  return *internal_default_instance();
}


void ListQueueMessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.ListQueueMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  messages_.Clear();
  _internal_metadata_.Clear();
}

bool ListQueueMessageResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.ListQueueMessageResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .e8.RealTimeMessage messages = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_messages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.ListQueueMessageResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.ListQueueMessageResponse)
  return false;
#undef DO_
}

void ListQueueMessageResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.ListQueueMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .e8.RealTimeMessage messages = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->messages_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->messages(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.ListQueueMessageResponse)
}

::google::protobuf::uint8* ListQueueMessageResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.ListQueueMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .e8.RealTimeMessage messages = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->messages_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->messages(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.ListQueueMessageResponse)
  return target;
}

size_t ListQueueMessageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.ListQueueMessageResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .e8.RealTimeMessage messages = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->messages_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->messages(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListQueueMessageResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.ListQueueMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListQueueMessageResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListQueueMessageResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.ListQueueMessageResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.ListQueueMessageResponse)
    MergeFrom(*source);
  }
}

void ListQueueMessageResponse::MergeFrom(const ListQueueMessageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.ListQueueMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  messages_.MergeFrom(from.messages_);
}

void ListQueueMessageResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.ListQueueMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListQueueMessageResponse::CopyFrom(const ListQueueMessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.ListQueueMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListQueueMessageResponse::IsInitialized() const {
  return true;
}

void ListQueueMessageResponse::Swap(ListQueueMessageResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListQueueMessageResponse::InternalSwap(ListQueueMessageResponse* other) {
  using std::swap;
  CastToBase(&messages_)->InternalSwap(CastToBase(&other->messages_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListQueueMessageResponse::GetMetadata() const {
  protobuf_service_5fmessage_5fqueue_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fqueue_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace e8
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::EnqueueMessageRequest* Arena::CreateMaybeMessage< ::e8::EnqueueMessageRequest >(Arena* arena) {
  return Arena::CreateInternal< ::e8::EnqueueMessageRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::EnqueueMessageResponse* Arena::CreateMaybeMessage< ::e8::EnqueueMessageResponse >(Arena* arena) {
  return Arena::CreateInternal< ::e8::EnqueueMessageResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::DequeueMessageRequest* Arena::CreateMaybeMessage< ::e8::DequeueMessageRequest >(Arena* arena) {
  return Arena::CreateInternal< ::e8::DequeueMessageRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::DequeueMessageResponse* Arena::CreateMaybeMessage< ::e8::DequeueMessageResponse >(Arena* arena) {
  return Arena::CreateInternal< ::e8::DequeueMessageResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::ListQueueMessageRequest* Arena::CreateMaybeMessage< ::e8::ListQueueMessageRequest >(Arena* arena) {
  return Arena::CreateInternal< ::e8::ListQueueMessageRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::ListQueueMessageResponse* Arena::CreateMaybeMessage< ::e8::ListQueueMessageResponse >(Arena* arena) {
  return Arena::CreateInternal< ::e8::ListQueueMessageResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
