// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service_message_subscriber.proto

#include "service_message_subscriber.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_real_5ftime_5fmessage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_real_5ftime_5fmessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RealTimeMessage;
}  // namespace protobuf_real_5ftime_5fmessage_2eproto
namespace e8 {
class SubscribeRealTimeMessageQueueRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SubscribeRealTimeMessageQueueRequest>
      _instance;
} _SubscribeRealTimeMessageQueueRequest_default_instance_;
class SubscribeRealTimeMessageQueueResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SubscribeRealTimeMessageQueueResponse>
      _instance;
} _SubscribeRealTimeMessageQueueResponse_default_instance_;
}  // namespace e8
namespace protobuf_service_5fmessage_5fsubscriber_2eproto {
static void InitDefaultsSubscribeRealTimeMessageQueueRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_SubscribeRealTimeMessageQueueRequest_default_instance_;
    new (ptr) ::e8::SubscribeRealTimeMessageQueueRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::SubscribeRealTimeMessageQueueRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SubscribeRealTimeMessageQueueRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSubscribeRealTimeMessageQueueRequest}, {}};

static void InitDefaultsSubscribeRealTimeMessageQueueResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_SubscribeRealTimeMessageQueueResponse_default_instance_;
    new (ptr) ::e8::SubscribeRealTimeMessageQueueResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::SubscribeRealTimeMessageQueueResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SubscribeRealTimeMessageQueueResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSubscribeRealTimeMessageQueueResponse}, {
      &protobuf_real_5ftime_5fmessage_2eproto::scc_info_RealTimeMessage.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_SubscribeRealTimeMessageQueueRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SubscribeRealTimeMessageQueueResponse.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::SubscribeRealTimeMessageQueueRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::SubscribeRealTimeMessageQueueResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::SubscribeRealTimeMessageQueueResponse, message_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::e8::SubscribeRealTimeMessageQueueRequest)},
  { 5, -1, sizeof(::e8::SubscribeRealTimeMessageQueueResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_SubscribeRealTimeMessageQueueRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_SubscribeRealTimeMessageQueueResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "service_message_subscriber.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n service_message_subscriber.proto\022\002e8\032\027"
      "real_time_message.proto\"&\n$SubscribeReal"
      "TimeMessageQueueRequest\"M\n%SubscribeReal"
      "TimeMessageQueueResponse\022$\n\007message\030\001 \001("
      "\0132\023.e8.RealTimeMessage2\212\002\n\030MessageSubscr"
      "iberService\022v\n\035SubscribeRealTimeMessageQ"
      "ueue\022(.e8.SubscribeRealTimeMessageQueueR"
      "equest\032).e8.SubscribeRealTimeMessageQueu"
      "eResponse0\001\022v\n\037SubscribeRealTimeMessageQ"
      "ueueLP\022(.e8.SubscribeRealTimeMessageQueu"
      "eRequest\032).e8.SubscribeRealTimeMessageQu"
      "eueResponseb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 459);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "service_message_subscriber.proto", &protobuf_RegisterTypes);
  ::protobuf_real_5ftime_5fmessage_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_service_5fmessage_5fsubscriber_2eproto
namespace e8 {

// ===================================================================

void SubscribeRealTimeMessageQueueRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscribeRealTimeMessageQueueRequest::SubscribeRealTimeMessageQueueRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fmessage_5fsubscriber_2eproto::scc_info_SubscribeRealTimeMessageQueueRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.SubscribeRealTimeMessageQueueRequest)
}
SubscribeRealTimeMessageQueueRequest::SubscribeRealTimeMessageQueueRequest(const SubscribeRealTimeMessageQueueRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:e8.SubscribeRealTimeMessageQueueRequest)
}

void SubscribeRealTimeMessageQueueRequest::SharedCtor() {
}

SubscribeRealTimeMessageQueueRequest::~SubscribeRealTimeMessageQueueRequest() {
  // @@protoc_insertion_point(destructor:e8.SubscribeRealTimeMessageQueueRequest)
  SharedDtor();
}

void SubscribeRealTimeMessageQueueRequest::SharedDtor() {
}

void SubscribeRealTimeMessageQueueRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SubscribeRealTimeMessageQueueRequest::descriptor() {
  ::protobuf_service_5fmessage_5fsubscriber_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fsubscriber_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubscribeRealTimeMessageQueueRequest& SubscribeRealTimeMessageQueueRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fmessage_5fsubscriber_2eproto::scc_info_SubscribeRealTimeMessageQueueRequest.base);
  return *internal_default_instance();
}


void SubscribeRealTimeMessageQueueRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.SubscribeRealTimeMessageQueueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool SubscribeRealTimeMessageQueueRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.SubscribeRealTimeMessageQueueRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:e8.SubscribeRealTimeMessageQueueRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.SubscribeRealTimeMessageQueueRequest)
  return false;
#undef DO_
}

void SubscribeRealTimeMessageQueueRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.SubscribeRealTimeMessageQueueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.SubscribeRealTimeMessageQueueRequest)
}

::google::protobuf::uint8* SubscribeRealTimeMessageQueueRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.SubscribeRealTimeMessageQueueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.SubscribeRealTimeMessageQueueRequest)
  return target;
}

size_t SubscribeRealTimeMessageQueueRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.SubscribeRealTimeMessageQueueRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubscribeRealTimeMessageQueueRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.SubscribeRealTimeMessageQueueRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SubscribeRealTimeMessageQueueRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscribeRealTimeMessageQueueRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.SubscribeRealTimeMessageQueueRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.SubscribeRealTimeMessageQueueRequest)
    MergeFrom(*source);
  }
}

void SubscribeRealTimeMessageQueueRequest::MergeFrom(const SubscribeRealTimeMessageQueueRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.SubscribeRealTimeMessageQueueRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SubscribeRealTimeMessageQueueRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.SubscribeRealTimeMessageQueueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribeRealTimeMessageQueueRequest::CopyFrom(const SubscribeRealTimeMessageQueueRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.SubscribeRealTimeMessageQueueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscribeRealTimeMessageQueueRequest::IsInitialized() const {
  return true;
}

void SubscribeRealTimeMessageQueueRequest::Swap(SubscribeRealTimeMessageQueueRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscribeRealTimeMessageQueueRequest::InternalSwap(SubscribeRealTimeMessageQueueRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SubscribeRealTimeMessageQueueRequest::GetMetadata() const {
  protobuf_service_5fmessage_5fsubscriber_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fsubscriber_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SubscribeRealTimeMessageQueueResponse::InitAsDefaultInstance() {
  ::e8::_SubscribeRealTimeMessageQueueResponse_default_instance_._instance.get_mutable()->message_ = const_cast< ::e8::RealTimeMessage*>(
      ::e8::RealTimeMessage::internal_default_instance());
}
void SubscribeRealTimeMessageQueueResponse::clear_message() {
  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscribeRealTimeMessageQueueResponse::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscribeRealTimeMessageQueueResponse::SubscribeRealTimeMessageQueueResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fmessage_5fsubscriber_2eproto::scc_info_SubscribeRealTimeMessageQueueResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.SubscribeRealTimeMessageQueueResponse)
}
SubscribeRealTimeMessageQueueResponse::SubscribeRealTimeMessageQueueResponse(const SubscribeRealTimeMessageQueueResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_message()) {
    message_ = new ::e8::RealTimeMessage(*from.message_);
  } else {
    message_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:e8.SubscribeRealTimeMessageQueueResponse)
}

void SubscribeRealTimeMessageQueueResponse::SharedCtor() {
  message_ = NULL;
}

SubscribeRealTimeMessageQueueResponse::~SubscribeRealTimeMessageQueueResponse() {
  // @@protoc_insertion_point(destructor:e8.SubscribeRealTimeMessageQueueResponse)
  SharedDtor();
}

void SubscribeRealTimeMessageQueueResponse::SharedDtor() {
  if (this != internal_default_instance()) delete message_;
}

void SubscribeRealTimeMessageQueueResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SubscribeRealTimeMessageQueueResponse::descriptor() {
  ::protobuf_service_5fmessage_5fsubscriber_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fsubscriber_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubscribeRealTimeMessageQueueResponse& SubscribeRealTimeMessageQueueResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fmessage_5fsubscriber_2eproto::scc_info_SubscribeRealTimeMessageQueueResponse.base);
  return *internal_default_instance();
}


void SubscribeRealTimeMessageQueueResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.SubscribeRealTimeMessageQueueResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
  _internal_metadata_.Clear();
}

bool SubscribeRealTimeMessageQueueResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.SubscribeRealTimeMessageQueueResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .e8.RealTimeMessage message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.SubscribeRealTimeMessageQueueResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.SubscribeRealTimeMessageQueueResponse)
  return false;
#undef DO_
}

void SubscribeRealTimeMessageQueueResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.SubscribeRealTimeMessageQueueResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .e8.RealTimeMessage message = 1;
  if (this->has_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.SubscribeRealTimeMessageQueueResponse)
}

::google::protobuf::uint8* SubscribeRealTimeMessageQueueResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.SubscribeRealTimeMessageQueueResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .e8.RealTimeMessage message = 1;
  if (this->has_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_message(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.SubscribeRealTimeMessageQueueResponse)
  return target;
}

size_t SubscribeRealTimeMessageQueueResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.SubscribeRealTimeMessageQueueResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .e8.RealTimeMessage message = 1;
  if (this->has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *message_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubscribeRealTimeMessageQueueResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.SubscribeRealTimeMessageQueueResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SubscribeRealTimeMessageQueueResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscribeRealTimeMessageQueueResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.SubscribeRealTimeMessageQueueResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.SubscribeRealTimeMessageQueueResponse)
    MergeFrom(*source);
  }
}

void SubscribeRealTimeMessageQueueResponse::MergeFrom(const SubscribeRealTimeMessageQueueResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.SubscribeRealTimeMessageQueueResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_message()) {
    mutable_message()->::e8::RealTimeMessage::MergeFrom(from.message());
  }
}

void SubscribeRealTimeMessageQueueResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.SubscribeRealTimeMessageQueueResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribeRealTimeMessageQueueResponse::CopyFrom(const SubscribeRealTimeMessageQueueResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.SubscribeRealTimeMessageQueueResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscribeRealTimeMessageQueueResponse::IsInitialized() const {
  return true;
}

void SubscribeRealTimeMessageQueueResponse::Swap(SubscribeRealTimeMessageQueueResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscribeRealTimeMessageQueueResponse::InternalSwap(SubscribeRealTimeMessageQueueResponse* other) {
  using std::swap;
  swap(message_, other->message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SubscribeRealTimeMessageQueueResponse::GetMetadata() const {
  protobuf_service_5fmessage_5fsubscriber_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fsubscriber_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace e8
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::SubscribeRealTimeMessageQueueRequest* Arena::CreateMaybeMessage< ::e8::SubscribeRealTimeMessageQueueRequest >(Arena* arena) {
  return Arena::CreateInternal< ::e8::SubscribeRealTimeMessageQueueRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::SubscribeRealTimeMessageQueueResponse* Arena::CreateMaybeMessage< ::e8::SubscribeRealTimeMessageQueueResponse >(Arena* arena) {
  return Arena::CreateInternal< ::e8::SubscribeRealTimeMessageQueueResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
