// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: node.proto

#ifndef PROTOBUF_INCLUDED_node_2eproto
#define PROTOBUF_INCLUDED_node_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "delta.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_node_2eproto 

namespace protobuf_node_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_node_2eproto
namespace e8 {
class NodeState;
class NodeStateDefaultTypeInternal;
extern NodeStateDefaultTypeInternal _NodeState_default_instance_;
class NodeStateRevision;
class NodeStateRevisionDefaultTypeInternal;
extern NodeStateRevisionDefaultTypeInternal _NodeStateRevision_default_instance_;
class NodeStateRevision_DeltaOperationsEntry_DoNotUse;
class NodeStateRevision_DeltaOperationsEntry_DoNotUseDefaultTypeInternal;
extern NodeStateRevision_DeltaOperationsEntry_DoNotUseDefaultTypeInternal _NodeStateRevision_DeltaOperationsEntry_DoNotUse_default_instance_;
class NodeStateRevision_NodesEntry_DoNotUse;
class NodeStateRevision_NodesEntry_DoNotUseDefaultTypeInternal;
extern NodeStateRevision_NodesEntry_DoNotUseDefaultTypeInternal _NodeStateRevision_NodesEntry_DoNotUse_default_instance_;
}  // namespace e8
namespace google {
namespace protobuf {
template<> ::e8::NodeState* Arena::CreateMaybeMessage<::e8::NodeState>(Arena*);
template<> ::e8::NodeStateRevision* Arena::CreateMaybeMessage<::e8::NodeStateRevision>(Arena*);
template<> ::e8::NodeStateRevision_DeltaOperationsEntry_DoNotUse* Arena::CreateMaybeMessage<::e8::NodeStateRevision_DeltaOperationsEntry_DoNotUse>(Arena*);
template<> ::e8::NodeStateRevision_NodesEntry_DoNotUse* Arena::CreateMaybeMessage<::e8::NodeStateRevision_NodesEntry_DoNotUse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace e8 {

enum NodeFunction {
  NDF_INVALID = 0,
  NDF_FILE_STORE = 1,
  NDF_MESSAGE_STORE = 2,
  NDF_TASK_EXECUTOR = 3,
  NodeFunction_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  NodeFunction_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool NodeFunction_IsValid(int value);
const NodeFunction NodeFunction_MIN = NDF_INVALID;
const NodeFunction NodeFunction_MAX = NDF_TASK_EXECUTOR;
const int NodeFunction_ARRAYSIZE = NodeFunction_MAX + 1;

const ::google::protobuf::EnumDescriptor* NodeFunction_descriptor();
inline const ::std::string& NodeFunction_Name(NodeFunction value) {
  return ::google::protobuf::internal::NameOfEnum(
    NodeFunction_descriptor(), value);
}
inline bool NodeFunction_Parse(
    const ::std::string& name, NodeFunction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NodeFunction>(
    NodeFunction_descriptor(), name, value);
}
enum NodeStatus {
  NDS_INVALID = 0,
  NDS_INITIALIZING = 1,
  NDS_READY = 2,
  NDS_UNAVALIABLE = 3,
  NodeStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  NodeStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool NodeStatus_IsValid(int value);
const NodeStatus NodeStatus_MIN = NDS_INVALID;
const NodeStatus NodeStatus_MAX = NDS_UNAVALIABLE;
const int NodeStatus_ARRAYSIZE = NodeStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* NodeStatus_descriptor();
inline const ::std::string& NodeStatus_Name(NodeStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    NodeStatus_descriptor(), value);
}
inline bool NodeStatus_Parse(
    const ::std::string& name, NodeStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NodeStatus>(
    NodeStatus_descriptor(), name, value);
}
// ===================================================================

class NodeState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.NodeState) */ {
 public:
  NodeState();
  virtual ~NodeState();

  NodeState(const NodeState& from);

  inline NodeState& operator=(const NodeState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NodeState(NodeState&& from) noexcept
    : NodeState() {
    *this = ::std::move(from);
  }

  inline NodeState& operator=(NodeState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NodeState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NodeState* internal_default_instance() {
    return reinterpret_cast<const NodeState*>(
               &_NodeState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(NodeState* other);
  friend void swap(NodeState& a, NodeState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NodeState* New() const final {
    return CreateMaybeMessage<NodeState>(NULL);
  }

  NodeState* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NodeState>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NodeState& from);
  void MergeFrom(const NodeState& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NodeState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .e8.NodeFunction functions = 4;
  int functions_size() const;
  void clear_functions();
  static const int kFunctionsFieldNumber = 4;
  ::e8::NodeFunction functions(int index) const;
  void set_functions(int index, ::e8::NodeFunction value);
  void add_functions(::e8::NodeFunction value);
  const ::google::protobuf::RepeatedField<int>& functions() const;
  ::google::protobuf::RepeatedField<int>* mutable_functions();

  // repeated int32 function_ports = 5;
  int function_ports_size() const;
  void clear_function_ports();
  static const int kFunctionPortsFieldNumber = 5;
  ::google::protobuf::int32 function_ports(int index) const;
  void set_function_ports(int index, ::google::protobuf::int32 value);
  void add_function_ports(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      function_ports() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_function_ports();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // bytes ip_address = 2;
  void clear_ip_address();
  static const int kIpAddressFieldNumber = 2;
  const ::std::string& ip_address() const;
  void set_ip_address(const ::std::string& value);
  #if LANG_CXX11
  void set_ip_address(::std::string&& value);
  #endif
  void set_ip_address(const char* value);
  void set_ip_address(const void* value, size_t size);
  ::std::string* mutable_ip_address();
  ::std::string* release_ip_address();
  void set_allocated_ip_address(::std::string* ip_address);

  // .e8.NodeStatus status = 3;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  ::e8::NodeStatus status() const;
  void set_status(::e8::NodeStatus value);

  // @@protoc_insertion_point(class_scope:e8.NodeState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField<int> functions_;
  mutable int _functions_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > function_ports_;
  mutable int _function_ports_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr ip_address_;
  int status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_node_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NodeStateRevision_NodesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<NodeStateRevision_NodesEntry_DoNotUse, 
    ::std::string, ::e8::NodeState,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<NodeStateRevision_NodesEntry_DoNotUse, 
    ::std::string, ::e8::NodeState,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  NodeStateRevision_NodesEntry_DoNotUse();
  NodeStateRevision_NodesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const NodeStateRevision_NodesEntry_DoNotUse& other);
  static const NodeStateRevision_NodesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const NodeStateRevision_NodesEntry_DoNotUse*>(&_NodeStateRevision_NodesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class NodeStateRevision_DeltaOperationsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<NodeStateRevision_DeltaOperationsEntry_DoNotUse, 
    ::std::string, ::e8::DeltaOperation,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_ENUM,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<NodeStateRevision_DeltaOperationsEntry_DoNotUse, 
    ::std::string, ::e8::DeltaOperation,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_ENUM,
    0 > SuperType;
  NodeStateRevision_DeltaOperationsEntry_DoNotUse();
  NodeStateRevision_DeltaOperationsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const NodeStateRevision_DeltaOperationsEntry_DoNotUse& other);
  static const NodeStateRevision_DeltaOperationsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const NodeStateRevision_DeltaOperationsEntry_DoNotUse*>(&_NodeStateRevision_DeltaOperationsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class NodeStateRevision : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.NodeStateRevision) */ {
 public:
  NodeStateRevision();
  virtual ~NodeStateRevision();

  NodeStateRevision(const NodeStateRevision& from);

  inline NodeStateRevision& operator=(const NodeStateRevision& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NodeStateRevision(NodeStateRevision&& from) noexcept
    : NodeStateRevision() {
    *this = ::std::move(from);
  }

  inline NodeStateRevision& operator=(NodeStateRevision&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NodeStateRevision& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NodeStateRevision* internal_default_instance() {
    return reinterpret_cast<const NodeStateRevision*>(
               &_NodeStateRevision_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(NodeStateRevision* other);
  friend void swap(NodeStateRevision& a, NodeStateRevision& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NodeStateRevision* New() const final {
    return CreateMaybeMessage<NodeStateRevision>(NULL);
  }

  NodeStateRevision* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NodeStateRevision>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NodeStateRevision& from);
  void MergeFrom(const NodeStateRevision& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NodeStateRevision* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .e8.NodeState> nodes = 3;
  int nodes_size() const;
  void clear_nodes();
  static const int kNodesFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::e8::NodeState >&
      nodes() const;
  ::google::protobuf::Map< ::std::string, ::e8::NodeState >*
      mutable_nodes();

  // map<string, .e8.DeltaOperation> delta_operations = 4;
  int delta_operations_size() const;
  void clear_delta_operations();
  static const int kDeltaOperationsFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::e8::DeltaOperation >&
      delta_operations() const;
  ::google::protobuf::Map< ::std::string, ::e8::DeltaOperation >*
      mutable_delta_operations();

  // int64 revision_epoch = 1;
  void clear_revision_epoch();
  static const int kRevisionEpochFieldNumber = 1;
  ::google::protobuf::int64 revision_epoch() const;
  void set_revision_epoch(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:e8.NodeStateRevision)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      NodeStateRevision_NodesEntry_DoNotUse,
      ::std::string, ::e8::NodeState,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > nodes_;
  ::google::protobuf::internal::MapField<
      NodeStateRevision_DeltaOperationsEntry_DoNotUse,
      ::std::string, ::e8::DeltaOperation,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_ENUM,
      0 > delta_operations_;
  ::google::protobuf::int64 revision_epoch_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_node_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// NodeState

// string name = 1;
inline void NodeState::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NodeState::name() const {
  // @@protoc_insertion_point(field_get:e8.NodeState.name)
  return name_.GetNoArena();
}
inline void NodeState::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:e8.NodeState.name)
}
#if LANG_CXX11
inline void NodeState::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:e8.NodeState.name)
}
#endif
inline void NodeState::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:e8.NodeState.name)
}
inline void NodeState::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:e8.NodeState.name)
}
inline ::std::string* NodeState::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:e8.NodeState.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NodeState::release_name() {
  // @@protoc_insertion_point(field_release:e8.NodeState.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NodeState::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:e8.NodeState.name)
}

// bytes ip_address = 2;
inline void NodeState::clear_ip_address() {
  ip_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NodeState::ip_address() const {
  // @@protoc_insertion_point(field_get:e8.NodeState.ip_address)
  return ip_address_.GetNoArena();
}
inline void NodeState::set_ip_address(const ::std::string& value) {
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:e8.NodeState.ip_address)
}
#if LANG_CXX11
inline void NodeState::set_ip_address(::std::string&& value) {
  
  ip_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:e8.NodeState.ip_address)
}
#endif
inline void NodeState::set_ip_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:e8.NodeState.ip_address)
}
inline void NodeState::set_ip_address(const void* value, size_t size) {
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:e8.NodeState.ip_address)
}
inline ::std::string* NodeState::mutable_ip_address() {
  
  // @@protoc_insertion_point(field_mutable:e8.NodeState.ip_address)
  return ip_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NodeState::release_ip_address() {
  // @@protoc_insertion_point(field_release:e8.NodeState.ip_address)
  
  return ip_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NodeState::set_allocated_ip_address(::std::string* ip_address) {
  if (ip_address != NULL) {
    
  } else {
    
  }
  ip_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_address);
  // @@protoc_insertion_point(field_set_allocated:e8.NodeState.ip_address)
}

// .e8.NodeStatus status = 3;
inline void NodeState::clear_status() {
  status_ = 0;
}
inline ::e8::NodeStatus NodeState::status() const {
  // @@protoc_insertion_point(field_get:e8.NodeState.status)
  return static_cast< ::e8::NodeStatus >(status_);
}
inline void NodeState::set_status(::e8::NodeStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:e8.NodeState.status)
}

// repeated .e8.NodeFunction functions = 4;
inline int NodeState::functions_size() const {
  return functions_.size();
}
inline void NodeState::clear_functions() {
  functions_.Clear();
}
inline ::e8::NodeFunction NodeState::functions(int index) const {
  // @@protoc_insertion_point(field_get:e8.NodeState.functions)
  return static_cast< ::e8::NodeFunction >(functions_.Get(index));
}
inline void NodeState::set_functions(int index, ::e8::NodeFunction value) {
  functions_.Set(index, value);
  // @@protoc_insertion_point(field_set:e8.NodeState.functions)
}
inline void NodeState::add_functions(::e8::NodeFunction value) {
  functions_.Add(value);
  // @@protoc_insertion_point(field_add:e8.NodeState.functions)
}
inline const ::google::protobuf::RepeatedField<int>&
NodeState::functions() const {
  // @@protoc_insertion_point(field_list:e8.NodeState.functions)
  return functions_;
}
inline ::google::protobuf::RepeatedField<int>*
NodeState::mutable_functions() {
  // @@protoc_insertion_point(field_mutable_list:e8.NodeState.functions)
  return &functions_;
}

// repeated int32 function_ports = 5;
inline int NodeState::function_ports_size() const {
  return function_ports_.size();
}
inline void NodeState::clear_function_ports() {
  function_ports_.Clear();
}
inline ::google::protobuf::int32 NodeState::function_ports(int index) const {
  // @@protoc_insertion_point(field_get:e8.NodeState.function_ports)
  return function_ports_.Get(index);
}
inline void NodeState::set_function_ports(int index, ::google::protobuf::int32 value) {
  function_ports_.Set(index, value);
  // @@protoc_insertion_point(field_set:e8.NodeState.function_ports)
}
inline void NodeState::add_function_ports(::google::protobuf::int32 value) {
  function_ports_.Add(value);
  // @@protoc_insertion_point(field_add:e8.NodeState.function_ports)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NodeState::function_ports() const {
  // @@protoc_insertion_point(field_list:e8.NodeState.function_ports)
  return function_ports_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NodeState::mutable_function_ports() {
  // @@protoc_insertion_point(field_mutable_list:e8.NodeState.function_ports)
  return &function_ports_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// NodeStateRevision

// int64 revision_epoch = 1;
inline void NodeStateRevision::clear_revision_epoch() {
  revision_epoch_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 NodeStateRevision::revision_epoch() const {
  // @@protoc_insertion_point(field_get:e8.NodeStateRevision.revision_epoch)
  return revision_epoch_;
}
inline void NodeStateRevision::set_revision_epoch(::google::protobuf::int64 value) {
  
  revision_epoch_ = value;
  // @@protoc_insertion_point(field_set:e8.NodeStateRevision.revision_epoch)
}

// map<string, .e8.NodeState> nodes = 3;
inline int NodeStateRevision::nodes_size() const {
  return nodes_.size();
}
inline void NodeStateRevision::clear_nodes() {
  nodes_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::e8::NodeState >&
NodeStateRevision::nodes() const {
  // @@protoc_insertion_point(field_map:e8.NodeStateRevision.nodes)
  return nodes_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::e8::NodeState >*
NodeStateRevision::mutable_nodes() {
  // @@protoc_insertion_point(field_mutable_map:e8.NodeStateRevision.nodes)
  return nodes_.MutableMap();
}

// map<string, .e8.DeltaOperation> delta_operations = 4;
inline int NodeStateRevision::delta_operations_size() const {
  return delta_operations_.size();
}
inline void NodeStateRevision::clear_delta_operations() {
  delta_operations_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::e8::DeltaOperation >&
NodeStateRevision::delta_operations() const {
  // @@protoc_insertion_point(field_map:e8.NodeStateRevision.delta_operations)
  return delta_operations_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::e8::DeltaOperation >*
NodeStateRevision::mutable_delta_operations() {
  // @@protoc_insertion_point(field_mutable_map:e8.NodeStateRevision.delta_operations)
  return delta_operations_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace e8

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::e8::NodeFunction> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::e8::NodeFunction>() {
  return ::e8::NodeFunction_descriptor();
}
template <> struct is_proto_enum< ::e8::NodeStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::e8::NodeStatus>() {
  return ::e8::NodeStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_node_2eproto
