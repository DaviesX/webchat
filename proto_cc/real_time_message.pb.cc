// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: real_time_message.proto

#include "real_time_message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_chat_5fmessage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chat_5fmessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ChatMessageThread;
}  // namespace protobuf_chat_5fmessage_2eproto
namespace protobuf_real_5ftime_5fmessage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_real_5ftime_5fmessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_InvitationAcceptedMessage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_real_5ftime_5fmessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_InvitationReceivedMessage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_real_5ftime_5fmessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UnreadChatMessage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_real_5ftime_5fmessage_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_RealTimeMessagenContent;
}  // namespace protobuf_real_5ftime_5fmessage_2eproto
namespace e8 {
class InvitationReceivedMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InvitationReceivedMessage>
      _instance;
} _InvitationReceivedMessage_default_instance_;
class InvitationAcceptedMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InvitationAcceptedMessage>
      _instance;
} _InvitationAcceptedMessage_default_instance_;
class UnreadChatMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnreadChatMessage>
      _instance;
} _UnreadChatMessage_default_instance_;
class RealTimeMessagenContentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RealTimeMessagenContent>
      _instance;
  const ::e8::InvitationReceivedMessage* invitation_received_;
  const ::e8::InvitationAcceptedMessage* invitation_accepted_;
  const ::e8::UnreadChatMessage* unread_chat_;
} _RealTimeMessagenContent_default_instance_;
class RealTimeMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RealTimeMessage>
      _instance;
} _RealTimeMessage_default_instance_;
}  // namespace e8
namespace protobuf_real_5ftime_5fmessage_2eproto {
static void InitDefaultsInvitationReceivedMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_InvitationReceivedMessage_default_instance_;
    new (ptr) ::e8::InvitationReceivedMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::InvitationReceivedMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InvitationReceivedMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInvitationReceivedMessage}, {}};

static void InitDefaultsInvitationAcceptedMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_InvitationAcceptedMessage_default_instance_;
    new (ptr) ::e8::InvitationAcceptedMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::InvitationAcceptedMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InvitationAcceptedMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInvitationAcceptedMessage}, {}};

static void InitDefaultsUnreadChatMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_UnreadChatMessage_default_instance_;
    new (ptr) ::e8::UnreadChatMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::UnreadChatMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UnreadChatMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUnreadChatMessage}, {
      &protobuf_chat_5fmessage_2eproto::scc_info_ChatMessageThread.base,}};

static void InitDefaultsRealTimeMessagenContent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_RealTimeMessagenContent_default_instance_;
    new (ptr) ::e8::RealTimeMessagenContent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::RealTimeMessagenContent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_RealTimeMessagenContent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsRealTimeMessagenContent}, {
      &protobuf_real_5ftime_5fmessage_2eproto::scc_info_InvitationReceivedMessage.base,
      &protobuf_real_5ftime_5fmessage_2eproto::scc_info_InvitationAcceptedMessage.base,
      &protobuf_real_5ftime_5fmessage_2eproto::scc_info_UnreadChatMessage.base,}};

static void InitDefaultsRealTimeMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_RealTimeMessage_default_instance_;
    new (ptr) ::e8::RealTimeMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::RealTimeMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RealTimeMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRealTimeMessage}, {
      &protobuf_real_5ftime_5fmessage_2eproto::scc_info_RealTimeMessagenContent.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_InvitationReceivedMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InvitationAcceptedMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UnreadChatMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RealTimeMessagenContent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RealTimeMessage.base);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::InvitationReceivedMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::InvitationAcceptedMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::UnreadChatMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::UnreadChatMessage, message_threads_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::RealTimeMessagenContent, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::RealTimeMessagenContent, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::e8::RealTimeMessagenContentDefaultTypeInternal, invitation_received_),
  offsetof(::e8::RealTimeMessagenContentDefaultTypeInternal, invitation_accepted_),
  offsetof(::e8::RealTimeMessagenContentDefaultTypeInternal, unread_chat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::RealTimeMessagenContent, notification_content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::RealTimeMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::RealTimeMessage, real_time_message_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::RealTimeMessage, created_at_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::RealTimeMessage, target_user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::RealTimeMessage, content_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::e8::InvitationReceivedMessage)},
  { 5, -1, sizeof(::e8::InvitationAcceptedMessage)},
  { 10, -1, sizeof(::e8::UnreadChatMessage)},
  { 16, -1, sizeof(::e8::RealTimeMessagenContent)},
  { 25, -1, sizeof(::e8::RealTimeMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_InvitationReceivedMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_InvitationAcceptedMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_UnreadChatMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_RealTimeMessagenContent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_RealTimeMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "real_time_message.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027real_time_message.proto\022\002e8\032\022chat_mess"
      "age.proto\"\033\n\031InvitationReceivedMessage\"\033"
      "\n\031InvitationAcceptedMessage\"C\n\021UnreadCha"
      "tMessage\022.\n\017message_threads\030\001 \003(\0132\025.e8.C"
      "hatMessageThread\"\333\001\n\027RealTimeMessagenCon"
      "tent\022<\n\023invitation_received\030\001 \001(\0132\035.e8.I"
      "nvitationReceivedMessageH\000\022<\n\023invitation"
      "_accepted\030\002 \001(\0132\035.e8.InvitationAcceptedM"
      "essageH\000\022,\n\013unread_chat\030\003 \001(\0132\025.e8.Unrea"
      "dChatMessageH\000B\026\n\024notification_content\"\211"
      "\001\n\017RealTimeMessage\022\034\n\024real_time_message_"
      "id\030\001 \001(\003\022\022\n\ncreated_at\030\002 \001(\003\022\026\n\016target_u"
      "ser_id\030\003 \001(\003\022,\n\007content\030\004 \001(\0132\033.e8.RealT"
      "imeMessagenContentb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 546);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "real_time_message.proto", &protobuf_RegisterTypes);
  ::protobuf_chat_5fmessage_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_real_5ftime_5fmessage_2eproto
namespace e8 {

// ===================================================================

void InvitationReceivedMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InvitationReceivedMessage::InvitationReceivedMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_real_5ftime_5fmessage_2eproto::scc_info_InvitationReceivedMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.InvitationReceivedMessage)
}
InvitationReceivedMessage::InvitationReceivedMessage(const InvitationReceivedMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:e8.InvitationReceivedMessage)
}

void InvitationReceivedMessage::SharedCtor() {
}

InvitationReceivedMessage::~InvitationReceivedMessage() {
  // @@protoc_insertion_point(destructor:e8.InvitationReceivedMessage)
  SharedDtor();
}

void InvitationReceivedMessage::SharedDtor() {
}

void InvitationReceivedMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InvitationReceivedMessage::descriptor() {
  ::protobuf_real_5ftime_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_real_5ftime_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InvitationReceivedMessage& InvitationReceivedMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_real_5ftime_5fmessage_2eproto::scc_info_InvitationReceivedMessage.base);
  return *internal_default_instance();
}


void InvitationReceivedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.InvitationReceivedMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool InvitationReceivedMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.InvitationReceivedMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:e8.InvitationReceivedMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.InvitationReceivedMessage)
  return false;
#undef DO_
}

void InvitationReceivedMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.InvitationReceivedMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.InvitationReceivedMessage)
}

::google::protobuf::uint8* InvitationReceivedMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.InvitationReceivedMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.InvitationReceivedMessage)
  return target;
}

size_t InvitationReceivedMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.InvitationReceivedMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InvitationReceivedMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.InvitationReceivedMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const InvitationReceivedMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InvitationReceivedMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.InvitationReceivedMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.InvitationReceivedMessage)
    MergeFrom(*source);
  }
}

void InvitationReceivedMessage::MergeFrom(const InvitationReceivedMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.InvitationReceivedMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void InvitationReceivedMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.InvitationReceivedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvitationReceivedMessage::CopyFrom(const InvitationReceivedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.InvitationReceivedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvitationReceivedMessage::IsInitialized() const {
  return true;
}

void InvitationReceivedMessage::Swap(InvitationReceivedMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InvitationReceivedMessage::InternalSwap(InvitationReceivedMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InvitationReceivedMessage::GetMetadata() const {
  protobuf_real_5ftime_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_real_5ftime_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InvitationAcceptedMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InvitationAcceptedMessage::InvitationAcceptedMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_real_5ftime_5fmessage_2eproto::scc_info_InvitationAcceptedMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.InvitationAcceptedMessage)
}
InvitationAcceptedMessage::InvitationAcceptedMessage(const InvitationAcceptedMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:e8.InvitationAcceptedMessage)
}

void InvitationAcceptedMessage::SharedCtor() {
}

InvitationAcceptedMessage::~InvitationAcceptedMessage() {
  // @@protoc_insertion_point(destructor:e8.InvitationAcceptedMessage)
  SharedDtor();
}

void InvitationAcceptedMessage::SharedDtor() {
}

void InvitationAcceptedMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InvitationAcceptedMessage::descriptor() {
  ::protobuf_real_5ftime_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_real_5ftime_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InvitationAcceptedMessage& InvitationAcceptedMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_real_5ftime_5fmessage_2eproto::scc_info_InvitationAcceptedMessage.base);
  return *internal_default_instance();
}


void InvitationAcceptedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.InvitationAcceptedMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool InvitationAcceptedMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.InvitationAcceptedMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:e8.InvitationAcceptedMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.InvitationAcceptedMessage)
  return false;
#undef DO_
}

void InvitationAcceptedMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.InvitationAcceptedMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.InvitationAcceptedMessage)
}

::google::protobuf::uint8* InvitationAcceptedMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.InvitationAcceptedMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.InvitationAcceptedMessage)
  return target;
}

size_t InvitationAcceptedMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.InvitationAcceptedMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InvitationAcceptedMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.InvitationAcceptedMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const InvitationAcceptedMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InvitationAcceptedMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.InvitationAcceptedMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.InvitationAcceptedMessage)
    MergeFrom(*source);
  }
}

void InvitationAcceptedMessage::MergeFrom(const InvitationAcceptedMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.InvitationAcceptedMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void InvitationAcceptedMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.InvitationAcceptedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvitationAcceptedMessage::CopyFrom(const InvitationAcceptedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.InvitationAcceptedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvitationAcceptedMessage::IsInitialized() const {
  return true;
}

void InvitationAcceptedMessage::Swap(InvitationAcceptedMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InvitationAcceptedMessage::InternalSwap(InvitationAcceptedMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InvitationAcceptedMessage::GetMetadata() const {
  protobuf_real_5ftime_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_real_5ftime_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnreadChatMessage::InitAsDefaultInstance() {
}
void UnreadChatMessage::clear_message_threads() {
  message_threads_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnreadChatMessage::kMessageThreadsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnreadChatMessage::UnreadChatMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_real_5ftime_5fmessage_2eproto::scc_info_UnreadChatMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.UnreadChatMessage)
}
UnreadChatMessage::UnreadChatMessage(const UnreadChatMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      message_threads_(from.message_threads_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:e8.UnreadChatMessage)
}

void UnreadChatMessage::SharedCtor() {
}

UnreadChatMessage::~UnreadChatMessage() {
  // @@protoc_insertion_point(destructor:e8.UnreadChatMessage)
  SharedDtor();
}

void UnreadChatMessage::SharedDtor() {
}

void UnreadChatMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UnreadChatMessage::descriptor() {
  ::protobuf_real_5ftime_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_real_5ftime_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnreadChatMessage& UnreadChatMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_real_5ftime_5fmessage_2eproto::scc_info_UnreadChatMessage.base);
  return *internal_default_instance();
}


void UnreadChatMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.UnreadChatMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_threads_.Clear();
  _internal_metadata_.Clear();
}

bool UnreadChatMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.UnreadChatMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .e8.ChatMessageThread message_threads = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_message_threads()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.UnreadChatMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.UnreadChatMessage)
  return false;
#undef DO_
}

void UnreadChatMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.UnreadChatMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .e8.ChatMessageThread message_threads = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->message_threads_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->message_threads(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.UnreadChatMessage)
}

::google::protobuf::uint8* UnreadChatMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.UnreadChatMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .e8.ChatMessageThread message_threads = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->message_threads_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->message_threads(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.UnreadChatMessage)
  return target;
}

size_t UnreadChatMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.UnreadChatMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .e8.ChatMessageThread message_threads = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->message_threads_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->message_threads(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnreadChatMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.UnreadChatMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const UnreadChatMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnreadChatMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.UnreadChatMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.UnreadChatMessage)
    MergeFrom(*source);
  }
}

void UnreadChatMessage::MergeFrom(const UnreadChatMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.UnreadChatMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  message_threads_.MergeFrom(from.message_threads_);
}

void UnreadChatMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.UnreadChatMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnreadChatMessage::CopyFrom(const UnreadChatMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.UnreadChatMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnreadChatMessage::IsInitialized() const {
  return true;
}

void UnreadChatMessage::Swap(UnreadChatMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnreadChatMessage::InternalSwap(UnreadChatMessage* other) {
  using std::swap;
  CastToBase(&message_threads_)->InternalSwap(CastToBase(&other->message_threads_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UnreadChatMessage::GetMetadata() const {
  protobuf_real_5ftime_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_real_5ftime_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RealTimeMessagenContent::InitAsDefaultInstance() {
  ::e8::_RealTimeMessagenContent_default_instance_.invitation_received_ = const_cast< ::e8::InvitationReceivedMessage*>(
      ::e8::InvitationReceivedMessage::internal_default_instance());
  ::e8::_RealTimeMessagenContent_default_instance_.invitation_accepted_ = const_cast< ::e8::InvitationAcceptedMessage*>(
      ::e8::InvitationAcceptedMessage::internal_default_instance());
  ::e8::_RealTimeMessagenContent_default_instance_.unread_chat_ = const_cast< ::e8::UnreadChatMessage*>(
      ::e8::UnreadChatMessage::internal_default_instance());
}
void RealTimeMessagenContent::set_allocated_invitation_received(::e8::InvitationReceivedMessage* invitation_received) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_notification_content();
  if (invitation_received) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      invitation_received = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, invitation_received, submessage_arena);
    }
    set_has_invitation_received();
    notification_content_.invitation_received_ = invitation_received;
  }
  // @@protoc_insertion_point(field_set_allocated:e8.RealTimeMessagenContent.invitation_received)
}
void RealTimeMessagenContent::set_allocated_invitation_accepted(::e8::InvitationAcceptedMessage* invitation_accepted) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_notification_content();
  if (invitation_accepted) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      invitation_accepted = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, invitation_accepted, submessage_arena);
    }
    set_has_invitation_accepted();
    notification_content_.invitation_accepted_ = invitation_accepted;
  }
  // @@protoc_insertion_point(field_set_allocated:e8.RealTimeMessagenContent.invitation_accepted)
}
void RealTimeMessagenContent::set_allocated_unread_chat(::e8::UnreadChatMessage* unread_chat) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_notification_content();
  if (unread_chat) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      unread_chat = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, unread_chat, submessage_arena);
    }
    set_has_unread_chat();
    notification_content_.unread_chat_ = unread_chat;
  }
  // @@protoc_insertion_point(field_set_allocated:e8.RealTimeMessagenContent.unread_chat)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RealTimeMessagenContent::kInvitationReceivedFieldNumber;
const int RealTimeMessagenContent::kInvitationAcceptedFieldNumber;
const int RealTimeMessagenContent::kUnreadChatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RealTimeMessagenContent::RealTimeMessagenContent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_real_5ftime_5fmessage_2eproto::scc_info_RealTimeMessagenContent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.RealTimeMessagenContent)
}
RealTimeMessagenContent::RealTimeMessagenContent(const RealTimeMessagenContent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_notification_content();
  switch (from.notification_content_case()) {
    case kInvitationReceived: {
      mutable_invitation_received()->::e8::InvitationReceivedMessage::MergeFrom(from.invitation_received());
      break;
    }
    case kInvitationAccepted: {
      mutable_invitation_accepted()->::e8::InvitationAcceptedMessage::MergeFrom(from.invitation_accepted());
      break;
    }
    case kUnreadChat: {
      mutable_unread_chat()->::e8::UnreadChatMessage::MergeFrom(from.unread_chat());
      break;
    }
    case NOTIFICATION_CONTENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:e8.RealTimeMessagenContent)
}

void RealTimeMessagenContent::SharedCtor() {
  clear_has_notification_content();
}

RealTimeMessagenContent::~RealTimeMessagenContent() {
  // @@protoc_insertion_point(destructor:e8.RealTimeMessagenContent)
  SharedDtor();
}

void RealTimeMessagenContent::SharedDtor() {
  if (has_notification_content()) {
    clear_notification_content();
  }
}

void RealTimeMessagenContent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RealTimeMessagenContent::descriptor() {
  ::protobuf_real_5ftime_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_real_5ftime_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RealTimeMessagenContent& RealTimeMessagenContent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_real_5ftime_5fmessage_2eproto::scc_info_RealTimeMessagenContent.base);
  return *internal_default_instance();
}


void RealTimeMessagenContent::clear_notification_content() {
// @@protoc_insertion_point(one_of_clear_start:e8.RealTimeMessagenContent)
  switch (notification_content_case()) {
    case kInvitationReceived: {
      delete notification_content_.invitation_received_;
      break;
    }
    case kInvitationAccepted: {
      delete notification_content_.invitation_accepted_;
      break;
    }
    case kUnreadChat: {
      delete notification_content_.unread_chat_;
      break;
    }
    case NOTIFICATION_CONTENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = NOTIFICATION_CONTENT_NOT_SET;
}


void RealTimeMessagenContent::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.RealTimeMessagenContent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_notification_content();
  _internal_metadata_.Clear();
}

bool RealTimeMessagenContent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.RealTimeMessagenContent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .e8.InvitationReceivedMessage invitation_received = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_invitation_received()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .e8.InvitationAcceptedMessage invitation_accepted = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_invitation_accepted()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .e8.UnreadChatMessage unread_chat = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_unread_chat()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.RealTimeMessagenContent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.RealTimeMessagenContent)
  return false;
#undef DO_
}

void RealTimeMessagenContent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.RealTimeMessagenContent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .e8.InvitationReceivedMessage invitation_received = 1;
  if (has_invitation_received()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_invitation_received(), output);
  }

  // .e8.InvitationAcceptedMessage invitation_accepted = 2;
  if (has_invitation_accepted()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_invitation_accepted(), output);
  }

  // .e8.UnreadChatMessage unread_chat = 3;
  if (has_unread_chat()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_unread_chat(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.RealTimeMessagenContent)
}

::google::protobuf::uint8* RealTimeMessagenContent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.RealTimeMessagenContent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .e8.InvitationReceivedMessage invitation_received = 1;
  if (has_invitation_received()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_invitation_received(), deterministic, target);
  }

  // .e8.InvitationAcceptedMessage invitation_accepted = 2;
  if (has_invitation_accepted()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_invitation_accepted(), deterministic, target);
  }

  // .e8.UnreadChatMessage unread_chat = 3;
  if (has_unread_chat()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_unread_chat(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.RealTimeMessagenContent)
  return target;
}

size_t RealTimeMessagenContent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.RealTimeMessagenContent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (notification_content_case()) {
    // .e8.InvitationReceivedMessage invitation_received = 1;
    case kInvitationReceived: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *notification_content_.invitation_received_);
      break;
    }
    // .e8.InvitationAcceptedMessage invitation_accepted = 2;
    case kInvitationAccepted: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *notification_content_.invitation_accepted_);
      break;
    }
    // .e8.UnreadChatMessage unread_chat = 3;
    case kUnreadChat: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *notification_content_.unread_chat_);
      break;
    }
    case NOTIFICATION_CONTENT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RealTimeMessagenContent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.RealTimeMessagenContent)
  GOOGLE_DCHECK_NE(&from, this);
  const RealTimeMessagenContent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RealTimeMessagenContent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.RealTimeMessagenContent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.RealTimeMessagenContent)
    MergeFrom(*source);
  }
}

void RealTimeMessagenContent::MergeFrom(const RealTimeMessagenContent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.RealTimeMessagenContent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.notification_content_case()) {
    case kInvitationReceived: {
      mutable_invitation_received()->::e8::InvitationReceivedMessage::MergeFrom(from.invitation_received());
      break;
    }
    case kInvitationAccepted: {
      mutable_invitation_accepted()->::e8::InvitationAcceptedMessage::MergeFrom(from.invitation_accepted());
      break;
    }
    case kUnreadChat: {
      mutable_unread_chat()->::e8::UnreadChatMessage::MergeFrom(from.unread_chat());
      break;
    }
    case NOTIFICATION_CONTENT_NOT_SET: {
      break;
    }
  }
}

void RealTimeMessagenContent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.RealTimeMessagenContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RealTimeMessagenContent::CopyFrom(const RealTimeMessagenContent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.RealTimeMessagenContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RealTimeMessagenContent::IsInitialized() const {
  return true;
}

void RealTimeMessagenContent::Swap(RealTimeMessagenContent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RealTimeMessagenContent::InternalSwap(RealTimeMessagenContent* other) {
  using std::swap;
  swap(notification_content_, other->notification_content_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RealTimeMessagenContent::GetMetadata() const {
  protobuf_real_5ftime_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_real_5ftime_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RealTimeMessage::InitAsDefaultInstance() {
  ::e8::_RealTimeMessage_default_instance_._instance.get_mutable()->content_ = const_cast< ::e8::RealTimeMessagenContent*>(
      ::e8::RealTimeMessagenContent::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RealTimeMessage::kRealTimeMessageIdFieldNumber;
const int RealTimeMessage::kCreatedAtFieldNumber;
const int RealTimeMessage::kTargetUserIdFieldNumber;
const int RealTimeMessage::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RealTimeMessage::RealTimeMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_real_5ftime_5fmessage_2eproto::scc_info_RealTimeMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.RealTimeMessage)
}
RealTimeMessage::RealTimeMessage(const RealTimeMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_content()) {
    content_ = new ::e8::RealTimeMessagenContent(*from.content_);
  } else {
    content_ = NULL;
  }
  ::memcpy(&real_time_message_id_, &from.real_time_message_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_user_id_) -
    reinterpret_cast<char*>(&real_time_message_id_)) + sizeof(target_user_id_));
  // @@protoc_insertion_point(copy_constructor:e8.RealTimeMessage)
}

void RealTimeMessage::SharedCtor() {
  ::memset(&content_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_user_id_) -
      reinterpret_cast<char*>(&content_)) + sizeof(target_user_id_));
}

RealTimeMessage::~RealTimeMessage() {
  // @@protoc_insertion_point(destructor:e8.RealTimeMessage)
  SharedDtor();
}

void RealTimeMessage::SharedDtor() {
  if (this != internal_default_instance()) delete content_;
}

void RealTimeMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RealTimeMessage::descriptor() {
  ::protobuf_real_5ftime_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_real_5ftime_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RealTimeMessage& RealTimeMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_real_5ftime_5fmessage_2eproto::scc_info_RealTimeMessage.base);
  return *internal_default_instance();
}


void RealTimeMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.RealTimeMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && content_ != NULL) {
    delete content_;
  }
  content_ = NULL;
  ::memset(&real_time_message_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_user_id_) -
      reinterpret_cast<char*>(&real_time_message_id_)) + sizeof(target_user_id_));
  _internal_metadata_.Clear();
}

bool RealTimeMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.RealTimeMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 real_time_message_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &real_time_message_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 created_at = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &created_at_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 target_user_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &target_user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .e8.RealTimeMessagenContent content = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.RealTimeMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.RealTimeMessage)
  return false;
#undef DO_
}

void RealTimeMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.RealTimeMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 real_time_message_id = 1;
  if (this->real_time_message_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->real_time_message_id(), output);
  }

  // int64 created_at = 2;
  if (this->created_at() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->created_at(), output);
  }

  // int64 target_user_id = 3;
  if (this->target_user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->target_user_id(), output);
  }

  // .e8.RealTimeMessagenContent content = 4;
  if (this->has_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_content(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.RealTimeMessage)
}

::google::protobuf::uint8* RealTimeMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.RealTimeMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 real_time_message_id = 1;
  if (this->real_time_message_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->real_time_message_id(), target);
  }

  // int64 created_at = 2;
  if (this->created_at() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->created_at(), target);
  }

  // int64 target_user_id = 3;
  if (this->target_user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->target_user_id(), target);
  }

  // .e8.RealTimeMessagenContent content = 4;
  if (this->has_content()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_content(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.RealTimeMessage)
  return target;
}

size_t RealTimeMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.RealTimeMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .e8.RealTimeMessagenContent content = 4;
  if (this->has_content()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *content_);
  }

  // int64 real_time_message_id = 1;
  if (this->real_time_message_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->real_time_message_id());
  }

  // int64 created_at = 2;
  if (this->created_at() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->created_at());
  }

  // int64 target_user_id = 3;
  if (this->target_user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->target_user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RealTimeMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.RealTimeMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const RealTimeMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RealTimeMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.RealTimeMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.RealTimeMessage)
    MergeFrom(*source);
  }
}

void RealTimeMessage::MergeFrom(const RealTimeMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.RealTimeMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_content()) {
    mutable_content()->::e8::RealTimeMessagenContent::MergeFrom(from.content());
  }
  if (from.real_time_message_id() != 0) {
    set_real_time_message_id(from.real_time_message_id());
  }
  if (from.created_at() != 0) {
    set_created_at(from.created_at());
  }
  if (from.target_user_id() != 0) {
    set_target_user_id(from.target_user_id());
  }
}

void RealTimeMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.RealTimeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RealTimeMessage::CopyFrom(const RealTimeMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.RealTimeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RealTimeMessage::IsInitialized() const {
  return true;
}

void RealTimeMessage::Swap(RealTimeMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RealTimeMessage::InternalSwap(RealTimeMessage* other) {
  using std::swap;
  swap(content_, other->content_);
  swap(real_time_message_id_, other->real_time_message_id_);
  swap(created_at_, other->created_at_);
  swap(target_user_id_, other->target_user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RealTimeMessage::GetMetadata() const {
  protobuf_real_5ftime_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_real_5ftime_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace e8
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::InvitationReceivedMessage* Arena::CreateMaybeMessage< ::e8::InvitationReceivedMessage >(Arena* arena) {
  return Arena::CreateInternal< ::e8::InvitationReceivedMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::InvitationAcceptedMessage* Arena::CreateMaybeMessage< ::e8::InvitationAcceptedMessage >(Arena* arena) {
  return Arena::CreateInternal< ::e8::InvitationAcceptedMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::UnreadChatMessage* Arena::CreateMaybeMessage< ::e8::UnreadChatMessage >(Arena* arena) {
  return Arena::CreateInternal< ::e8::UnreadChatMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::RealTimeMessagenContent* Arena::CreateMaybeMessage< ::e8::RealTimeMessagenContent >(Arena* arena) {
  return Arena::CreateInternal< ::e8::RealTimeMessagenContent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::RealTimeMessage* Arena::CreateMaybeMessage< ::e8::RealTimeMessage >(Arena* arena) {
  return Arena::CreateInternal< ::e8::RealTimeMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
