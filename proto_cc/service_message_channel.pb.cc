// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service_message_channel.proto

#include "service_message_channel.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_message_5fchannel_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_5fchannel_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MessageChannelRelation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_5fchannel_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_MessageChannelOverview;
}  // namespace protobuf_message_5fchannel_2eproto
namespace protobuf_nullable_5fprimitives_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_nullable_5fprimitives_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_NullableString;
}  // namespace protobuf_nullable_5fprimitives_2eproto
namespace protobuf_pagination_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_pagination_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Pagination;
}  // namespace protobuf_pagination_2eproto
namespace protobuf_user_5fprofile_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_user_5fprofile_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_UserPublicProfile;
}  // namespace protobuf_user_5fprofile_2eproto
namespace e8 {
class CreateMessageChannelRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateMessageChannelRequest>
      _instance;
} _CreateMessageChannelRequest_default_instance_;
class CreateMessageChannelResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateMessageChannelResponse>
      _instance;
} _CreateMessageChannelResponse_default_instance_;
class UpdateMessageChannelRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateMessageChannelRequest>
      _instance;
} _UpdateMessageChannelRequest_default_instance_;
class UpdateMessageChannelResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateMessageChannelResponse>
      _instance;
} _UpdateMessageChannelResponse_default_instance_;
class AddUserToMessageChannelRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddUserToMessageChannelRequest>
      _instance;
} _AddUserToMessageChannelRequest_default_instance_;
class AddUserToMessageChannelResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddUserToMessageChannelResponse>
      _instance;
} _AddUserToMessageChannelResponse_default_instance_;
class GetMessageChannelKeyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetMessageChannelKeyRequest>
      _instance;
} _GetMessageChannelKeyRequest_default_instance_;
class GetMessageChannelKeyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetMessageChannelKeyResponse>
      _instance;
} _GetMessageChannelKeyResponse_default_instance_;
class LeaveMessageChannelRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LeaveMessageChannelRequest>
      _instance;
} _LeaveMessageChannelRequest_default_instance_;
class LeaveMessageChannelResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LeaveMessageChannelResponse>
      _instance;
} _LeaveMessageChannelResponse_default_instance_;
class SearchMessageChannelsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchMessageChannelsRequest>
      _instance;
} _SearchMessageChannelsRequest_default_instance_;
class SearchMessageChannelsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchMessageChannelsResponse>
      _instance;
} _SearchMessageChannelsResponse_default_instance_;
class GetMessageChannelMembersRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetMessageChannelMembersRequest>
      _instance;
} _GetMessageChannelMembersRequest_default_instance_;
class GetMessageChannelMembersResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetMessageChannelMembersResponse>
      _instance;
} _GetMessageChannelMembersResponse_default_instance_;
}  // namespace e8
namespace protobuf_service_5fmessage_5fchannel_2eproto {
static void InitDefaultsCreateMessageChannelRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_CreateMessageChannelRequest_default_instance_;
    new (ptr) ::e8::CreateMessageChannelRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::CreateMessageChannelRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateMessageChannelRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateMessageChannelRequest}, {
      &protobuf_nullable_5fprimitives_2eproto::scc_info_NullableString.base,}};

static void InitDefaultsCreateMessageChannelResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_CreateMessageChannelResponse_default_instance_;
    new (ptr) ::e8::CreateMessageChannelResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::CreateMessageChannelResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateMessageChannelResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateMessageChannelResponse}, {}};

static void InitDefaultsUpdateMessageChannelRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_UpdateMessageChannelRequest_default_instance_;
    new (ptr) ::e8::UpdateMessageChannelRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::UpdateMessageChannelRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UpdateMessageChannelRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUpdateMessageChannelRequest}, {
      &protobuf_nullable_5fprimitives_2eproto::scc_info_NullableString.base,}};

static void InitDefaultsUpdateMessageChannelResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_UpdateMessageChannelResponse_default_instance_;
    new (ptr) ::e8::UpdateMessageChannelResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::UpdateMessageChannelResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UpdateMessageChannelResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUpdateMessageChannelResponse}, {}};

static void InitDefaultsAddUserToMessageChannelRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_AddUserToMessageChannelRequest_default_instance_;
    new (ptr) ::e8::AddUserToMessageChannelRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::AddUserToMessageChannelRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AddUserToMessageChannelRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAddUserToMessageChannelRequest}, {}};

static void InitDefaultsAddUserToMessageChannelResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_AddUserToMessageChannelResponse_default_instance_;
    new (ptr) ::e8::AddUserToMessageChannelResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::AddUserToMessageChannelResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AddUserToMessageChannelResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAddUserToMessageChannelResponse}, {}};

static void InitDefaultsGetMessageChannelKeyRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_GetMessageChannelKeyRequest_default_instance_;
    new (ptr) ::e8::GetMessageChannelKeyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::GetMessageChannelKeyRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetMessageChannelKeyRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetMessageChannelKeyRequest}, {}};

static void InitDefaultsGetMessageChannelKeyResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_GetMessageChannelKeyResponse_default_instance_;
    new (ptr) ::e8::GetMessageChannelKeyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::GetMessageChannelKeyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetMessageChannelKeyResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetMessageChannelKeyResponse}, {}};

static void InitDefaultsLeaveMessageChannelRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_LeaveMessageChannelRequest_default_instance_;
    new (ptr) ::e8::LeaveMessageChannelRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::LeaveMessageChannelRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LeaveMessageChannelRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLeaveMessageChannelRequest}, {}};

static void InitDefaultsLeaveMessageChannelResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_LeaveMessageChannelResponse_default_instance_;
    new (ptr) ::e8::LeaveMessageChannelResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::LeaveMessageChannelResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LeaveMessageChannelResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLeaveMessageChannelResponse}, {}};

static void InitDefaultsSearchMessageChannelsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_SearchMessageChannelsRequest_default_instance_;
    new (ptr) ::e8::SearchMessageChannelsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::SearchMessageChannelsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SearchMessageChannelsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSearchMessageChannelsRequest}, {
      &protobuf_pagination_2eproto::scc_info_Pagination.base,
      &protobuf_nullable_5fprimitives_2eproto::scc_info_NullableString.base,}};

static void InitDefaultsSearchMessageChannelsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_SearchMessageChannelsResponse_default_instance_;
    new (ptr) ::e8::SearchMessageChannelsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::SearchMessageChannelsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SearchMessageChannelsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSearchMessageChannelsResponse}, {
      &protobuf_message_5fchannel_2eproto::scc_info_MessageChannelOverview.base,}};

static void InitDefaultsGetMessageChannelMembersRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_GetMessageChannelMembersRequest_default_instance_;
    new (ptr) ::e8::GetMessageChannelMembersRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::GetMessageChannelMembersRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetMessageChannelMembersRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetMessageChannelMembersRequest}, {
      &protobuf_pagination_2eproto::scc_info_Pagination.base,}};

static void InitDefaultsGetMessageChannelMembersResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_GetMessageChannelMembersResponse_default_instance_;
    new (ptr) ::e8::GetMessageChannelMembersResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::GetMessageChannelMembersResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_GetMessageChannelMembersResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsGetMessageChannelMembersResponse}, {
      &protobuf_user_5fprofile_2eproto::scc_info_UserPublicProfile.base,
      &protobuf_message_5fchannel_2eproto::scc_info_MessageChannelRelation.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CreateMessageChannelRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateMessageChannelResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateMessageChannelRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateMessageChannelResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddUserToMessageChannelRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddUserToMessageChannelResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetMessageChannelKeyRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetMessageChannelKeyResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LeaveMessageChannelRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LeaveMessageChannelResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SearchMessageChannelsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SearchMessageChannelsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetMessageChannelMembersRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetMessageChannelMembersResponse.base);
}

::google::protobuf::Metadata file_level_metadata[14];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::CreateMessageChannelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::CreateMessageChannelRequest, encrypted_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::CreateMessageChannelRequest, close_group_channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::CreateMessageChannelRequest, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::CreateMessageChannelRequest, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::CreateMessageChannelRequest, member_ids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::CreateMessageChannelResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::CreateMessageChannelResponse, channel_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::UpdateMessageChannelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::UpdateMessageChannelRequest, channel_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::UpdateMessageChannelRequest, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::UpdateMessageChannelRequest, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::UpdateMessageChannelRequest, member_ids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::UpdateMessageChannelResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::AddUserToMessageChannelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::AddUserToMessageChannelRequest, channel_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::AddUserToMessageChannelRequest, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::AddUserToMessageChannelRequest, member_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::AddUserToMessageChannelResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetMessageChannelKeyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetMessageChannelKeyRequest, channel_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetMessageChannelKeyRequest, timeout_secs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetMessageChannelKeyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetMessageChannelKeyResponse, channel_key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::LeaveMessageChannelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::LeaveMessageChannelRequest, channel_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::LeaveMessageChannelResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::SearchMessageChannelsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::SearchMessageChannelsRequest, pagination_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::SearchMessageChannelsRequest, with_member_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::SearchMessageChannelsRequest, active_member_fetch_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::SearchMessageChannelsRequest, channel_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::SearchMessageChannelsRequest, search_text_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::SearchMessageChannelsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::SearchMessageChannelsResponse, channels_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetMessageChannelMembersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetMessageChannelMembersRequest, channel_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetMessageChannelMembersRequest, pagination_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetMessageChannelMembersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetMessageChannelMembersResponse, user_profiles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetMessageChannelMembersResponse, channel_relations_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::e8::CreateMessageChannelRequest)},
  { 10, -1, sizeof(::e8::CreateMessageChannelResponse)},
  { 16, -1, sizeof(::e8::UpdateMessageChannelRequest)},
  { 25, -1, sizeof(::e8::UpdateMessageChannelResponse)},
  { 30, -1, sizeof(::e8::AddUserToMessageChannelRequest)},
  { 38, -1, sizeof(::e8::AddUserToMessageChannelResponse)},
  { 43, -1, sizeof(::e8::GetMessageChannelKeyRequest)},
  { 50, -1, sizeof(::e8::GetMessageChannelKeyResponse)},
  { 56, -1, sizeof(::e8::LeaveMessageChannelRequest)},
  { 62, -1, sizeof(::e8::LeaveMessageChannelResponse)},
  { 67, -1, sizeof(::e8::SearchMessageChannelsRequest)},
  { 77, -1, sizeof(::e8::SearchMessageChannelsResponse)},
  { 83, -1, sizeof(::e8::GetMessageChannelMembersRequest)},
  { 90, -1, sizeof(::e8::GetMessageChannelMembersResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_CreateMessageChannelRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_CreateMessageChannelResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_UpdateMessageChannelRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_UpdateMessageChannelResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_AddUserToMessageChannelRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_AddUserToMessageChannelResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_GetMessageChannelKeyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_GetMessageChannelKeyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_LeaveMessageChannelRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_LeaveMessageChannelResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_SearchMessageChannelsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_SearchMessageChannelsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_GetMessageChannelMembersRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_GetMessageChannelMembersResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "service_message_channel.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 14);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\035service_message_channel.proto\022\002e8\032\020pag"
      "ination.proto\032\031nullable_primitives.proto"
      "\032\025message_channel.proto\032\022user_profile.pr"
      "oto\"\255\001\n\033CreateMessageChannelRequest\022\021\n\te"
      "ncrypted\030\001 \001(\010\022\033\n\023close_group_channel\030\002 "
      "\001(\010\022!\n\005title\030\003 \001(\0132\022.e8.NullableString\022\'"
      "\n\013description\030\004 \001(\0132\022.e8.NullableString\022"
      "\022\n\nmember_ids\030\005 \003(\003\"2\n\034CreateMessageChan"
      "nelResponse\022\022\n\nchannel_id\030\001 \001(\003\"\221\001\n\033Upda"
      "teMessageChannelRequest\022\022\n\nchannel_id\030\001 "
      "\001(\003\022!\n\005title\030\002 \001(\0132\022.e8.NullableString\022\'"
      "\n\013description\030\003 \001(\0132\022.e8.NullableString\022"
      "\022\n\nmember_ids\030\004 \003(\003\"\036\n\034UpdateMessageChan"
      "nelResponse\"x\n\036AddUserToMessageChannelRe"
      "quest\022\022\n\nchannel_id\030\001 \001(\003\022\017\n\007user_id\030\002 \001"
      "(\003\0221\n\013member_type\030\003 \001(\0162\034.e8.MessageChan"
      "nelMemberType\"!\n\037AddUserToMessageChannel"
      "Response\"G\n\033GetMessageChannelKeyRequest\022"
      "\022\n\nchannel_id\030\001 \001(\003\022\024\n\014timeout_secs\030\002 \001("
      "\005\"3\n\034GetMessageChannelKeyResponse\022\023\n\013cha"
      "nnel_key\030\003 \001(\t\"0\n\032LeaveMessageChannelReq"
      "uest\022\022\n\nchannel_id\030\001 \001(\003\"\035\n\033LeaveMessage"
      "ChannelResponse\"\274\001\n\034SearchMessageChannel"
      "sRequest\022\"\n\npagination\030\001 \001(\0132\016.e8.Pagina"
      "tion\022\027\n\017with_member_ids\030\002 \003(\003\022!\n\031active_"
      "member_fetch_limit\030\003 \001(\005\022\023\n\013channel_ids\030"
      "\004 \003(\003\022\'\n\013search_text\030\005 \001(\0132\022.e8.Nullable"
      "String\"M\n\035SearchMessageChannelsResponse\022"
      ",\n\010channels\030\001 \003(\0132\032.e8.MessageChannelOve"
      "rview\"Y\n\037GetMessageChannelMembersRequest"
      "\022\022\n\nchannel_id\030\001 \001(\003\022\"\n\npagination\030\002 \001(\013"
      "2\016.e8.Pagination\"\207\001\n GetMessageChannelMe"
      "mbersResponse\022,\n\ruser_profiles\030\001 \003(\0132\025.e"
      "8.UserPublicProfile\0225\n\021channel_relations"
      "\030\002 \003(\0132\032.e8.MessageChannelRelation2\251\005\n\025M"
      "essageChannelService\022Y\n\024CreateMessageCha"
      "nnel\022\037.e8.CreateMessageChannelRequest\032 ."
      "e8.CreateMessageChannelResponse\022Y\n\024Updat"
      "eMessageChannel\022\037.e8.UpdateMessageChanne"
      "lRequest\032 .e8.UpdateMessageChannelRespon"
      "se\022b\n\027AddUserToMessageChannel\022\".e8.AddUs"
      "erToMessageChannelRequest\032#.e8.AddUserTo"
      "MessageChannelResponse\022Y\n\024GetMessageChan"
      "nelKey\022\037.e8.GetMessageChannelKeyRequest\032"
      " .e8.GetMessageChannelKeyResponse\022V\n\023Lea"
      "veMessageChannel\022\036.e8.LeaveMessageChanne"
      "lRequest\032\037.e8.LeaveMessageChannelRespons"
      "e\022\\\n\025SearchMessageChannels\022 .e8.SearchMe"
      "ssageChannelsRequest\032!.e8.SearchMessageC"
      "hannelsResponse\022e\n\030GetMessageChannelMemb"
      "ers\022#.e8.GetMessageChannelMembersRequest"
      "\032$.e8.GetMessageChannelMembersResponseb\006"
      "proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2086);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "service_message_channel.proto", &protobuf_RegisterTypes);
  ::protobuf_pagination_2eproto::AddDescriptors();
  ::protobuf_nullable_5fprimitives_2eproto::AddDescriptors();
  ::protobuf_message_5fchannel_2eproto::AddDescriptors();
  ::protobuf_user_5fprofile_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_service_5fmessage_5fchannel_2eproto
namespace e8 {

// ===================================================================

void CreateMessageChannelRequest::InitAsDefaultInstance() {
  ::e8::_CreateMessageChannelRequest_default_instance_._instance.get_mutable()->title_ = const_cast< ::e8::NullableString*>(
      ::e8::NullableString::internal_default_instance());
  ::e8::_CreateMessageChannelRequest_default_instance_._instance.get_mutable()->description_ = const_cast< ::e8::NullableString*>(
      ::e8::NullableString::internal_default_instance());
}
void CreateMessageChannelRequest::clear_title() {
  if (GetArenaNoVirtual() == NULL && title_ != NULL) {
    delete title_;
  }
  title_ = NULL;
}
void CreateMessageChannelRequest::clear_description() {
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateMessageChannelRequest::kEncryptedFieldNumber;
const int CreateMessageChannelRequest::kCloseGroupChannelFieldNumber;
const int CreateMessageChannelRequest::kTitleFieldNumber;
const int CreateMessageChannelRequest::kDescriptionFieldNumber;
const int CreateMessageChannelRequest::kMemberIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateMessageChannelRequest::CreateMessageChannelRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fmessage_5fchannel_2eproto::scc_info_CreateMessageChannelRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.CreateMessageChannelRequest)
}
CreateMessageChannelRequest::CreateMessageChannelRequest(const CreateMessageChannelRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      member_ids_(from.member_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_title()) {
    title_ = new ::e8::NullableString(*from.title_);
  } else {
    title_ = NULL;
  }
  if (from.has_description()) {
    description_ = new ::e8::NullableString(*from.description_);
  } else {
    description_ = NULL;
  }
  ::memcpy(&encrypted_, &from.encrypted_,
    static_cast<size_t>(reinterpret_cast<char*>(&close_group_channel_) -
    reinterpret_cast<char*>(&encrypted_)) + sizeof(close_group_channel_));
  // @@protoc_insertion_point(copy_constructor:e8.CreateMessageChannelRequest)
}

void CreateMessageChannelRequest::SharedCtor() {
  ::memset(&title_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&close_group_channel_) -
      reinterpret_cast<char*>(&title_)) + sizeof(close_group_channel_));
}

CreateMessageChannelRequest::~CreateMessageChannelRequest() {
  // @@protoc_insertion_point(destructor:e8.CreateMessageChannelRequest)
  SharedDtor();
}

void CreateMessageChannelRequest::SharedDtor() {
  if (this != internal_default_instance()) delete title_;
  if (this != internal_default_instance()) delete description_;
}

void CreateMessageChannelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateMessageChannelRequest::descriptor() {
  ::protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateMessageChannelRequest& CreateMessageChannelRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fmessage_5fchannel_2eproto::scc_info_CreateMessageChannelRequest.base);
  return *internal_default_instance();
}


void CreateMessageChannelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.CreateMessageChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  member_ids_.Clear();
  if (GetArenaNoVirtual() == NULL && title_ != NULL) {
    delete title_;
  }
  title_ = NULL;
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
  ::memset(&encrypted_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&close_group_channel_) -
      reinterpret_cast<char*>(&encrypted_)) + sizeof(close_group_channel_));
  _internal_metadata_.Clear();
}

bool CreateMessageChannelRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.CreateMessageChannelRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool encrypted = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &encrypted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool close_group_channel = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &close_group_channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .e8.NullableString title = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_title()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .e8.NullableString description = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 member_ids = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_member_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 42u, input, this->mutable_member_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.CreateMessageChannelRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.CreateMessageChannelRequest)
  return false;
#undef DO_
}

void CreateMessageChannelRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.CreateMessageChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool encrypted = 1;
  if (this->encrypted() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->encrypted(), output);
  }

  // bool close_group_channel = 2;
  if (this->close_group_channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->close_group_channel(), output);
  }

  // .e8.NullableString title = 3;
  if (this->has_title()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_title(), output);
  }

  // .e8.NullableString description = 4;
  if (this->has_description()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_description(), output);
  }

  // repeated int64 member_ids = 5;
  if (this->member_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _member_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->member_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->member_ids(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.CreateMessageChannelRequest)
}

::google::protobuf::uint8* CreateMessageChannelRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.CreateMessageChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool encrypted = 1;
  if (this->encrypted() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->encrypted(), target);
  }

  // bool close_group_channel = 2;
  if (this->close_group_channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->close_group_channel(), target);
  }

  // .e8.NullableString title = 3;
  if (this->has_title()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_title(), deterministic, target);
  }

  // .e8.NullableString description = 4;
  if (this->has_description()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_description(), deterministic, target);
  }

  // repeated int64 member_ids = 5;
  if (this->member_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _member_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->member_ids_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.CreateMessageChannelRequest)
  return target;
}

size_t CreateMessageChannelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.CreateMessageChannelRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 member_ids = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->member_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _member_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .e8.NullableString title = 3;
  if (this->has_title()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *title_);
  }

  // .e8.NullableString description = 4;
  if (this->has_description()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *description_);
  }

  // bool encrypted = 1;
  if (this->encrypted() != 0) {
    total_size += 1 + 1;
  }

  // bool close_group_channel = 2;
  if (this->close_group_channel() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateMessageChannelRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.CreateMessageChannelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateMessageChannelRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateMessageChannelRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.CreateMessageChannelRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.CreateMessageChannelRequest)
    MergeFrom(*source);
  }
}

void CreateMessageChannelRequest::MergeFrom(const CreateMessageChannelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.CreateMessageChannelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  member_ids_.MergeFrom(from.member_ids_);
  if (from.has_title()) {
    mutable_title()->::e8::NullableString::MergeFrom(from.title());
  }
  if (from.has_description()) {
    mutable_description()->::e8::NullableString::MergeFrom(from.description());
  }
  if (from.encrypted() != 0) {
    set_encrypted(from.encrypted());
  }
  if (from.close_group_channel() != 0) {
    set_close_group_channel(from.close_group_channel());
  }
}

void CreateMessageChannelRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.CreateMessageChannelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateMessageChannelRequest::CopyFrom(const CreateMessageChannelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.CreateMessageChannelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateMessageChannelRequest::IsInitialized() const {
  return true;
}

void CreateMessageChannelRequest::Swap(CreateMessageChannelRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateMessageChannelRequest::InternalSwap(CreateMessageChannelRequest* other) {
  using std::swap;
  member_ids_.InternalSwap(&other->member_ids_);
  swap(title_, other->title_);
  swap(description_, other->description_);
  swap(encrypted_, other->encrypted_);
  swap(close_group_channel_, other->close_group_channel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateMessageChannelRequest::GetMetadata() const {
  protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateMessageChannelResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateMessageChannelResponse::kChannelIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateMessageChannelResponse::CreateMessageChannelResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fmessage_5fchannel_2eproto::scc_info_CreateMessageChannelResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.CreateMessageChannelResponse)
}
CreateMessageChannelResponse::CreateMessageChannelResponse(const CreateMessageChannelResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  channel_id_ = from.channel_id_;
  // @@protoc_insertion_point(copy_constructor:e8.CreateMessageChannelResponse)
}

void CreateMessageChannelResponse::SharedCtor() {
  channel_id_ = GOOGLE_LONGLONG(0);
}

CreateMessageChannelResponse::~CreateMessageChannelResponse() {
  // @@protoc_insertion_point(destructor:e8.CreateMessageChannelResponse)
  SharedDtor();
}

void CreateMessageChannelResponse::SharedDtor() {
}

void CreateMessageChannelResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateMessageChannelResponse::descriptor() {
  ::protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateMessageChannelResponse& CreateMessageChannelResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fmessage_5fchannel_2eproto::scc_info_CreateMessageChannelResponse.base);
  return *internal_default_instance();
}


void CreateMessageChannelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.CreateMessageChannelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channel_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool CreateMessageChannelResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.CreateMessageChannelResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 channel_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &channel_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.CreateMessageChannelResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.CreateMessageChannelResponse)
  return false;
#undef DO_
}

void CreateMessageChannelResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.CreateMessageChannelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->channel_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.CreateMessageChannelResponse)
}

::google::protobuf::uint8* CreateMessageChannelResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.CreateMessageChannelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->channel_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.CreateMessageChannelResponse)
  return target;
}

size_t CreateMessageChannelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.CreateMessageChannelResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->channel_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateMessageChannelResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.CreateMessageChannelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateMessageChannelResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateMessageChannelResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.CreateMessageChannelResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.CreateMessageChannelResponse)
    MergeFrom(*source);
  }
}

void CreateMessageChannelResponse::MergeFrom(const CreateMessageChannelResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.CreateMessageChannelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.channel_id() != 0) {
    set_channel_id(from.channel_id());
  }
}

void CreateMessageChannelResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.CreateMessageChannelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateMessageChannelResponse::CopyFrom(const CreateMessageChannelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.CreateMessageChannelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateMessageChannelResponse::IsInitialized() const {
  return true;
}

void CreateMessageChannelResponse::Swap(CreateMessageChannelResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateMessageChannelResponse::InternalSwap(CreateMessageChannelResponse* other) {
  using std::swap;
  swap(channel_id_, other->channel_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateMessageChannelResponse::GetMetadata() const {
  protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateMessageChannelRequest::InitAsDefaultInstance() {
  ::e8::_UpdateMessageChannelRequest_default_instance_._instance.get_mutable()->title_ = const_cast< ::e8::NullableString*>(
      ::e8::NullableString::internal_default_instance());
  ::e8::_UpdateMessageChannelRequest_default_instance_._instance.get_mutable()->description_ = const_cast< ::e8::NullableString*>(
      ::e8::NullableString::internal_default_instance());
}
void UpdateMessageChannelRequest::clear_title() {
  if (GetArenaNoVirtual() == NULL && title_ != NULL) {
    delete title_;
  }
  title_ = NULL;
}
void UpdateMessageChannelRequest::clear_description() {
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateMessageChannelRequest::kChannelIdFieldNumber;
const int UpdateMessageChannelRequest::kTitleFieldNumber;
const int UpdateMessageChannelRequest::kDescriptionFieldNumber;
const int UpdateMessageChannelRequest::kMemberIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateMessageChannelRequest::UpdateMessageChannelRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fmessage_5fchannel_2eproto::scc_info_UpdateMessageChannelRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.UpdateMessageChannelRequest)
}
UpdateMessageChannelRequest::UpdateMessageChannelRequest(const UpdateMessageChannelRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      member_ids_(from.member_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_title()) {
    title_ = new ::e8::NullableString(*from.title_);
  } else {
    title_ = NULL;
  }
  if (from.has_description()) {
    description_ = new ::e8::NullableString(*from.description_);
  } else {
    description_ = NULL;
  }
  channel_id_ = from.channel_id_;
  // @@protoc_insertion_point(copy_constructor:e8.UpdateMessageChannelRequest)
}

void UpdateMessageChannelRequest::SharedCtor() {
  ::memset(&title_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_id_) -
      reinterpret_cast<char*>(&title_)) + sizeof(channel_id_));
}

UpdateMessageChannelRequest::~UpdateMessageChannelRequest() {
  // @@protoc_insertion_point(destructor:e8.UpdateMessageChannelRequest)
  SharedDtor();
}

void UpdateMessageChannelRequest::SharedDtor() {
  if (this != internal_default_instance()) delete title_;
  if (this != internal_default_instance()) delete description_;
}

void UpdateMessageChannelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateMessageChannelRequest::descriptor() {
  ::protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateMessageChannelRequest& UpdateMessageChannelRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fmessage_5fchannel_2eproto::scc_info_UpdateMessageChannelRequest.base);
  return *internal_default_instance();
}


void UpdateMessageChannelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.UpdateMessageChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  member_ids_.Clear();
  if (GetArenaNoVirtual() == NULL && title_ != NULL) {
    delete title_;
  }
  title_ = NULL;
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
  channel_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool UpdateMessageChannelRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.UpdateMessageChannelRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 channel_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &channel_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .e8.NullableString title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_title()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .e8.NullableString description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 member_ids = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_member_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 34u, input, this->mutable_member_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.UpdateMessageChannelRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.UpdateMessageChannelRequest)
  return false;
#undef DO_
}

void UpdateMessageChannelRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.UpdateMessageChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->channel_id(), output);
  }

  // .e8.NullableString title = 2;
  if (this->has_title()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_title(), output);
  }

  // .e8.NullableString description = 3;
  if (this->has_description()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_description(), output);
  }

  // repeated int64 member_ids = 4;
  if (this->member_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _member_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->member_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->member_ids(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.UpdateMessageChannelRequest)
}

::google::protobuf::uint8* UpdateMessageChannelRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.UpdateMessageChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->channel_id(), target);
  }

  // .e8.NullableString title = 2;
  if (this->has_title()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_title(), deterministic, target);
  }

  // .e8.NullableString description = 3;
  if (this->has_description()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_description(), deterministic, target);
  }

  // repeated int64 member_ids = 4;
  if (this->member_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _member_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->member_ids_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.UpdateMessageChannelRequest)
  return target;
}

size_t UpdateMessageChannelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.UpdateMessageChannelRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 member_ids = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->member_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _member_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .e8.NullableString title = 2;
  if (this->has_title()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *title_);
  }

  // .e8.NullableString description = 3;
  if (this->has_description()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *description_);
  }

  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->channel_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateMessageChannelRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.UpdateMessageChannelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateMessageChannelRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateMessageChannelRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.UpdateMessageChannelRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.UpdateMessageChannelRequest)
    MergeFrom(*source);
  }
}

void UpdateMessageChannelRequest::MergeFrom(const UpdateMessageChannelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.UpdateMessageChannelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  member_ids_.MergeFrom(from.member_ids_);
  if (from.has_title()) {
    mutable_title()->::e8::NullableString::MergeFrom(from.title());
  }
  if (from.has_description()) {
    mutable_description()->::e8::NullableString::MergeFrom(from.description());
  }
  if (from.channel_id() != 0) {
    set_channel_id(from.channel_id());
  }
}

void UpdateMessageChannelRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.UpdateMessageChannelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateMessageChannelRequest::CopyFrom(const UpdateMessageChannelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.UpdateMessageChannelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateMessageChannelRequest::IsInitialized() const {
  return true;
}

void UpdateMessageChannelRequest::Swap(UpdateMessageChannelRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateMessageChannelRequest::InternalSwap(UpdateMessageChannelRequest* other) {
  using std::swap;
  member_ids_.InternalSwap(&other->member_ids_);
  swap(title_, other->title_);
  swap(description_, other->description_);
  swap(channel_id_, other->channel_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateMessageChannelRequest::GetMetadata() const {
  protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateMessageChannelResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateMessageChannelResponse::UpdateMessageChannelResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fmessage_5fchannel_2eproto::scc_info_UpdateMessageChannelResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.UpdateMessageChannelResponse)
}
UpdateMessageChannelResponse::UpdateMessageChannelResponse(const UpdateMessageChannelResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:e8.UpdateMessageChannelResponse)
}

void UpdateMessageChannelResponse::SharedCtor() {
}

UpdateMessageChannelResponse::~UpdateMessageChannelResponse() {
  // @@protoc_insertion_point(destructor:e8.UpdateMessageChannelResponse)
  SharedDtor();
}

void UpdateMessageChannelResponse::SharedDtor() {
}

void UpdateMessageChannelResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateMessageChannelResponse::descriptor() {
  ::protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateMessageChannelResponse& UpdateMessageChannelResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fmessage_5fchannel_2eproto::scc_info_UpdateMessageChannelResponse.base);
  return *internal_default_instance();
}


void UpdateMessageChannelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.UpdateMessageChannelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool UpdateMessageChannelResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.UpdateMessageChannelResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:e8.UpdateMessageChannelResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.UpdateMessageChannelResponse)
  return false;
#undef DO_
}

void UpdateMessageChannelResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.UpdateMessageChannelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.UpdateMessageChannelResponse)
}

::google::protobuf::uint8* UpdateMessageChannelResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.UpdateMessageChannelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.UpdateMessageChannelResponse)
  return target;
}

size_t UpdateMessageChannelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.UpdateMessageChannelResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateMessageChannelResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.UpdateMessageChannelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateMessageChannelResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateMessageChannelResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.UpdateMessageChannelResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.UpdateMessageChannelResponse)
    MergeFrom(*source);
  }
}

void UpdateMessageChannelResponse::MergeFrom(const UpdateMessageChannelResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.UpdateMessageChannelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UpdateMessageChannelResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.UpdateMessageChannelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateMessageChannelResponse::CopyFrom(const UpdateMessageChannelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.UpdateMessageChannelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateMessageChannelResponse::IsInitialized() const {
  return true;
}

void UpdateMessageChannelResponse::Swap(UpdateMessageChannelResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateMessageChannelResponse::InternalSwap(UpdateMessageChannelResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateMessageChannelResponse::GetMetadata() const {
  protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddUserToMessageChannelRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddUserToMessageChannelRequest::kChannelIdFieldNumber;
const int AddUserToMessageChannelRequest::kUserIdFieldNumber;
const int AddUserToMessageChannelRequest::kMemberTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddUserToMessageChannelRequest::AddUserToMessageChannelRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fmessage_5fchannel_2eproto::scc_info_AddUserToMessageChannelRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.AddUserToMessageChannelRequest)
}
AddUserToMessageChannelRequest::AddUserToMessageChannelRequest(const AddUserToMessageChannelRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&channel_id_, &from.channel_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&member_type_) -
    reinterpret_cast<char*>(&channel_id_)) + sizeof(member_type_));
  // @@protoc_insertion_point(copy_constructor:e8.AddUserToMessageChannelRequest)
}

void AddUserToMessageChannelRequest::SharedCtor() {
  ::memset(&channel_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&member_type_) -
      reinterpret_cast<char*>(&channel_id_)) + sizeof(member_type_));
}

AddUserToMessageChannelRequest::~AddUserToMessageChannelRequest() {
  // @@protoc_insertion_point(destructor:e8.AddUserToMessageChannelRequest)
  SharedDtor();
}

void AddUserToMessageChannelRequest::SharedDtor() {
}

void AddUserToMessageChannelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddUserToMessageChannelRequest::descriptor() {
  ::protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddUserToMessageChannelRequest& AddUserToMessageChannelRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fmessage_5fchannel_2eproto::scc_info_AddUserToMessageChannelRequest.base);
  return *internal_default_instance();
}


void AddUserToMessageChannelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.AddUserToMessageChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&channel_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&member_type_) -
      reinterpret_cast<char*>(&channel_id_)) + sizeof(member_type_));
  _internal_metadata_.Clear();
}

bool AddUserToMessageChannelRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.AddUserToMessageChannelRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 channel_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &channel_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .e8.MessageChannelMemberType member_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_member_type(static_cast< ::e8::MessageChannelMemberType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.AddUserToMessageChannelRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.AddUserToMessageChannelRequest)
  return false;
#undef DO_
}

void AddUserToMessageChannelRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.AddUserToMessageChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->channel_id(), output);
  }

  // int64 user_id = 2;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->user_id(), output);
  }

  // .e8.MessageChannelMemberType member_type = 3;
  if (this->member_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->member_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.AddUserToMessageChannelRequest)
}

::google::protobuf::uint8* AddUserToMessageChannelRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.AddUserToMessageChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->channel_id(), target);
  }

  // int64 user_id = 2;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->user_id(), target);
  }

  // .e8.MessageChannelMemberType member_type = 3;
  if (this->member_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->member_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.AddUserToMessageChannelRequest)
  return target;
}

size_t AddUserToMessageChannelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.AddUserToMessageChannelRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->channel_id());
  }

  // int64 user_id = 2;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->user_id());
  }

  // .e8.MessageChannelMemberType member_type = 3;
  if (this->member_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->member_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddUserToMessageChannelRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.AddUserToMessageChannelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddUserToMessageChannelRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddUserToMessageChannelRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.AddUserToMessageChannelRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.AddUserToMessageChannelRequest)
    MergeFrom(*source);
  }
}

void AddUserToMessageChannelRequest::MergeFrom(const AddUserToMessageChannelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.AddUserToMessageChannelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.channel_id() != 0) {
    set_channel_id(from.channel_id());
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.member_type() != 0) {
    set_member_type(from.member_type());
  }
}

void AddUserToMessageChannelRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.AddUserToMessageChannelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddUserToMessageChannelRequest::CopyFrom(const AddUserToMessageChannelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.AddUserToMessageChannelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddUserToMessageChannelRequest::IsInitialized() const {
  return true;
}

void AddUserToMessageChannelRequest::Swap(AddUserToMessageChannelRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddUserToMessageChannelRequest::InternalSwap(AddUserToMessageChannelRequest* other) {
  using std::swap;
  swap(channel_id_, other->channel_id_);
  swap(user_id_, other->user_id_);
  swap(member_type_, other->member_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddUserToMessageChannelRequest::GetMetadata() const {
  protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddUserToMessageChannelResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddUserToMessageChannelResponse::AddUserToMessageChannelResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fmessage_5fchannel_2eproto::scc_info_AddUserToMessageChannelResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.AddUserToMessageChannelResponse)
}
AddUserToMessageChannelResponse::AddUserToMessageChannelResponse(const AddUserToMessageChannelResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:e8.AddUserToMessageChannelResponse)
}

void AddUserToMessageChannelResponse::SharedCtor() {
}

AddUserToMessageChannelResponse::~AddUserToMessageChannelResponse() {
  // @@protoc_insertion_point(destructor:e8.AddUserToMessageChannelResponse)
  SharedDtor();
}

void AddUserToMessageChannelResponse::SharedDtor() {
}

void AddUserToMessageChannelResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddUserToMessageChannelResponse::descriptor() {
  ::protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddUserToMessageChannelResponse& AddUserToMessageChannelResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fmessage_5fchannel_2eproto::scc_info_AddUserToMessageChannelResponse.base);
  return *internal_default_instance();
}


void AddUserToMessageChannelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.AddUserToMessageChannelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool AddUserToMessageChannelResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.AddUserToMessageChannelResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:e8.AddUserToMessageChannelResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.AddUserToMessageChannelResponse)
  return false;
#undef DO_
}

void AddUserToMessageChannelResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.AddUserToMessageChannelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.AddUserToMessageChannelResponse)
}

::google::protobuf::uint8* AddUserToMessageChannelResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.AddUserToMessageChannelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.AddUserToMessageChannelResponse)
  return target;
}

size_t AddUserToMessageChannelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.AddUserToMessageChannelResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddUserToMessageChannelResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.AddUserToMessageChannelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AddUserToMessageChannelResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddUserToMessageChannelResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.AddUserToMessageChannelResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.AddUserToMessageChannelResponse)
    MergeFrom(*source);
  }
}

void AddUserToMessageChannelResponse::MergeFrom(const AddUserToMessageChannelResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.AddUserToMessageChannelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AddUserToMessageChannelResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.AddUserToMessageChannelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddUserToMessageChannelResponse::CopyFrom(const AddUserToMessageChannelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.AddUserToMessageChannelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddUserToMessageChannelResponse::IsInitialized() const {
  return true;
}

void AddUserToMessageChannelResponse::Swap(AddUserToMessageChannelResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddUserToMessageChannelResponse::InternalSwap(AddUserToMessageChannelResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddUserToMessageChannelResponse::GetMetadata() const {
  protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetMessageChannelKeyRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMessageChannelKeyRequest::kChannelIdFieldNumber;
const int GetMessageChannelKeyRequest::kTimeoutSecsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMessageChannelKeyRequest::GetMessageChannelKeyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fmessage_5fchannel_2eproto::scc_info_GetMessageChannelKeyRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.GetMessageChannelKeyRequest)
}
GetMessageChannelKeyRequest::GetMessageChannelKeyRequest(const GetMessageChannelKeyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&channel_id_, &from.channel_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&timeout_secs_) -
    reinterpret_cast<char*>(&channel_id_)) + sizeof(timeout_secs_));
  // @@protoc_insertion_point(copy_constructor:e8.GetMessageChannelKeyRequest)
}

void GetMessageChannelKeyRequest::SharedCtor() {
  ::memset(&channel_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timeout_secs_) -
      reinterpret_cast<char*>(&channel_id_)) + sizeof(timeout_secs_));
}

GetMessageChannelKeyRequest::~GetMessageChannelKeyRequest() {
  // @@protoc_insertion_point(destructor:e8.GetMessageChannelKeyRequest)
  SharedDtor();
}

void GetMessageChannelKeyRequest::SharedDtor() {
}

void GetMessageChannelKeyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetMessageChannelKeyRequest::descriptor() {
  ::protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetMessageChannelKeyRequest& GetMessageChannelKeyRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fmessage_5fchannel_2eproto::scc_info_GetMessageChannelKeyRequest.base);
  return *internal_default_instance();
}


void GetMessageChannelKeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.GetMessageChannelKeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&channel_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timeout_secs_) -
      reinterpret_cast<char*>(&channel_id_)) + sizeof(timeout_secs_));
  _internal_metadata_.Clear();
}

bool GetMessageChannelKeyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.GetMessageChannelKeyRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 channel_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &channel_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 timeout_secs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timeout_secs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.GetMessageChannelKeyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.GetMessageChannelKeyRequest)
  return false;
#undef DO_
}

void GetMessageChannelKeyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.GetMessageChannelKeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->channel_id(), output);
  }

  // int32 timeout_secs = 2;
  if (this->timeout_secs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->timeout_secs(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.GetMessageChannelKeyRequest)
}

::google::protobuf::uint8* GetMessageChannelKeyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.GetMessageChannelKeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->channel_id(), target);
  }

  // int32 timeout_secs = 2;
  if (this->timeout_secs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->timeout_secs(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.GetMessageChannelKeyRequest)
  return target;
}

size_t GetMessageChannelKeyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.GetMessageChannelKeyRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->channel_id());
  }

  // int32 timeout_secs = 2;
  if (this->timeout_secs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timeout_secs());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMessageChannelKeyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.GetMessageChannelKeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMessageChannelKeyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetMessageChannelKeyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.GetMessageChannelKeyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.GetMessageChannelKeyRequest)
    MergeFrom(*source);
  }
}

void GetMessageChannelKeyRequest::MergeFrom(const GetMessageChannelKeyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.GetMessageChannelKeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.channel_id() != 0) {
    set_channel_id(from.channel_id());
  }
  if (from.timeout_secs() != 0) {
    set_timeout_secs(from.timeout_secs());
  }
}

void GetMessageChannelKeyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.GetMessageChannelKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMessageChannelKeyRequest::CopyFrom(const GetMessageChannelKeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.GetMessageChannelKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMessageChannelKeyRequest::IsInitialized() const {
  return true;
}

void GetMessageChannelKeyRequest::Swap(GetMessageChannelKeyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMessageChannelKeyRequest::InternalSwap(GetMessageChannelKeyRequest* other) {
  using std::swap;
  swap(channel_id_, other->channel_id_);
  swap(timeout_secs_, other->timeout_secs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetMessageChannelKeyRequest::GetMetadata() const {
  protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetMessageChannelKeyResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMessageChannelKeyResponse::kChannelKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMessageChannelKeyResponse::GetMessageChannelKeyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fmessage_5fchannel_2eproto::scc_info_GetMessageChannelKeyResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.GetMessageChannelKeyResponse)
}
GetMessageChannelKeyResponse::GetMessageChannelKeyResponse(const GetMessageChannelKeyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  channel_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.channel_key().size() > 0) {
    channel_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_key_);
  }
  // @@protoc_insertion_point(copy_constructor:e8.GetMessageChannelKeyResponse)
}

void GetMessageChannelKeyResponse::SharedCtor() {
  channel_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetMessageChannelKeyResponse::~GetMessageChannelKeyResponse() {
  // @@protoc_insertion_point(destructor:e8.GetMessageChannelKeyResponse)
  SharedDtor();
}

void GetMessageChannelKeyResponse::SharedDtor() {
  channel_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetMessageChannelKeyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetMessageChannelKeyResponse::descriptor() {
  ::protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetMessageChannelKeyResponse& GetMessageChannelKeyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fmessage_5fchannel_2eproto::scc_info_GetMessageChannelKeyResponse.base);
  return *internal_default_instance();
}


void GetMessageChannelKeyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.GetMessageChannelKeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channel_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetMessageChannelKeyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.GetMessageChannelKeyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string channel_key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->channel_key().data(), static_cast<int>(this->channel_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "e8.GetMessageChannelKeyResponse.channel_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.GetMessageChannelKeyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.GetMessageChannelKeyResponse)
  return false;
#undef DO_
}

void GetMessageChannelKeyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.GetMessageChannelKeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string channel_key = 3;
  if (this->channel_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channel_key().data(), static_cast<int>(this->channel_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "e8.GetMessageChannelKeyResponse.channel_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->channel_key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.GetMessageChannelKeyResponse)
}

::google::protobuf::uint8* GetMessageChannelKeyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.GetMessageChannelKeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string channel_key = 3;
  if (this->channel_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channel_key().data(), static_cast<int>(this->channel_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "e8.GetMessageChannelKeyResponse.channel_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->channel_key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.GetMessageChannelKeyResponse)
  return target;
}

size_t GetMessageChannelKeyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.GetMessageChannelKeyResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string channel_key = 3;
  if (this->channel_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->channel_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMessageChannelKeyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.GetMessageChannelKeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMessageChannelKeyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetMessageChannelKeyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.GetMessageChannelKeyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.GetMessageChannelKeyResponse)
    MergeFrom(*source);
  }
}

void GetMessageChannelKeyResponse::MergeFrom(const GetMessageChannelKeyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.GetMessageChannelKeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.channel_key().size() > 0) {

    channel_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_key_);
  }
}

void GetMessageChannelKeyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.GetMessageChannelKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMessageChannelKeyResponse::CopyFrom(const GetMessageChannelKeyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.GetMessageChannelKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMessageChannelKeyResponse::IsInitialized() const {
  return true;
}

void GetMessageChannelKeyResponse::Swap(GetMessageChannelKeyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMessageChannelKeyResponse::InternalSwap(GetMessageChannelKeyResponse* other) {
  using std::swap;
  channel_key_.Swap(&other->channel_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetMessageChannelKeyResponse::GetMetadata() const {
  protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LeaveMessageChannelRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LeaveMessageChannelRequest::kChannelIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeaveMessageChannelRequest::LeaveMessageChannelRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fmessage_5fchannel_2eproto::scc_info_LeaveMessageChannelRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.LeaveMessageChannelRequest)
}
LeaveMessageChannelRequest::LeaveMessageChannelRequest(const LeaveMessageChannelRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  channel_id_ = from.channel_id_;
  // @@protoc_insertion_point(copy_constructor:e8.LeaveMessageChannelRequest)
}

void LeaveMessageChannelRequest::SharedCtor() {
  channel_id_ = GOOGLE_LONGLONG(0);
}

LeaveMessageChannelRequest::~LeaveMessageChannelRequest() {
  // @@protoc_insertion_point(destructor:e8.LeaveMessageChannelRequest)
  SharedDtor();
}

void LeaveMessageChannelRequest::SharedDtor() {
}

void LeaveMessageChannelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LeaveMessageChannelRequest::descriptor() {
  ::protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LeaveMessageChannelRequest& LeaveMessageChannelRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fmessage_5fchannel_2eproto::scc_info_LeaveMessageChannelRequest.base);
  return *internal_default_instance();
}


void LeaveMessageChannelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.LeaveMessageChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channel_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool LeaveMessageChannelRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.LeaveMessageChannelRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 channel_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &channel_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.LeaveMessageChannelRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.LeaveMessageChannelRequest)
  return false;
#undef DO_
}

void LeaveMessageChannelRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.LeaveMessageChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->channel_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.LeaveMessageChannelRequest)
}

::google::protobuf::uint8* LeaveMessageChannelRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.LeaveMessageChannelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->channel_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.LeaveMessageChannelRequest)
  return target;
}

size_t LeaveMessageChannelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.LeaveMessageChannelRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->channel_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LeaveMessageChannelRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.LeaveMessageChannelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LeaveMessageChannelRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LeaveMessageChannelRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.LeaveMessageChannelRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.LeaveMessageChannelRequest)
    MergeFrom(*source);
  }
}

void LeaveMessageChannelRequest::MergeFrom(const LeaveMessageChannelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.LeaveMessageChannelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.channel_id() != 0) {
    set_channel_id(from.channel_id());
  }
}

void LeaveMessageChannelRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.LeaveMessageChannelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaveMessageChannelRequest::CopyFrom(const LeaveMessageChannelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.LeaveMessageChannelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaveMessageChannelRequest::IsInitialized() const {
  return true;
}

void LeaveMessageChannelRequest::Swap(LeaveMessageChannelRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeaveMessageChannelRequest::InternalSwap(LeaveMessageChannelRequest* other) {
  using std::swap;
  swap(channel_id_, other->channel_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LeaveMessageChannelRequest::GetMetadata() const {
  protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LeaveMessageChannelResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeaveMessageChannelResponse::LeaveMessageChannelResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fmessage_5fchannel_2eproto::scc_info_LeaveMessageChannelResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.LeaveMessageChannelResponse)
}
LeaveMessageChannelResponse::LeaveMessageChannelResponse(const LeaveMessageChannelResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:e8.LeaveMessageChannelResponse)
}

void LeaveMessageChannelResponse::SharedCtor() {
}

LeaveMessageChannelResponse::~LeaveMessageChannelResponse() {
  // @@protoc_insertion_point(destructor:e8.LeaveMessageChannelResponse)
  SharedDtor();
}

void LeaveMessageChannelResponse::SharedDtor() {
}

void LeaveMessageChannelResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LeaveMessageChannelResponse::descriptor() {
  ::protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LeaveMessageChannelResponse& LeaveMessageChannelResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fmessage_5fchannel_2eproto::scc_info_LeaveMessageChannelResponse.base);
  return *internal_default_instance();
}


void LeaveMessageChannelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.LeaveMessageChannelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool LeaveMessageChannelResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.LeaveMessageChannelResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:e8.LeaveMessageChannelResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.LeaveMessageChannelResponse)
  return false;
#undef DO_
}

void LeaveMessageChannelResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.LeaveMessageChannelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.LeaveMessageChannelResponse)
}

::google::protobuf::uint8* LeaveMessageChannelResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.LeaveMessageChannelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.LeaveMessageChannelResponse)
  return target;
}

size_t LeaveMessageChannelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.LeaveMessageChannelResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LeaveMessageChannelResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.LeaveMessageChannelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LeaveMessageChannelResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LeaveMessageChannelResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.LeaveMessageChannelResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.LeaveMessageChannelResponse)
    MergeFrom(*source);
  }
}

void LeaveMessageChannelResponse::MergeFrom(const LeaveMessageChannelResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.LeaveMessageChannelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void LeaveMessageChannelResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.LeaveMessageChannelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaveMessageChannelResponse::CopyFrom(const LeaveMessageChannelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.LeaveMessageChannelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaveMessageChannelResponse::IsInitialized() const {
  return true;
}

void LeaveMessageChannelResponse::Swap(LeaveMessageChannelResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeaveMessageChannelResponse::InternalSwap(LeaveMessageChannelResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LeaveMessageChannelResponse::GetMetadata() const {
  protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SearchMessageChannelsRequest::InitAsDefaultInstance() {
  ::e8::_SearchMessageChannelsRequest_default_instance_._instance.get_mutable()->pagination_ = const_cast< ::e8::Pagination*>(
      ::e8::Pagination::internal_default_instance());
  ::e8::_SearchMessageChannelsRequest_default_instance_._instance.get_mutable()->search_text_ = const_cast< ::e8::NullableString*>(
      ::e8::NullableString::internal_default_instance());
}
void SearchMessageChannelsRequest::clear_pagination() {
  if (GetArenaNoVirtual() == NULL && pagination_ != NULL) {
    delete pagination_;
  }
  pagination_ = NULL;
}
void SearchMessageChannelsRequest::clear_search_text() {
  if (GetArenaNoVirtual() == NULL && search_text_ != NULL) {
    delete search_text_;
  }
  search_text_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchMessageChannelsRequest::kPaginationFieldNumber;
const int SearchMessageChannelsRequest::kWithMemberIdsFieldNumber;
const int SearchMessageChannelsRequest::kActiveMemberFetchLimitFieldNumber;
const int SearchMessageChannelsRequest::kChannelIdsFieldNumber;
const int SearchMessageChannelsRequest::kSearchTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchMessageChannelsRequest::SearchMessageChannelsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fmessage_5fchannel_2eproto::scc_info_SearchMessageChannelsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.SearchMessageChannelsRequest)
}
SearchMessageChannelsRequest::SearchMessageChannelsRequest(const SearchMessageChannelsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      with_member_ids_(from.with_member_ids_),
      channel_ids_(from.channel_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pagination()) {
    pagination_ = new ::e8::Pagination(*from.pagination_);
  } else {
    pagination_ = NULL;
  }
  if (from.has_search_text()) {
    search_text_ = new ::e8::NullableString(*from.search_text_);
  } else {
    search_text_ = NULL;
  }
  active_member_fetch_limit_ = from.active_member_fetch_limit_;
  // @@protoc_insertion_point(copy_constructor:e8.SearchMessageChannelsRequest)
}

void SearchMessageChannelsRequest::SharedCtor() {
  ::memset(&pagination_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&active_member_fetch_limit_) -
      reinterpret_cast<char*>(&pagination_)) + sizeof(active_member_fetch_limit_));
}

SearchMessageChannelsRequest::~SearchMessageChannelsRequest() {
  // @@protoc_insertion_point(destructor:e8.SearchMessageChannelsRequest)
  SharedDtor();
}

void SearchMessageChannelsRequest::SharedDtor() {
  if (this != internal_default_instance()) delete pagination_;
  if (this != internal_default_instance()) delete search_text_;
}

void SearchMessageChannelsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SearchMessageChannelsRequest::descriptor() {
  ::protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchMessageChannelsRequest& SearchMessageChannelsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fmessage_5fchannel_2eproto::scc_info_SearchMessageChannelsRequest.base);
  return *internal_default_instance();
}


void SearchMessageChannelsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.SearchMessageChannelsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  with_member_ids_.Clear();
  channel_ids_.Clear();
  if (GetArenaNoVirtual() == NULL && pagination_ != NULL) {
    delete pagination_;
  }
  pagination_ = NULL;
  if (GetArenaNoVirtual() == NULL && search_text_ != NULL) {
    delete search_text_;
  }
  search_text_ = NULL;
  active_member_fetch_limit_ = 0;
  _internal_metadata_.Clear();
}

bool SearchMessageChannelsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.SearchMessageChannelsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .e8.Pagination pagination = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pagination()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 with_member_ids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_with_member_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_with_member_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 active_member_fetch_limit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &active_member_fetch_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 channel_ids = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_channel_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 34u, input, this->mutable_channel_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .e8.NullableString search_text = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_search_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.SearchMessageChannelsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.SearchMessageChannelsRequest)
  return false;
#undef DO_
}

void SearchMessageChannelsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.SearchMessageChannelsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .e8.Pagination pagination = 1;
  if (this->has_pagination()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pagination(), output);
  }

  // repeated int64 with_member_ids = 2;
  if (this->with_member_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _with_member_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->with_member_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->with_member_ids(i), output);
  }

  // int32 active_member_fetch_limit = 3;
  if (this->active_member_fetch_limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->active_member_fetch_limit(), output);
  }

  // repeated int64 channel_ids = 4;
  if (this->channel_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _channel_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->channel_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->channel_ids(i), output);
  }

  // .e8.NullableString search_text = 5;
  if (this->has_search_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_search_text(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.SearchMessageChannelsRequest)
}

::google::protobuf::uint8* SearchMessageChannelsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.SearchMessageChannelsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .e8.Pagination pagination = 1;
  if (this->has_pagination()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pagination(), deterministic, target);
  }

  // repeated int64 with_member_ids = 2;
  if (this->with_member_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _with_member_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->with_member_ids_, target);
  }

  // int32 active_member_fetch_limit = 3;
  if (this->active_member_fetch_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->active_member_fetch_limit(), target);
  }

  // repeated int64 channel_ids = 4;
  if (this->channel_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _channel_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->channel_ids_, target);
  }

  // .e8.NullableString search_text = 5;
  if (this->has_search_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_search_text(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.SearchMessageChannelsRequest)
  return target;
}

size_t SearchMessageChannelsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.SearchMessageChannelsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 with_member_ids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->with_member_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _with_member_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 channel_ids = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->channel_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _channel_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .e8.Pagination pagination = 1;
  if (this->has_pagination()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pagination_);
  }

  // .e8.NullableString search_text = 5;
  if (this->has_search_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *search_text_);
  }

  // int32 active_member_fetch_limit = 3;
  if (this->active_member_fetch_limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->active_member_fetch_limit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SearchMessageChannelsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.SearchMessageChannelsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchMessageChannelsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchMessageChannelsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.SearchMessageChannelsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.SearchMessageChannelsRequest)
    MergeFrom(*source);
  }
}

void SearchMessageChannelsRequest::MergeFrom(const SearchMessageChannelsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.SearchMessageChannelsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  with_member_ids_.MergeFrom(from.with_member_ids_);
  channel_ids_.MergeFrom(from.channel_ids_);
  if (from.has_pagination()) {
    mutable_pagination()->::e8::Pagination::MergeFrom(from.pagination());
  }
  if (from.has_search_text()) {
    mutable_search_text()->::e8::NullableString::MergeFrom(from.search_text());
  }
  if (from.active_member_fetch_limit() != 0) {
    set_active_member_fetch_limit(from.active_member_fetch_limit());
  }
}

void SearchMessageChannelsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.SearchMessageChannelsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchMessageChannelsRequest::CopyFrom(const SearchMessageChannelsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.SearchMessageChannelsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchMessageChannelsRequest::IsInitialized() const {
  return true;
}

void SearchMessageChannelsRequest::Swap(SearchMessageChannelsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchMessageChannelsRequest::InternalSwap(SearchMessageChannelsRequest* other) {
  using std::swap;
  with_member_ids_.InternalSwap(&other->with_member_ids_);
  channel_ids_.InternalSwap(&other->channel_ids_);
  swap(pagination_, other->pagination_);
  swap(search_text_, other->search_text_);
  swap(active_member_fetch_limit_, other->active_member_fetch_limit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SearchMessageChannelsRequest::GetMetadata() const {
  protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SearchMessageChannelsResponse::InitAsDefaultInstance() {
}
void SearchMessageChannelsResponse::clear_channels() {
  channels_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchMessageChannelsResponse::kChannelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchMessageChannelsResponse::SearchMessageChannelsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fmessage_5fchannel_2eproto::scc_info_SearchMessageChannelsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.SearchMessageChannelsResponse)
}
SearchMessageChannelsResponse::SearchMessageChannelsResponse(const SearchMessageChannelsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      channels_(from.channels_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:e8.SearchMessageChannelsResponse)
}

void SearchMessageChannelsResponse::SharedCtor() {
}

SearchMessageChannelsResponse::~SearchMessageChannelsResponse() {
  // @@protoc_insertion_point(destructor:e8.SearchMessageChannelsResponse)
  SharedDtor();
}

void SearchMessageChannelsResponse::SharedDtor() {
}

void SearchMessageChannelsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SearchMessageChannelsResponse::descriptor() {
  ::protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchMessageChannelsResponse& SearchMessageChannelsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fmessage_5fchannel_2eproto::scc_info_SearchMessageChannelsResponse.base);
  return *internal_default_instance();
}


void SearchMessageChannelsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.SearchMessageChannelsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channels_.Clear();
  _internal_metadata_.Clear();
}

bool SearchMessageChannelsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.SearchMessageChannelsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .e8.MessageChannelOverview channels = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_channels()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.SearchMessageChannelsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.SearchMessageChannelsResponse)
  return false;
#undef DO_
}

void SearchMessageChannelsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.SearchMessageChannelsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .e8.MessageChannelOverview channels = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channels_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->channels(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.SearchMessageChannelsResponse)
}

::google::protobuf::uint8* SearchMessageChannelsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.SearchMessageChannelsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .e8.MessageChannelOverview channels = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channels_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->channels(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.SearchMessageChannelsResponse)
  return target;
}

size_t SearchMessageChannelsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.SearchMessageChannelsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .e8.MessageChannelOverview channels = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->channels_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->channels(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SearchMessageChannelsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.SearchMessageChannelsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchMessageChannelsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchMessageChannelsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.SearchMessageChannelsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.SearchMessageChannelsResponse)
    MergeFrom(*source);
  }
}

void SearchMessageChannelsResponse::MergeFrom(const SearchMessageChannelsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.SearchMessageChannelsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  channels_.MergeFrom(from.channels_);
}

void SearchMessageChannelsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.SearchMessageChannelsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchMessageChannelsResponse::CopyFrom(const SearchMessageChannelsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.SearchMessageChannelsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchMessageChannelsResponse::IsInitialized() const {
  return true;
}

void SearchMessageChannelsResponse::Swap(SearchMessageChannelsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchMessageChannelsResponse::InternalSwap(SearchMessageChannelsResponse* other) {
  using std::swap;
  CastToBase(&channels_)->InternalSwap(CastToBase(&other->channels_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SearchMessageChannelsResponse::GetMetadata() const {
  protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetMessageChannelMembersRequest::InitAsDefaultInstance() {
  ::e8::_GetMessageChannelMembersRequest_default_instance_._instance.get_mutable()->pagination_ = const_cast< ::e8::Pagination*>(
      ::e8::Pagination::internal_default_instance());
}
void GetMessageChannelMembersRequest::clear_pagination() {
  if (GetArenaNoVirtual() == NULL && pagination_ != NULL) {
    delete pagination_;
  }
  pagination_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMessageChannelMembersRequest::kChannelIdFieldNumber;
const int GetMessageChannelMembersRequest::kPaginationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMessageChannelMembersRequest::GetMessageChannelMembersRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fmessage_5fchannel_2eproto::scc_info_GetMessageChannelMembersRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.GetMessageChannelMembersRequest)
}
GetMessageChannelMembersRequest::GetMessageChannelMembersRequest(const GetMessageChannelMembersRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pagination()) {
    pagination_ = new ::e8::Pagination(*from.pagination_);
  } else {
    pagination_ = NULL;
  }
  channel_id_ = from.channel_id_;
  // @@protoc_insertion_point(copy_constructor:e8.GetMessageChannelMembersRequest)
}

void GetMessageChannelMembersRequest::SharedCtor() {
  ::memset(&pagination_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_id_) -
      reinterpret_cast<char*>(&pagination_)) + sizeof(channel_id_));
}

GetMessageChannelMembersRequest::~GetMessageChannelMembersRequest() {
  // @@protoc_insertion_point(destructor:e8.GetMessageChannelMembersRequest)
  SharedDtor();
}

void GetMessageChannelMembersRequest::SharedDtor() {
  if (this != internal_default_instance()) delete pagination_;
}

void GetMessageChannelMembersRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetMessageChannelMembersRequest::descriptor() {
  ::protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetMessageChannelMembersRequest& GetMessageChannelMembersRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fmessage_5fchannel_2eproto::scc_info_GetMessageChannelMembersRequest.base);
  return *internal_default_instance();
}


void GetMessageChannelMembersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.GetMessageChannelMembersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pagination_ != NULL) {
    delete pagination_;
  }
  pagination_ = NULL;
  channel_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool GetMessageChannelMembersRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.GetMessageChannelMembersRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 channel_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &channel_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .e8.Pagination pagination = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pagination()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.GetMessageChannelMembersRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.GetMessageChannelMembersRequest)
  return false;
#undef DO_
}

void GetMessageChannelMembersRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.GetMessageChannelMembersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->channel_id(), output);
  }

  // .e8.Pagination pagination = 2;
  if (this->has_pagination()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pagination(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.GetMessageChannelMembersRequest)
}

::google::protobuf::uint8* GetMessageChannelMembersRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.GetMessageChannelMembersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->channel_id(), target);
  }

  // .e8.Pagination pagination = 2;
  if (this->has_pagination()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pagination(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.GetMessageChannelMembersRequest)
  return target;
}

size_t GetMessageChannelMembersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.GetMessageChannelMembersRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .e8.Pagination pagination = 2;
  if (this->has_pagination()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pagination_);
  }

  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->channel_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMessageChannelMembersRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.GetMessageChannelMembersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMessageChannelMembersRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetMessageChannelMembersRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.GetMessageChannelMembersRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.GetMessageChannelMembersRequest)
    MergeFrom(*source);
  }
}

void GetMessageChannelMembersRequest::MergeFrom(const GetMessageChannelMembersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.GetMessageChannelMembersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pagination()) {
    mutable_pagination()->::e8::Pagination::MergeFrom(from.pagination());
  }
  if (from.channel_id() != 0) {
    set_channel_id(from.channel_id());
  }
}

void GetMessageChannelMembersRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.GetMessageChannelMembersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMessageChannelMembersRequest::CopyFrom(const GetMessageChannelMembersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.GetMessageChannelMembersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMessageChannelMembersRequest::IsInitialized() const {
  return true;
}

void GetMessageChannelMembersRequest::Swap(GetMessageChannelMembersRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMessageChannelMembersRequest::InternalSwap(GetMessageChannelMembersRequest* other) {
  using std::swap;
  swap(pagination_, other->pagination_);
  swap(channel_id_, other->channel_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetMessageChannelMembersRequest::GetMetadata() const {
  protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetMessageChannelMembersResponse::InitAsDefaultInstance() {
}
void GetMessageChannelMembersResponse::clear_user_profiles() {
  user_profiles_.Clear();
}
void GetMessageChannelMembersResponse::clear_channel_relations() {
  channel_relations_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMessageChannelMembersResponse::kUserProfilesFieldNumber;
const int GetMessageChannelMembersResponse::kChannelRelationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMessageChannelMembersResponse::GetMessageChannelMembersResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fmessage_5fchannel_2eproto::scc_info_GetMessageChannelMembersResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.GetMessageChannelMembersResponse)
}
GetMessageChannelMembersResponse::GetMessageChannelMembersResponse(const GetMessageChannelMembersResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      user_profiles_(from.user_profiles_),
      channel_relations_(from.channel_relations_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:e8.GetMessageChannelMembersResponse)
}

void GetMessageChannelMembersResponse::SharedCtor() {
}

GetMessageChannelMembersResponse::~GetMessageChannelMembersResponse() {
  // @@protoc_insertion_point(destructor:e8.GetMessageChannelMembersResponse)
  SharedDtor();
}

void GetMessageChannelMembersResponse::SharedDtor() {
}

void GetMessageChannelMembersResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetMessageChannelMembersResponse::descriptor() {
  ::protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetMessageChannelMembersResponse& GetMessageChannelMembersResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fmessage_5fchannel_2eproto::scc_info_GetMessageChannelMembersResponse.base);
  return *internal_default_instance();
}


void GetMessageChannelMembersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.GetMessageChannelMembersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_profiles_.Clear();
  channel_relations_.Clear();
  _internal_metadata_.Clear();
}

bool GetMessageChannelMembersResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.GetMessageChannelMembersResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .e8.UserPublicProfile user_profiles = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_user_profiles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .e8.MessageChannelRelation channel_relations = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_channel_relations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.GetMessageChannelMembersResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.GetMessageChannelMembersResponse)
  return false;
#undef DO_
}

void GetMessageChannelMembersResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.GetMessageChannelMembersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .e8.UserPublicProfile user_profiles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->user_profiles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->user_profiles(static_cast<int>(i)),
      output);
  }

  // repeated .e8.MessageChannelRelation channel_relations = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channel_relations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->channel_relations(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.GetMessageChannelMembersResponse)
}

::google::protobuf::uint8* GetMessageChannelMembersResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.GetMessageChannelMembersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .e8.UserPublicProfile user_profiles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->user_profiles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->user_profiles(static_cast<int>(i)), deterministic, target);
  }

  // repeated .e8.MessageChannelRelation channel_relations = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channel_relations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->channel_relations(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.GetMessageChannelMembersResponse)
  return target;
}

size_t GetMessageChannelMembersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.GetMessageChannelMembersResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .e8.UserPublicProfile user_profiles = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->user_profiles_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->user_profiles(static_cast<int>(i)));
    }
  }

  // repeated .e8.MessageChannelRelation channel_relations = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->channel_relations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->channel_relations(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMessageChannelMembersResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.GetMessageChannelMembersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMessageChannelMembersResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetMessageChannelMembersResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.GetMessageChannelMembersResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.GetMessageChannelMembersResponse)
    MergeFrom(*source);
  }
}

void GetMessageChannelMembersResponse::MergeFrom(const GetMessageChannelMembersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.GetMessageChannelMembersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  user_profiles_.MergeFrom(from.user_profiles_);
  channel_relations_.MergeFrom(from.channel_relations_);
}

void GetMessageChannelMembersResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.GetMessageChannelMembersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMessageChannelMembersResponse::CopyFrom(const GetMessageChannelMembersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.GetMessageChannelMembersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMessageChannelMembersResponse::IsInitialized() const {
  return true;
}

void GetMessageChannelMembersResponse::Swap(GetMessageChannelMembersResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMessageChannelMembersResponse::InternalSwap(GetMessageChannelMembersResponse* other) {
  using std::swap;
  CastToBase(&user_profiles_)->InternalSwap(CastToBase(&other->user_profiles_));
  CastToBase(&channel_relations_)->InternalSwap(CastToBase(&other->channel_relations_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetMessageChannelMembersResponse::GetMetadata() const {
  protobuf_service_5fmessage_5fchannel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fmessage_5fchannel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace e8
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::CreateMessageChannelRequest* Arena::CreateMaybeMessage< ::e8::CreateMessageChannelRequest >(Arena* arena) {
  return Arena::CreateInternal< ::e8::CreateMessageChannelRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::CreateMessageChannelResponse* Arena::CreateMaybeMessage< ::e8::CreateMessageChannelResponse >(Arena* arena) {
  return Arena::CreateInternal< ::e8::CreateMessageChannelResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::UpdateMessageChannelRequest* Arena::CreateMaybeMessage< ::e8::UpdateMessageChannelRequest >(Arena* arena) {
  return Arena::CreateInternal< ::e8::UpdateMessageChannelRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::UpdateMessageChannelResponse* Arena::CreateMaybeMessage< ::e8::UpdateMessageChannelResponse >(Arena* arena) {
  return Arena::CreateInternal< ::e8::UpdateMessageChannelResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::AddUserToMessageChannelRequest* Arena::CreateMaybeMessage< ::e8::AddUserToMessageChannelRequest >(Arena* arena) {
  return Arena::CreateInternal< ::e8::AddUserToMessageChannelRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::AddUserToMessageChannelResponse* Arena::CreateMaybeMessage< ::e8::AddUserToMessageChannelResponse >(Arena* arena) {
  return Arena::CreateInternal< ::e8::AddUserToMessageChannelResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::GetMessageChannelKeyRequest* Arena::CreateMaybeMessage< ::e8::GetMessageChannelKeyRequest >(Arena* arena) {
  return Arena::CreateInternal< ::e8::GetMessageChannelKeyRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::GetMessageChannelKeyResponse* Arena::CreateMaybeMessage< ::e8::GetMessageChannelKeyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::e8::GetMessageChannelKeyResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::LeaveMessageChannelRequest* Arena::CreateMaybeMessage< ::e8::LeaveMessageChannelRequest >(Arena* arena) {
  return Arena::CreateInternal< ::e8::LeaveMessageChannelRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::LeaveMessageChannelResponse* Arena::CreateMaybeMessage< ::e8::LeaveMessageChannelResponse >(Arena* arena) {
  return Arena::CreateInternal< ::e8::LeaveMessageChannelResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::SearchMessageChannelsRequest* Arena::CreateMaybeMessage< ::e8::SearchMessageChannelsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::e8::SearchMessageChannelsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::SearchMessageChannelsResponse* Arena::CreateMaybeMessage< ::e8::SearchMessageChannelsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::e8::SearchMessageChannelsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::GetMessageChannelMembersRequest* Arena::CreateMaybeMessage< ::e8::GetMessageChannelMembersRequest >(Arena* arena) {
  return Arena::CreateInternal< ::e8::GetMessageChannelMembersRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::GetMessageChannelMembersResponse* Arena::CreateMaybeMessage< ::e8::GetMessageChannelMembersResponse >(Arena* arena) {
  return Arena::CreateInternal< ::e8::GetMessageChannelMembersResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
