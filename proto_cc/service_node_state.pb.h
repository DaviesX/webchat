// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service_node_state.proto

#ifndef PROTOBUF_INCLUDED_service_5fnode_5fstate_2eproto
#define PROTOBUF_INCLUDED_service_5fnode_5fstate_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "node.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_service_5fnode_5fstate_2eproto 

namespace protobuf_service_5fnode_5fstate_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[8];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_service_5fnode_5fstate_2eproto
namespace e8 {
class AddPeersRequest;
class AddPeersRequestDefaultTypeInternal;
extern AddPeersRequestDefaultTypeInternal _AddPeersRequest_default_instance_;
class AddPeersResponse;
class AddPeersResponseDefaultTypeInternal;
extern AddPeersResponseDefaultTypeInternal _AddPeersResponse_default_instance_;
class DeletePeersRequest;
class DeletePeersRequestDefaultTypeInternal;
extern DeletePeersRequestDefaultTypeInternal _DeletePeersRequest_default_instance_;
class DeletePeersResponse;
class DeletePeersResponseDefaultTypeInternal;
extern DeletePeersResponseDefaultTypeInternal _DeletePeersResponse_default_instance_;
class GetCurrentRevisionEpochRequest;
class GetCurrentRevisionEpochRequestDefaultTypeInternal;
extern GetCurrentRevisionEpochRequestDefaultTypeInternal _GetCurrentRevisionEpochRequest_default_instance_;
class GetCurrentRevisionEpochResponse;
class GetCurrentRevisionEpochResponseDefaultTypeInternal;
extern GetCurrentRevisionEpochResponseDefaultTypeInternal _GetCurrentRevisionEpochResponse_default_instance_;
class ReviseNodeStateRequest;
class ReviseNodeStateRequestDefaultTypeInternal;
extern ReviseNodeStateRequestDefaultTypeInternal _ReviseNodeStateRequest_default_instance_;
class ReviseNodeStateResponse;
class ReviseNodeStateResponseDefaultTypeInternal;
extern ReviseNodeStateResponseDefaultTypeInternal _ReviseNodeStateResponse_default_instance_;
}  // namespace e8
namespace google {
namespace protobuf {
template<> ::e8::AddPeersRequest* Arena::CreateMaybeMessage<::e8::AddPeersRequest>(Arena*);
template<> ::e8::AddPeersResponse* Arena::CreateMaybeMessage<::e8::AddPeersResponse>(Arena*);
template<> ::e8::DeletePeersRequest* Arena::CreateMaybeMessage<::e8::DeletePeersRequest>(Arena*);
template<> ::e8::DeletePeersResponse* Arena::CreateMaybeMessage<::e8::DeletePeersResponse>(Arena*);
template<> ::e8::GetCurrentRevisionEpochRequest* Arena::CreateMaybeMessage<::e8::GetCurrentRevisionEpochRequest>(Arena*);
template<> ::e8::GetCurrentRevisionEpochResponse* Arena::CreateMaybeMessage<::e8::GetCurrentRevisionEpochResponse>(Arena*);
template<> ::e8::ReviseNodeStateRequest* Arena::CreateMaybeMessage<::e8::ReviseNodeStateRequest>(Arena*);
template<> ::e8::ReviseNodeStateResponse* Arena::CreateMaybeMessage<::e8::ReviseNodeStateResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace e8 {

// ===================================================================

class ReviseNodeStateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.ReviseNodeStateRequest) */ {
 public:
  ReviseNodeStateRequest();
  virtual ~ReviseNodeStateRequest();

  ReviseNodeStateRequest(const ReviseNodeStateRequest& from);

  inline ReviseNodeStateRequest& operator=(const ReviseNodeStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReviseNodeStateRequest(ReviseNodeStateRequest&& from) noexcept
    : ReviseNodeStateRequest() {
    *this = ::std::move(from);
  }

  inline ReviseNodeStateRequest& operator=(ReviseNodeStateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReviseNodeStateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReviseNodeStateRequest* internal_default_instance() {
    return reinterpret_cast<const ReviseNodeStateRequest*>(
               &_ReviseNodeStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ReviseNodeStateRequest* other);
  friend void swap(ReviseNodeStateRequest& a, ReviseNodeStateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReviseNodeStateRequest* New() const final {
    return CreateMaybeMessage<ReviseNodeStateRequest>(NULL);
  }

  ReviseNodeStateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReviseNodeStateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReviseNodeStateRequest& from);
  void MergeFrom(const ReviseNodeStateRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReviseNodeStateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .e8.NodeStateRevision revisions = 1;
  int revisions_size() const;
  void clear_revisions();
  static const int kRevisionsFieldNumber = 1;
  ::e8::NodeStateRevision* mutable_revisions(int index);
  ::google::protobuf::RepeatedPtrField< ::e8::NodeStateRevision >*
      mutable_revisions();
  const ::e8::NodeStateRevision& revisions(int index) const;
  ::e8::NodeStateRevision* add_revisions();
  const ::google::protobuf::RepeatedPtrField< ::e8::NodeStateRevision >&
      revisions() const;

  // @@protoc_insertion_point(class_scope:e8.ReviseNodeStateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::e8::NodeStateRevision > revisions_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fnode_5fstate_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReviseNodeStateResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.ReviseNodeStateResponse) */ {
 public:
  ReviseNodeStateResponse();
  virtual ~ReviseNodeStateResponse();

  ReviseNodeStateResponse(const ReviseNodeStateResponse& from);

  inline ReviseNodeStateResponse& operator=(const ReviseNodeStateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReviseNodeStateResponse(ReviseNodeStateResponse&& from) noexcept
    : ReviseNodeStateResponse() {
    *this = ::std::move(from);
  }

  inline ReviseNodeStateResponse& operator=(ReviseNodeStateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReviseNodeStateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReviseNodeStateResponse* internal_default_instance() {
    return reinterpret_cast<const ReviseNodeStateResponse*>(
               &_ReviseNodeStateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ReviseNodeStateResponse* other);
  friend void swap(ReviseNodeStateResponse& a, ReviseNodeStateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReviseNodeStateResponse* New() const final {
    return CreateMaybeMessage<ReviseNodeStateResponse>(NULL);
  }

  ReviseNodeStateResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReviseNodeStateResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReviseNodeStateResponse& from);
  void MergeFrom(const ReviseNodeStateResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReviseNodeStateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:e8.ReviseNodeStateResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fnode_5fstate_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetCurrentRevisionEpochRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.GetCurrentRevisionEpochRequest) */ {
 public:
  GetCurrentRevisionEpochRequest();
  virtual ~GetCurrentRevisionEpochRequest();

  GetCurrentRevisionEpochRequest(const GetCurrentRevisionEpochRequest& from);

  inline GetCurrentRevisionEpochRequest& operator=(const GetCurrentRevisionEpochRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetCurrentRevisionEpochRequest(GetCurrentRevisionEpochRequest&& from) noexcept
    : GetCurrentRevisionEpochRequest() {
    *this = ::std::move(from);
  }

  inline GetCurrentRevisionEpochRequest& operator=(GetCurrentRevisionEpochRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCurrentRevisionEpochRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetCurrentRevisionEpochRequest* internal_default_instance() {
    return reinterpret_cast<const GetCurrentRevisionEpochRequest*>(
               &_GetCurrentRevisionEpochRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(GetCurrentRevisionEpochRequest* other);
  friend void swap(GetCurrentRevisionEpochRequest& a, GetCurrentRevisionEpochRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetCurrentRevisionEpochRequest* New() const final {
    return CreateMaybeMessage<GetCurrentRevisionEpochRequest>(NULL);
  }

  GetCurrentRevisionEpochRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetCurrentRevisionEpochRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetCurrentRevisionEpochRequest& from);
  void MergeFrom(const GetCurrentRevisionEpochRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetCurrentRevisionEpochRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:e8.GetCurrentRevisionEpochRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fnode_5fstate_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetCurrentRevisionEpochResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.GetCurrentRevisionEpochResponse) */ {
 public:
  GetCurrentRevisionEpochResponse();
  virtual ~GetCurrentRevisionEpochResponse();

  GetCurrentRevisionEpochResponse(const GetCurrentRevisionEpochResponse& from);

  inline GetCurrentRevisionEpochResponse& operator=(const GetCurrentRevisionEpochResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetCurrentRevisionEpochResponse(GetCurrentRevisionEpochResponse&& from) noexcept
    : GetCurrentRevisionEpochResponse() {
    *this = ::std::move(from);
  }

  inline GetCurrentRevisionEpochResponse& operator=(GetCurrentRevisionEpochResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCurrentRevisionEpochResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetCurrentRevisionEpochResponse* internal_default_instance() {
    return reinterpret_cast<const GetCurrentRevisionEpochResponse*>(
               &_GetCurrentRevisionEpochResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(GetCurrentRevisionEpochResponse* other);
  friend void swap(GetCurrentRevisionEpochResponse& a, GetCurrentRevisionEpochResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetCurrentRevisionEpochResponse* New() const final {
    return CreateMaybeMessage<GetCurrentRevisionEpochResponse>(NULL);
  }

  GetCurrentRevisionEpochResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetCurrentRevisionEpochResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetCurrentRevisionEpochResponse& from);
  void MergeFrom(const GetCurrentRevisionEpochResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetCurrentRevisionEpochResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 revision_epoch = 1;
  void clear_revision_epoch();
  static const int kRevisionEpochFieldNumber = 1;
  ::google::protobuf::int64 revision_epoch() const;
  void set_revision_epoch(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:e8.GetCurrentRevisionEpochResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 revision_epoch_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fnode_5fstate_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddPeersRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.AddPeersRequest) */ {
 public:
  AddPeersRequest();
  virtual ~AddPeersRequest();

  AddPeersRequest(const AddPeersRequest& from);

  inline AddPeersRequest& operator=(const AddPeersRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddPeersRequest(AddPeersRequest&& from) noexcept
    : AddPeersRequest() {
    *this = ::std::move(from);
  }

  inline AddPeersRequest& operator=(AddPeersRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddPeersRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddPeersRequest* internal_default_instance() {
    return reinterpret_cast<const AddPeersRequest*>(
               &_AddPeersRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(AddPeersRequest* other);
  friend void swap(AddPeersRequest& a, AddPeersRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddPeersRequest* New() const final {
    return CreateMaybeMessage<AddPeersRequest>(NULL);
  }

  AddPeersRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AddPeersRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AddPeersRequest& from);
  void MergeFrom(const AddPeersRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddPeersRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .e8.NodeState nodes = 1;
  int nodes_size() const;
  void clear_nodes();
  static const int kNodesFieldNumber = 1;
  ::e8::NodeState* mutable_nodes(int index);
  ::google::protobuf::RepeatedPtrField< ::e8::NodeState >*
      mutable_nodes();
  const ::e8::NodeState& nodes(int index) const;
  ::e8::NodeState* add_nodes();
  const ::google::protobuf::RepeatedPtrField< ::e8::NodeState >&
      nodes() const;

  // @@protoc_insertion_point(class_scope:e8.AddPeersRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::e8::NodeState > nodes_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fnode_5fstate_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddPeersResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.AddPeersResponse) */ {
 public:
  AddPeersResponse();
  virtual ~AddPeersResponse();

  AddPeersResponse(const AddPeersResponse& from);

  inline AddPeersResponse& operator=(const AddPeersResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddPeersResponse(AddPeersResponse&& from) noexcept
    : AddPeersResponse() {
    *this = ::std::move(from);
  }

  inline AddPeersResponse& operator=(AddPeersResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddPeersResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddPeersResponse* internal_default_instance() {
    return reinterpret_cast<const AddPeersResponse*>(
               &_AddPeersResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(AddPeersResponse* other);
  friend void swap(AddPeersResponse& a, AddPeersResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddPeersResponse* New() const final {
    return CreateMaybeMessage<AddPeersResponse>(NULL);
  }

  AddPeersResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AddPeersResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AddPeersResponse& from);
  void MergeFrom(const AddPeersResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddPeersResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:e8.AddPeersResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fnode_5fstate_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeletePeersRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.DeletePeersRequest) */ {
 public:
  DeletePeersRequest();
  virtual ~DeletePeersRequest();

  DeletePeersRequest(const DeletePeersRequest& from);

  inline DeletePeersRequest& operator=(const DeletePeersRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeletePeersRequest(DeletePeersRequest&& from) noexcept
    : DeletePeersRequest() {
    *this = ::std::move(from);
  }

  inline DeletePeersRequest& operator=(DeletePeersRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeletePeersRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeletePeersRequest* internal_default_instance() {
    return reinterpret_cast<const DeletePeersRequest*>(
               &_DeletePeersRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(DeletePeersRequest* other);
  friend void swap(DeletePeersRequest& a, DeletePeersRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeletePeersRequest* New() const final {
    return CreateMaybeMessage<DeletePeersRequest>(NULL);
  }

  DeletePeersRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeletePeersRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeletePeersRequest& from);
  void MergeFrom(const DeletePeersRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeletePeersRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string node_names = 1;
  int node_names_size() const;
  void clear_node_names();
  static const int kNodeNamesFieldNumber = 1;
  const ::std::string& node_names(int index) const;
  ::std::string* mutable_node_names(int index);
  void set_node_names(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_node_names(int index, ::std::string&& value);
  #endif
  void set_node_names(int index, const char* value);
  void set_node_names(int index, const char* value, size_t size);
  ::std::string* add_node_names();
  void add_node_names(const ::std::string& value);
  #if LANG_CXX11
  void add_node_names(::std::string&& value);
  #endif
  void add_node_names(const char* value);
  void add_node_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& node_names() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_node_names();

  // @@protoc_insertion_point(class_scope:e8.DeletePeersRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> node_names_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fnode_5fstate_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeletePeersResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.DeletePeersResponse) */ {
 public:
  DeletePeersResponse();
  virtual ~DeletePeersResponse();

  DeletePeersResponse(const DeletePeersResponse& from);

  inline DeletePeersResponse& operator=(const DeletePeersResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeletePeersResponse(DeletePeersResponse&& from) noexcept
    : DeletePeersResponse() {
    *this = ::std::move(from);
  }

  inline DeletePeersResponse& operator=(DeletePeersResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeletePeersResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeletePeersResponse* internal_default_instance() {
    return reinterpret_cast<const DeletePeersResponse*>(
               &_DeletePeersResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(DeletePeersResponse* other);
  friend void swap(DeletePeersResponse& a, DeletePeersResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeletePeersResponse* New() const final {
    return CreateMaybeMessage<DeletePeersResponse>(NULL);
  }

  DeletePeersResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeletePeersResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeletePeersResponse& from);
  void MergeFrom(const DeletePeersResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeletePeersResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:e8.DeletePeersResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fnode_5fstate_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ReviseNodeStateRequest

// repeated .e8.NodeStateRevision revisions = 1;
inline int ReviseNodeStateRequest::revisions_size() const {
  return revisions_.size();
}
inline ::e8::NodeStateRevision* ReviseNodeStateRequest::mutable_revisions(int index) {
  // @@protoc_insertion_point(field_mutable:e8.ReviseNodeStateRequest.revisions)
  return revisions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::e8::NodeStateRevision >*
ReviseNodeStateRequest::mutable_revisions() {
  // @@protoc_insertion_point(field_mutable_list:e8.ReviseNodeStateRequest.revisions)
  return &revisions_;
}
inline const ::e8::NodeStateRevision& ReviseNodeStateRequest::revisions(int index) const {
  // @@protoc_insertion_point(field_get:e8.ReviseNodeStateRequest.revisions)
  return revisions_.Get(index);
}
inline ::e8::NodeStateRevision* ReviseNodeStateRequest::add_revisions() {
  // @@protoc_insertion_point(field_add:e8.ReviseNodeStateRequest.revisions)
  return revisions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::e8::NodeStateRevision >&
ReviseNodeStateRequest::revisions() const {
  // @@protoc_insertion_point(field_list:e8.ReviseNodeStateRequest.revisions)
  return revisions_;
}

// -------------------------------------------------------------------

// ReviseNodeStateResponse

// -------------------------------------------------------------------

// GetCurrentRevisionEpochRequest

// -------------------------------------------------------------------

// GetCurrentRevisionEpochResponse

// int64 revision_epoch = 1;
inline void GetCurrentRevisionEpochResponse::clear_revision_epoch() {
  revision_epoch_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetCurrentRevisionEpochResponse::revision_epoch() const {
  // @@protoc_insertion_point(field_get:e8.GetCurrentRevisionEpochResponse.revision_epoch)
  return revision_epoch_;
}
inline void GetCurrentRevisionEpochResponse::set_revision_epoch(::google::protobuf::int64 value) {
  
  revision_epoch_ = value;
  // @@protoc_insertion_point(field_set:e8.GetCurrentRevisionEpochResponse.revision_epoch)
}

// -------------------------------------------------------------------

// AddPeersRequest

// repeated .e8.NodeState nodes = 1;
inline int AddPeersRequest::nodes_size() const {
  return nodes_.size();
}
inline ::e8::NodeState* AddPeersRequest::mutable_nodes(int index) {
  // @@protoc_insertion_point(field_mutable:e8.AddPeersRequest.nodes)
  return nodes_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::e8::NodeState >*
AddPeersRequest::mutable_nodes() {
  // @@protoc_insertion_point(field_mutable_list:e8.AddPeersRequest.nodes)
  return &nodes_;
}
inline const ::e8::NodeState& AddPeersRequest::nodes(int index) const {
  // @@protoc_insertion_point(field_get:e8.AddPeersRequest.nodes)
  return nodes_.Get(index);
}
inline ::e8::NodeState* AddPeersRequest::add_nodes() {
  // @@protoc_insertion_point(field_add:e8.AddPeersRequest.nodes)
  return nodes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::e8::NodeState >&
AddPeersRequest::nodes() const {
  // @@protoc_insertion_point(field_list:e8.AddPeersRequest.nodes)
  return nodes_;
}

// -------------------------------------------------------------------

// AddPeersResponse

// -------------------------------------------------------------------

// DeletePeersRequest

// repeated string node_names = 1;
inline int DeletePeersRequest::node_names_size() const {
  return node_names_.size();
}
inline void DeletePeersRequest::clear_node_names() {
  node_names_.Clear();
}
inline const ::std::string& DeletePeersRequest::node_names(int index) const {
  // @@protoc_insertion_point(field_get:e8.DeletePeersRequest.node_names)
  return node_names_.Get(index);
}
inline ::std::string* DeletePeersRequest::mutable_node_names(int index) {
  // @@protoc_insertion_point(field_mutable:e8.DeletePeersRequest.node_names)
  return node_names_.Mutable(index);
}
inline void DeletePeersRequest::set_node_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:e8.DeletePeersRequest.node_names)
  node_names_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void DeletePeersRequest::set_node_names(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:e8.DeletePeersRequest.node_names)
  node_names_.Mutable(index)->assign(std::move(value));
}
#endif
inline void DeletePeersRequest::set_node_names(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  node_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:e8.DeletePeersRequest.node_names)
}
inline void DeletePeersRequest::set_node_names(int index, const char* value, size_t size) {
  node_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:e8.DeletePeersRequest.node_names)
}
inline ::std::string* DeletePeersRequest::add_node_names() {
  // @@protoc_insertion_point(field_add_mutable:e8.DeletePeersRequest.node_names)
  return node_names_.Add();
}
inline void DeletePeersRequest::add_node_names(const ::std::string& value) {
  node_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:e8.DeletePeersRequest.node_names)
}
#if LANG_CXX11
inline void DeletePeersRequest::add_node_names(::std::string&& value) {
  node_names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:e8.DeletePeersRequest.node_names)
}
#endif
inline void DeletePeersRequest::add_node_names(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  node_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:e8.DeletePeersRequest.node_names)
}
inline void DeletePeersRequest::add_node_names(const char* value, size_t size) {
  node_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:e8.DeletePeersRequest.node_names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DeletePeersRequest::node_names() const {
  // @@protoc_insertion_point(field_list:e8.DeletePeersRequest.node_names)
  return node_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DeletePeersRequest::mutable_node_names() {
  // @@protoc_insertion_point(field_mutable_list:e8.DeletePeersRequest.node_names)
  return &node_names_;
}

// -------------------------------------------------------------------

// DeletePeersResponse

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace e8

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_service_5fnode_5fstate_2eproto
