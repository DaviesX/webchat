// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service_node_state.proto

#ifndef PROTOBUF_INCLUDED_service_5fnode_5fstate_2eproto
#define PROTOBUF_INCLUDED_service_5fnode_5fstate_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "node.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_service_5fnode_5fstate_2eproto 

namespace protobuf_service_5fnode_5fstate_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_service_5fnode_5fstate_2eproto
namespace e8 {
class UpdateNodeStateRequest;
class UpdateNodeStateRequestDefaultTypeInternal;
extern UpdateNodeStateRequestDefaultTypeInternal _UpdateNodeStateRequest_default_instance_;
class UpdateNodeStateResponse;
class UpdateNodeStateResponseDefaultTypeInternal;
extern UpdateNodeStateResponseDefaultTypeInternal _UpdateNodeStateResponse_default_instance_;
}  // namespace e8
namespace google {
namespace protobuf {
template<> ::e8::UpdateNodeStateRequest* Arena::CreateMaybeMessage<::e8::UpdateNodeStateRequest>(Arena*);
template<> ::e8::UpdateNodeStateResponse* Arena::CreateMaybeMessage<::e8::UpdateNodeStateResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace e8 {

// ===================================================================

class UpdateNodeStateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.UpdateNodeStateRequest) */ {
 public:
  UpdateNodeStateRequest();
  virtual ~UpdateNodeStateRequest();

  UpdateNodeStateRequest(const UpdateNodeStateRequest& from);

  inline UpdateNodeStateRequest& operator=(const UpdateNodeStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateNodeStateRequest(UpdateNodeStateRequest&& from) noexcept
    : UpdateNodeStateRequest() {
    *this = ::std::move(from);
  }

  inline UpdateNodeStateRequest& operator=(UpdateNodeStateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateNodeStateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateNodeStateRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateNodeStateRequest*>(
               &_UpdateNodeStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(UpdateNodeStateRequest* other);
  friend void swap(UpdateNodeStateRequest& a, UpdateNodeStateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateNodeStateRequest* New() const final {
    return CreateMaybeMessage<UpdateNodeStateRequest>(NULL);
  }

  UpdateNodeStateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateNodeStateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateNodeStateRequest& from);
  void MergeFrom(const UpdateNodeStateRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateNodeStateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .e8.NodeState nodes = 1;
  int nodes_size() const;
  void clear_nodes();
  static const int kNodesFieldNumber = 1;
  ::e8::NodeState* mutable_nodes(int index);
  ::google::protobuf::RepeatedPtrField< ::e8::NodeState >*
      mutable_nodes();
  const ::e8::NodeState& nodes(int index) const;
  ::e8::NodeState* add_nodes();
  const ::google::protobuf::RepeatedPtrField< ::e8::NodeState >&
      nodes() const;

  // @@protoc_insertion_point(class_scope:e8.UpdateNodeStateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::e8::NodeState > nodes_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fnode_5fstate_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateNodeStateResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.UpdateNodeStateResponse) */ {
 public:
  UpdateNodeStateResponse();
  virtual ~UpdateNodeStateResponse();

  UpdateNodeStateResponse(const UpdateNodeStateResponse& from);

  inline UpdateNodeStateResponse& operator=(const UpdateNodeStateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateNodeStateResponse(UpdateNodeStateResponse&& from) noexcept
    : UpdateNodeStateResponse() {
    *this = ::std::move(from);
  }

  inline UpdateNodeStateResponse& operator=(UpdateNodeStateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateNodeStateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateNodeStateResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateNodeStateResponse*>(
               &_UpdateNodeStateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(UpdateNodeStateResponse* other);
  friend void swap(UpdateNodeStateResponse& a, UpdateNodeStateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateNodeStateResponse* New() const final {
    return CreateMaybeMessage<UpdateNodeStateResponse>(NULL);
  }

  UpdateNodeStateResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateNodeStateResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateNodeStateResponse& from);
  void MergeFrom(const UpdateNodeStateResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateNodeStateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:e8.UpdateNodeStateResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fnode_5fstate_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UpdateNodeStateRequest

// repeated .e8.NodeState nodes = 1;
inline int UpdateNodeStateRequest::nodes_size() const {
  return nodes_.size();
}
inline ::e8::NodeState* UpdateNodeStateRequest::mutable_nodes(int index) {
  // @@protoc_insertion_point(field_mutable:e8.UpdateNodeStateRequest.nodes)
  return nodes_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::e8::NodeState >*
UpdateNodeStateRequest::mutable_nodes() {
  // @@protoc_insertion_point(field_mutable_list:e8.UpdateNodeStateRequest.nodes)
  return &nodes_;
}
inline const ::e8::NodeState& UpdateNodeStateRequest::nodes(int index) const {
  // @@protoc_insertion_point(field_get:e8.UpdateNodeStateRequest.nodes)
  return nodes_.Get(index);
}
inline ::e8::NodeState* UpdateNodeStateRequest::add_nodes() {
  // @@protoc_insertion_point(field_add:e8.UpdateNodeStateRequest.nodes)
  return nodes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::e8::NodeState >&
UpdateNodeStateRequest::nodes() const {
  // @@protoc_insertion_point(field_list:e8.UpdateNodeStateRequest.nodes)
  return nodes_;
}

// -------------------------------------------------------------------

// UpdateNodeStateResponse

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace e8

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_service_5fnode_5fstate_2eproto
