// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service_message_channel.proto

#ifndef PROTOBUF_INCLUDED_service_5fmessage_5fchannel_2eproto
#define PROTOBUF_INCLUDED_service_5fmessage_5fchannel_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "pagination.pb.h"
#include "nullable_primitives.pb.h"
#include "message_channel.pb.h"
#include "user_profile.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_service_5fmessage_5fchannel_2eproto 

namespace protobuf_service_5fmessage_5fchannel_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[14];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_service_5fmessage_5fchannel_2eproto
namespace e8 {
class AddUserToMessageChannelRequest;
class AddUserToMessageChannelRequestDefaultTypeInternal;
extern AddUserToMessageChannelRequestDefaultTypeInternal _AddUserToMessageChannelRequest_default_instance_;
class AddUserToMessageChannelResponse;
class AddUserToMessageChannelResponseDefaultTypeInternal;
extern AddUserToMessageChannelResponseDefaultTypeInternal _AddUserToMessageChannelResponse_default_instance_;
class CreateMessageChannelRequest;
class CreateMessageChannelRequestDefaultTypeInternal;
extern CreateMessageChannelRequestDefaultTypeInternal _CreateMessageChannelRequest_default_instance_;
class CreateMessageChannelResponse;
class CreateMessageChannelResponseDefaultTypeInternal;
extern CreateMessageChannelResponseDefaultTypeInternal _CreateMessageChannelResponse_default_instance_;
class GetJoinedInMessageChannelsRequest;
class GetJoinedInMessageChannelsRequestDefaultTypeInternal;
extern GetJoinedInMessageChannelsRequestDefaultTypeInternal _GetJoinedInMessageChannelsRequest_default_instance_;
class GetJoinedInMessageChannelsResponse;
class GetJoinedInMessageChannelsResponseDefaultTypeInternal;
extern GetJoinedInMessageChannelsResponseDefaultTypeInternal _GetJoinedInMessageChannelsResponse_default_instance_;
class GetJoinedInMessageChannelsResponse_AuxiliariesEntry_DoNotUse;
class GetJoinedInMessageChannelsResponse_AuxiliariesEntry_DoNotUseDefaultTypeInternal;
extern GetJoinedInMessageChannelsResponse_AuxiliariesEntry_DoNotUseDefaultTypeInternal _GetJoinedInMessageChannelsResponse_AuxiliariesEntry_DoNotUse_default_instance_;
class GetMessageChannelKeyRequest;
class GetMessageChannelKeyRequestDefaultTypeInternal;
extern GetMessageChannelKeyRequestDefaultTypeInternal _GetMessageChannelKeyRequest_default_instance_;
class GetMessageChannelKeyResponse;
class GetMessageChannelKeyResponseDefaultTypeInternal;
extern GetMessageChannelKeyResponseDefaultTypeInternal _GetMessageChannelKeyResponse_default_instance_;
class GetMessageChannelMembersRequest;
class GetMessageChannelMembersRequestDefaultTypeInternal;
extern GetMessageChannelMembersRequestDefaultTypeInternal _GetMessageChannelMembersRequest_default_instance_;
class GetMessageChannelMembersResponse;
class GetMessageChannelMembersResponseDefaultTypeInternal;
extern GetMessageChannelMembersResponseDefaultTypeInternal _GetMessageChannelMembersResponse_default_instance_;
class LeaveMessageChannelRequest;
class LeaveMessageChannelRequestDefaultTypeInternal;
extern LeaveMessageChannelRequestDefaultTypeInternal _LeaveMessageChannelRequest_default_instance_;
class LeaveMessageChannelResponse;
class LeaveMessageChannelResponseDefaultTypeInternal;
extern LeaveMessageChannelResponseDefaultTypeInternal _LeaveMessageChannelResponse_default_instance_;
class MessageChannelAuxiliaries;
class MessageChannelAuxiliariesDefaultTypeInternal;
extern MessageChannelAuxiliariesDefaultTypeInternal _MessageChannelAuxiliaries_default_instance_;
}  // namespace e8
namespace google {
namespace protobuf {
template<> ::e8::AddUserToMessageChannelRequest* Arena::CreateMaybeMessage<::e8::AddUserToMessageChannelRequest>(Arena*);
template<> ::e8::AddUserToMessageChannelResponse* Arena::CreateMaybeMessage<::e8::AddUserToMessageChannelResponse>(Arena*);
template<> ::e8::CreateMessageChannelRequest* Arena::CreateMaybeMessage<::e8::CreateMessageChannelRequest>(Arena*);
template<> ::e8::CreateMessageChannelResponse* Arena::CreateMaybeMessage<::e8::CreateMessageChannelResponse>(Arena*);
template<> ::e8::GetJoinedInMessageChannelsRequest* Arena::CreateMaybeMessage<::e8::GetJoinedInMessageChannelsRequest>(Arena*);
template<> ::e8::GetJoinedInMessageChannelsResponse* Arena::CreateMaybeMessage<::e8::GetJoinedInMessageChannelsResponse>(Arena*);
template<> ::e8::GetJoinedInMessageChannelsResponse_AuxiliariesEntry_DoNotUse* Arena::CreateMaybeMessage<::e8::GetJoinedInMessageChannelsResponse_AuxiliariesEntry_DoNotUse>(Arena*);
template<> ::e8::GetMessageChannelKeyRequest* Arena::CreateMaybeMessage<::e8::GetMessageChannelKeyRequest>(Arena*);
template<> ::e8::GetMessageChannelKeyResponse* Arena::CreateMaybeMessage<::e8::GetMessageChannelKeyResponse>(Arena*);
template<> ::e8::GetMessageChannelMembersRequest* Arena::CreateMaybeMessage<::e8::GetMessageChannelMembersRequest>(Arena*);
template<> ::e8::GetMessageChannelMembersResponse* Arena::CreateMaybeMessage<::e8::GetMessageChannelMembersResponse>(Arena*);
template<> ::e8::LeaveMessageChannelRequest* Arena::CreateMaybeMessage<::e8::LeaveMessageChannelRequest>(Arena*);
template<> ::e8::LeaveMessageChannelResponse* Arena::CreateMaybeMessage<::e8::LeaveMessageChannelResponse>(Arena*);
template<> ::e8::MessageChannelAuxiliaries* Arena::CreateMaybeMessage<::e8::MessageChannelAuxiliaries>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace e8 {

// ===================================================================

class CreateMessageChannelRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.CreateMessageChannelRequest) */ {
 public:
  CreateMessageChannelRequest();
  virtual ~CreateMessageChannelRequest();

  CreateMessageChannelRequest(const CreateMessageChannelRequest& from);

  inline CreateMessageChannelRequest& operator=(const CreateMessageChannelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateMessageChannelRequest(CreateMessageChannelRequest&& from) noexcept
    : CreateMessageChannelRequest() {
    *this = ::std::move(from);
  }

  inline CreateMessageChannelRequest& operator=(CreateMessageChannelRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateMessageChannelRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateMessageChannelRequest* internal_default_instance() {
    return reinterpret_cast<const CreateMessageChannelRequest*>(
               &_CreateMessageChannelRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CreateMessageChannelRequest* other);
  friend void swap(CreateMessageChannelRequest& a, CreateMessageChannelRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateMessageChannelRequest* New() const final {
    return CreateMaybeMessage<CreateMessageChannelRequest>(NULL);
  }

  CreateMessageChannelRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateMessageChannelRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateMessageChannelRequest& from);
  void MergeFrom(const CreateMessageChannelRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateMessageChannelRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .e8.NullableString title = 3;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 3;
  private:
  const ::e8::NullableString& _internal_title() const;
  public:
  const ::e8::NullableString& title() const;
  ::e8::NullableString* release_title();
  ::e8::NullableString* mutable_title();
  void set_allocated_title(::e8::NullableString* title);

  // .e8.NullableString description = 4;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 4;
  private:
  const ::e8::NullableString& _internal_description() const;
  public:
  const ::e8::NullableString& description() const;
  ::e8::NullableString* release_description();
  ::e8::NullableString* mutable_description();
  void set_allocated_description(::e8::NullableString* description);

  // int64 member_ids = 5;
  void clear_member_ids();
  static const int kMemberIdsFieldNumber = 5;
  ::google::protobuf::int64 member_ids() const;
  void set_member_ids(::google::protobuf::int64 value);

  // bool encrypted = 1;
  void clear_encrypted();
  static const int kEncryptedFieldNumber = 1;
  bool encrypted() const;
  void set_encrypted(bool value);

  // bool close_group_channel = 2;
  void clear_close_group_channel();
  static const int kCloseGroupChannelFieldNumber = 2;
  bool close_group_channel() const;
  void set_close_group_channel(bool value);

  // @@protoc_insertion_point(class_scope:e8.CreateMessageChannelRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::e8::NullableString* title_;
  ::e8::NullableString* description_;
  ::google::protobuf::int64 member_ids_;
  bool encrypted_;
  bool close_group_channel_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fmessage_5fchannel_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateMessageChannelResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.CreateMessageChannelResponse) */ {
 public:
  CreateMessageChannelResponse();
  virtual ~CreateMessageChannelResponse();

  CreateMessageChannelResponse(const CreateMessageChannelResponse& from);

  inline CreateMessageChannelResponse& operator=(const CreateMessageChannelResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateMessageChannelResponse(CreateMessageChannelResponse&& from) noexcept
    : CreateMessageChannelResponse() {
    *this = ::std::move(from);
  }

  inline CreateMessageChannelResponse& operator=(CreateMessageChannelResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateMessageChannelResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateMessageChannelResponse* internal_default_instance() {
    return reinterpret_cast<const CreateMessageChannelResponse*>(
               &_CreateMessageChannelResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CreateMessageChannelResponse* other);
  friend void swap(CreateMessageChannelResponse& a, CreateMessageChannelResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateMessageChannelResponse* New() const final {
    return CreateMaybeMessage<CreateMessageChannelResponse>(NULL);
  }

  CreateMessageChannelResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateMessageChannelResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateMessageChannelResponse& from);
  void MergeFrom(const CreateMessageChannelResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateMessageChannelResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 channel_id = 1;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 1;
  ::google::protobuf::int64 channel_id() const;
  void set_channel_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:e8.CreateMessageChannelResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 channel_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fmessage_5fchannel_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddUserToMessageChannelRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.AddUserToMessageChannelRequest) */ {
 public:
  AddUserToMessageChannelRequest();
  virtual ~AddUserToMessageChannelRequest();

  AddUserToMessageChannelRequest(const AddUserToMessageChannelRequest& from);

  inline AddUserToMessageChannelRequest& operator=(const AddUserToMessageChannelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddUserToMessageChannelRequest(AddUserToMessageChannelRequest&& from) noexcept
    : AddUserToMessageChannelRequest() {
    *this = ::std::move(from);
  }

  inline AddUserToMessageChannelRequest& operator=(AddUserToMessageChannelRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddUserToMessageChannelRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddUserToMessageChannelRequest* internal_default_instance() {
    return reinterpret_cast<const AddUserToMessageChannelRequest*>(
               &_AddUserToMessageChannelRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(AddUserToMessageChannelRequest* other);
  friend void swap(AddUserToMessageChannelRequest& a, AddUserToMessageChannelRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddUserToMessageChannelRequest* New() const final {
    return CreateMaybeMessage<AddUserToMessageChannelRequest>(NULL);
  }

  AddUserToMessageChannelRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AddUserToMessageChannelRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AddUserToMessageChannelRequest& from);
  void MergeFrom(const AddUserToMessageChannelRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddUserToMessageChannelRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 channel_id = 1;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 1;
  ::google::protobuf::int64 channel_id() const;
  void set_channel_id(::google::protobuf::int64 value);

  // int64 user_id = 2;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  ::google::protobuf::int64 user_id() const;
  void set_user_id(::google::protobuf::int64 value);

  // .e8.MessageChannelMemberType member_type = 3;
  void clear_member_type();
  static const int kMemberTypeFieldNumber = 3;
  ::e8::MessageChannelMemberType member_type() const;
  void set_member_type(::e8::MessageChannelMemberType value);

  // @@protoc_insertion_point(class_scope:e8.AddUserToMessageChannelRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 channel_id_;
  ::google::protobuf::int64 user_id_;
  int member_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fmessage_5fchannel_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddUserToMessageChannelResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.AddUserToMessageChannelResponse) */ {
 public:
  AddUserToMessageChannelResponse();
  virtual ~AddUserToMessageChannelResponse();

  AddUserToMessageChannelResponse(const AddUserToMessageChannelResponse& from);

  inline AddUserToMessageChannelResponse& operator=(const AddUserToMessageChannelResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddUserToMessageChannelResponse(AddUserToMessageChannelResponse&& from) noexcept
    : AddUserToMessageChannelResponse() {
    *this = ::std::move(from);
  }

  inline AddUserToMessageChannelResponse& operator=(AddUserToMessageChannelResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddUserToMessageChannelResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddUserToMessageChannelResponse* internal_default_instance() {
    return reinterpret_cast<const AddUserToMessageChannelResponse*>(
               &_AddUserToMessageChannelResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(AddUserToMessageChannelResponse* other);
  friend void swap(AddUserToMessageChannelResponse& a, AddUserToMessageChannelResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddUserToMessageChannelResponse* New() const final {
    return CreateMaybeMessage<AddUserToMessageChannelResponse>(NULL);
  }

  AddUserToMessageChannelResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AddUserToMessageChannelResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AddUserToMessageChannelResponse& from);
  void MergeFrom(const AddUserToMessageChannelResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddUserToMessageChannelResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:e8.AddUserToMessageChannelResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fmessage_5fchannel_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetMessageChannelKeyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.GetMessageChannelKeyRequest) */ {
 public:
  GetMessageChannelKeyRequest();
  virtual ~GetMessageChannelKeyRequest();

  GetMessageChannelKeyRequest(const GetMessageChannelKeyRequest& from);

  inline GetMessageChannelKeyRequest& operator=(const GetMessageChannelKeyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetMessageChannelKeyRequest(GetMessageChannelKeyRequest&& from) noexcept
    : GetMessageChannelKeyRequest() {
    *this = ::std::move(from);
  }

  inline GetMessageChannelKeyRequest& operator=(GetMessageChannelKeyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMessageChannelKeyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetMessageChannelKeyRequest* internal_default_instance() {
    return reinterpret_cast<const GetMessageChannelKeyRequest*>(
               &_GetMessageChannelKeyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(GetMessageChannelKeyRequest* other);
  friend void swap(GetMessageChannelKeyRequest& a, GetMessageChannelKeyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetMessageChannelKeyRequest* New() const final {
    return CreateMaybeMessage<GetMessageChannelKeyRequest>(NULL);
  }

  GetMessageChannelKeyRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetMessageChannelKeyRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetMessageChannelKeyRequest& from);
  void MergeFrom(const GetMessageChannelKeyRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetMessageChannelKeyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 channel_id = 1;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 1;
  ::google::protobuf::int64 channel_id() const;
  void set_channel_id(::google::protobuf::int64 value);

  // int32 timeout_secs = 2;
  void clear_timeout_secs();
  static const int kTimeoutSecsFieldNumber = 2;
  ::google::protobuf::int32 timeout_secs() const;
  void set_timeout_secs(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:e8.GetMessageChannelKeyRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 channel_id_;
  ::google::protobuf::int32 timeout_secs_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fmessage_5fchannel_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetMessageChannelKeyResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.GetMessageChannelKeyResponse) */ {
 public:
  GetMessageChannelKeyResponse();
  virtual ~GetMessageChannelKeyResponse();

  GetMessageChannelKeyResponse(const GetMessageChannelKeyResponse& from);

  inline GetMessageChannelKeyResponse& operator=(const GetMessageChannelKeyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetMessageChannelKeyResponse(GetMessageChannelKeyResponse&& from) noexcept
    : GetMessageChannelKeyResponse() {
    *this = ::std::move(from);
  }

  inline GetMessageChannelKeyResponse& operator=(GetMessageChannelKeyResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMessageChannelKeyResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetMessageChannelKeyResponse* internal_default_instance() {
    return reinterpret_cast<const GetMessageChannelKeyResponse*>(
               &_GetMessageChannelKeyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(GetMessageChannelKeyResponse* other);
  friend void swap(GetMessageChannelKeyResponse& a, GetMessageChannelKeyResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetMessageChannelKeyResponse* New() const final {
    return CreateMaybeMessage<GetMessageChannelKeyResponse>(NULL);
  }

  GetMessageChannelKeyResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetMessageChannelKeyResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetMessageChannelKeyResponse& from);
  void MergeFrom(const GetMessageChannelKeyResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetMessageChannelKeyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string channel_key = 3;
  void clear_channel_key();
  static const int kChannelKeyFieldNumber = 3;
  const ::std::string& channel_key() const;
  void set_channel_key(const ::std::string& value);
  #if LANG_CXX11
  void set_channel_key(::std::string&& value);
  #endif
  void set_channel_key(const char* value);
  void set_channel_key(const char* value, size_t size);
  ::std::string* mutable_channel_key();
  ::std::string* release_channel_key();
  void set_allocated_channel_key(::std::string* channel_key);

  // @@protoc_insertion_point(class_scope:e8.GetMessageChannelKeyResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr channel_key_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fmessage_5fchannel_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LeaveMessageChannelRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.LeaveMessageChannelRequest) */ {
 public:
  LeaveMessageChannelRequest();
  virtual ~LeaveMessageChannelRequest();

  LeaveMessageChannelRequest(const LeaveMessageChannelRequest& from);

  inline LeaveMessageChannelRequest& operator=(const LeaveMessageChannelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LeaveMessageChannelRequest(LeaveMessageChannelRequest&& from) noexcept
    : LeaveMessageChannelRequest() {
    *this = ::std::move(from);
  }

  inline LeaveMessageChannelRequest& operator=(LeaveMessageChannelRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaveMessageChannelRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LeaveMessageChannelRequest* internal_default_instance() {
    return reinterpret_cast<const LeaveMessageChannelRequest*>(
               &_LeaveMessageChannelRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(LeaveMessageChannelRequest* other);
  friend void swap(LeaveMessageChannelRequest& a, LeaveMessageChannelRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LeaveMessageChannelRequest* New() const final {
    return CreateMaybeMessage<LeaveMessageChannelRequest>(NULL);
  }

  LeaveMessageChannelRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LeaveMessageChannelRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LeaveMessageChannelRequest& from);
  void MergeFrom(const LeaveMessageChannelRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LeaveMessageChannelRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 channel_id = 1;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 1;
  ::google::protobuf::int64 channel_id() const;
  void set_channel_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:e8.LeaveMessageChannelRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 channel_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fmessage_5fchannel_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LeaveMessageChannelResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.LeaveMessageChannelResponse) */ {
 public:
  LeaveMessageChannelResponse();
  virtual ~LeaveMessageChannelResponse();

  LeaveMessageChannelResponse(const LeaveMessageChannelResponse& from);

  inline LeaveMessageChannelResponse& operator=(const LeaveMessageChannelResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LeaveMessageChannelResponse(LeaveMessageChannelResponse&& from) noexcept
    : LeaveMessageChannelResponse() {
    *this = ::std::move(from);
  }

  inline LeaveMessageChannelResponse& operator=(LeaveMessageChannelResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaveMessageChannelResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LeaveMessageChannelResponse* internal_default_instance() {
    return reinterpret_cast<const LeaveMessageChannelResponse*>(
               &_LeaveMessageChannelResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(LeaveMessageChannelResponse* other);
  friend void swap(LeaveMessageChannelResponse& a, LeaveMessageChannelResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LeaveMessageChannelResponse* New() const final {
    return CreateMaybeMessage<LeaveMessageChannelResponse>(NULL);
  }

  LeaveMessageChannelResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LeaveMessageChannelResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LeaveMessageChannelResponse& from);
  void MergeFrom(const LeaveMessageChannelResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LeaveMessageChannelResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:e8.LeaveMessageChannelResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fmessage_5fchannel_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetJoinedInMessageChannelsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.GetJoinedInMessageChannelsRequest) */ {
 public:
  GetJoinedInMessageChannelsRequest();
  virtual ~GetJoinedInMessageChannelsRequest();

  GetJoinedInMessageChannelsRequest(const GetJoinedInMessageChannelsRequest& from);

  inline GetJoinedInMessageChannelsRequest& operator=(const GetJoinedInMessageChannelsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetJoinedInMessageChannelsRequest(GetJoinedInMessageChannelsRequest&& from) noexcept
    : GetJoinedInMessageChannelsRequest() {
    *this = ::std::move(from);
  }

  inline GetJoinedInMessageChannelsRequest& operator=(GetJoinedInMessageChannelsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetJoinedInMessageChannelsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetJoinedInMessageChannelsRequest* internal_default_instance() {
    return reinterpret_cast<const GetJoinedInMessageChannelsRequest*>(
               &_GetJoinedInMessageChannelsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(GetJoinedInMessageChannelsRequest* other);
  friend void swap(GetJoinedInMessageChannelsRequest& a, GetJoinedInMessageChannelsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetJoinedInMessageChannelsRequest* New() const final {
    return CreateMaybeMessage<GetJoinedInMessageChannelsRequest>(NULL);
  }

  GetJoinedInMessageChannelsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetJoinedInMessageChannelsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetJoinedInMessageChannelsRequest& from);
  void MergeFrom(const GetJoinedInMessageChannelsRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetJoinedInMessageChannelsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 with_member_ids = 2;
  int with_member_ids_size() const;
  void clear_with_member_ids();
  static const int kWithMemberIdsFieldNumber = 2;
  ::google::protobuf::int64 with_member_ids(int index) const;
  void set_with_member_ids(int index, ::google::protobuf::int64 value);
  void add_with_member_ids(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      with_member_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_with_member_ids();

  // .e8.Pagination pagination = 1;
  bool has_pagination() const;
  void clear_pagination();
  static const int kPaginationFieldNumber = 1;
  private:
  const ::e8::Pagination& _internal_pagination() const;
  public:
  const ::e8::Pagination& pagination() const;
  ::e8::Pagination* release_pagination();
  ::e8::Pagination* mutable_pagination();
  void set_allocated_pagination(::e8::Pagination* pagination);

  // int32 fetch_num_active_users = 3;
  void clear_fetch_num_active_users();
  static const int kFetchNumActiveUsersFieldNumber = 3;
  ::google::protobuf::int32 fetch_num_active_users() const;
  void set_fetch_num_active_users(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:e8.GetJoinedInMessageChannelsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > with_member_ids_;
  mutable int _with_member_ids_cached_byte_size_;
  ::e8::Pagination* pagination_;
  ::google::protobuf::int32 fetch_num_active_users_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fmessage_5fchannel_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MessageChannelAuxiliaries : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.MessageChannelAuxiliaries) */ {
 public:
  MessageChannelAuxiliaries();
  virtual ~MessageChannelAuxiliaries();

  MessageChannelAuxiliaries(const MessageChannelAuxiliaries& from);

  inline MessageChannelAuxiliaries& operator=(const MessageChannelAuxiliaries& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageChannelAuxiliaries(MessageChannelAuxiliaries&& from) noexcept
    : MessageChannelAuxiliaries() {
    *this = ::std::move(from);
  }

  inline MessageChannelAuxiliaries& operator=(MessageChannelAuxiliaries&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageChannelAuxiliaries& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageChannelAuxiliaries* internal_default_instance() {
    return reinterpret_cast<const MessageChannelAuxiliaries*>(
               &_MessageChannelAuxiliaries_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(MessageChannelAuxiliaries* other);
  friend void swap(MessageChannelAuxiliaries& a, MessageChannelAuxiliaries& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageChannelAuxiliaries* New() const final {
    return CreateMaybeMessage<MessageChannelAuxiliaries>(NULL);
  }

  MessageChannelAuxiliaries* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MessageChannelAuxiliaries>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MessageChannelAuxiliaries& from);
  void MergeFrom(const MessageChannelAuxiliaries& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageChannelAuxiliaries* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .e8.UserPublicProfile most_active_users = 2;
  int most_active_users_size() const;
  void clear_most_active_users();
  static const int kMostActiveUsersFieldNumber = 2;
  ::e8::UserPublicProfile* mutable_most_active_users(int index);
  ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile >*
      mutable_most_active_users();
  const ::e8::UserPublicProfile& most_active_users(int index) const;
  ::e8::UserPublicProfile* add_most_active_users();
  const ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile >&
      most_active_users() const;

  // int64 channel_last_interacted_at = 1;
  void clear_channel_last_interacted_at();
  static const int kChannelLastInteractedAtFieldNumber = 1;
  ::google::protobuf::int64 channel_last_interacted_at() const;
  void set_channel_last_interacted_at(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:e8.MessageChannelAuxiliaries)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile > most_active_users_;
  ::google::protobuf::int64 channel_last_interacted_at_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fmessage_5fchannel_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetJoinedInMessageChannelsResponse_AuxiliariesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<GetJoinedInMessageChannelsResponse_AuxiliariesEntry_DoNotUse, 
    ::google::protobuf::int64, ::e8::MessageChannelAuxiliaries,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<GetJoinedInMessageChannelsResponse_AuxiliariesEntry_DoNotUse, 
    ::google::protobuf::int64, ::e8::MessageChannelAuxiliaries,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  GetJoinedInMessageChannelsResponse_AuxiliariesEntry_DoNotUse();
  GetJoinedInMessageChannelsResponse_AuxiliariesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GetJoinedInMessageChannelsResponse_AuxiliariesEntry_DoNotUse& other);
  static const GetJoinedInMessageChannelsResponse_AuxiliariesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetJoinedInMessageChannelsResponse_AuxiliariesEntry_DoNotUse*>(&_GetJoinedInMessageChannelsResponse_AuxiliariesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class GetJoinedInMessageChannelsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.GetJoinedInMessageChannelsResponse) */ {
 public:
  GetJoinedInMessageChannelsResponse();
  virtual ~GetJoinedInMessageChannelsResponse();

  GetJoinedInMessageChannelsResponse(const GetJoinedInMessageChannelsResponse& from);

  inline GetJoinedInMessageChannelsResponse& operator=(const GetJoinedInMessageChannelsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetJoinedInMessageChannelsResponse(GetJoinedInMessageChannelsResponse&& from) noexcept
    : GetJoinedInMessageChannelsResponse() {
    *this = ::std::move(from);
  }

  inline GetJoinedInMessageChannelsResponse& operator=(GetJoinedInMessageChannelsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetJoinedInMessageChannelsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetJoinedInMessageChannelsResponse* internal_default_instance() {
    return reinterpret_cast<const GetJoinedInMessageChannelsResponse*>(
               &_GetJoinedInMessageChannelsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(GetJoinedInMessageChannelsResponse* other);
  friend void swap(GetJoinedInMessageChannelsResponse& a, GetJoinedInMessageChannelsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetJoinedInMessageChannelsResponse* New() const final {
    return CreateMaybeMessage<GetJoinedInMessageChannelsResponse>(NULL);
  }

  GetJoinedInMessageChannelsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetJoinedInMessageChannelsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetJoinedInMessageChannelsResponse& from);
  void MergeFrom(const GetJoinedInMessageChannelsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetJoinedInMessageChannelsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated .e8.MessageChannel channels = 1;
  int channels_size() const;
  void clear_channels();
  static const int kChannelsFieldNumber = 1;
  ::e8::MessageChannel* mutable_channels(int index);
  ::google::protobuf::RepeatedPtrField< ::e8::MessageChannel >*
      mutable_channels();
  const ::e8::MessageChannel& channels(int index) const;
  ::e8::MessageChannel* add_channels();
  const ::google::protobuf::RepeatedPtrField< ::e8::MessageChannel >&
      channels() const;

  // map<int64, .e8.MessageChannelAuxiliaries> auxiliaries = 2;
  int auxiliaries_size() const;
  void clear_auxiliaries();
  static const int kAuxiliariesFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::int64, ::e8::MessageChannelAuxiliaries >&
      auxiliaries() const;
  ::google::protobuf::Map< ::google::protobuf::int64, ::e8::MessageChannelAuxiliaries >*
      mutable_auxiliaries();

  // @@protoc_insertion_point(class_scope:e8.GetJoinedInMessageChannelsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::e8::MessageChannel > channels_;
  ::google::protobuf::internal::MapField<
      GetJoinedInMessageChannelsResponse_AuxiliariesEntry_DoNotUse,
      ::google::protobuf::int64, ::e8::MessageChannelAuxiliaries,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > auxiliaries_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fmessage_5fchannel_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetMessageChannelMembersRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.GetMessageChannelMembersRequest) */ {
 public:
  GetMessageChannelMembersRequest();
  virtual ~GetMessageChannelMembersRequest();

  GetMessageChannelMembersRequest(const GetMessageChannelMembersRequest& from);

  inline GetMessageChannelMembersRequest& operator=(const GetMessageChannelMembersRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetMessageChannelMembersRequest(GetMessageChannelMembersRequest&& from) noexcept
    : GetMessageChannelMembersRequest() {
    *this = ::std::move(from);
  }

  inline GetMessageChannelMembersRequest& operator=(GetMessageChannelMembersRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMessageChannelMembersRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetMessageChannelMembersRequest* internal_default_instance() {
    return reinterpret_cast<const GetMessageChannelMembersRequest*>(
               &_GetMessageChannelMembersRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(GetMessageChannelMembersRequest* other);
  friend void swap(GetMessageChannelMembersRequest& a, GetMessageChannelMembersRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetMessageChannelMembersRequest* New() const final {
    return CreateMaybeMessage<GetMessageChannelMembersRequest>(NULL);
  }

  GetMessageChannelMembersRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetMessageChannelMembersRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetMessageChannelMembersRequest& from);
  void MergeFrom(const GetMessageChannelMembersRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetMessageChannelMembersRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .e8.Pagination pagination = 2;
  bool has_pagination() const;
  void clear_pagination();
  static const int kPaginationFieldNumber = 2;
  private:
  const ::e8::Pagination& _internal_pagination() const;
  public:
  const ::e8::Pagination& pagination() const;
  ::e8::Pagination* release_pagination();
  ::e8::Pagination* mutable_pagination();
  void set_allocated_pagination(::e8::Pagination* pagination);

  // int64 channel_id = 1;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 1;
  ::google::protobuf::int64 channel_id() const;
  void set_channel_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:e8.GetMessageChannelMembersRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::e8::Pagination* pagination_;
  ::google::protobuf::int64 channel_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fmessage_5fchannel_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetMessageChannelMembersResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.GetMessageChannelMembersResponse) */ {
 public:
  GetMessageChannelMembersResponse();
  virtual ~GetMessageChannelMembersResponse();

  GetMessageChannelMembersResponse(const GetMessageChannelMembersResponse& from);

  inline GetMessageChannelMembersResponse& operator=(const GetMessageChannelMembersResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetMessageChannelMembersResponse(GetMessageChannelMembersResponse&& from) noexcept
    : GetMessageChannelMembersResponse() {
    *this = ::std::move(from);
  }

  inline GetMessageChannelMembersResponse& operator=(GetMessageChannelMembersResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMessageChannelMembersResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetMessageChannelMembersResponse* internal_default_instance() {
    return reinterpret_cast<const GetMessageChannelMembersResponse*>(
               &_GetMessageChannelMembersResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(GetMessageChannelMembersResponse* other);
  friend void swap(GetMessageChannelMembersResponse& a, GetMessageChannelMembersResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetMessageChannelMembersResponse* New() const final {
    return CreateMaybeMessage<GetMessageChannelMembersResponse>(NULL);
  }

  GetMessageChannelMembersResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetMessageChannelMembersResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetMessageChannelMembersResponse& from);
  void MergeFrom(const GetMessageChannelMembersResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetMessageChannelMembersResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .e8.UserPublicProfile user_profiles = 1;
  int user_profiles_size() const;
  void clear_user_profiles();
  static const int kUserProfilesFieldNumber = 1;
  ::e8::UserPublicProfile* mutable_user_profiles(int index);
  ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile >*
      mutable_user_profiles();
  const ::e8::UserPublicProfile& user_profiles(int index) const;
  ::e8::UserPublicProfile* add_user_profiles();
  const ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile >&
      user_profiles() const;

  // repeated .e8.MessageChannelRelation channel_relations = 2;
  int channel_relations_size() const;
  void clear_channel_relations();
  static const int kChannelRelationsFieldNumber = 2;
  ::e8::MessageChannelRelation* mutable_channel_relations(int index);
  ::google::protobuf::RepeatedPtrField< ::e8::MessageChannelRelation >*
      mutable_channel_relations();
  const ::e8::MessageChannelRelation& channel_relations(int index) const;
  ::e8::MessageChannelRelation* add_channel_relations();
  const ::google::protobuf::RepeatedPtrField< ::e8::MessageChannelRelation >&
      channel_relations() const;

  // @@protoc_insertion_point(class_scope:e8.GetMessageChannelMembersResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile > user_profiles_;
  ::google::protobuf::RepeatedPtrField< ::e8::MessageChannelRelation > channel_relations_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fmessage_5fchannel_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CreateMessageChannelRequest

// bool encrypted = 1;
inline void CreateMessageChannelRequest::clear_encrypted() {
  encrypted_ = false;
}
inline bool CreateMessageChannelRequest::encrypted() const {
  // @@protoc_insertion_point(field_get:e8.CreateMessageChannelRequest.encrypted)
  return encrypted_;
}
inline void CreateMessageChannelRequest::set_encrypted(bool value) {
  
  encrypted_ = value;
  // @@protoc_insertion_point(field_set:e8.CreateMessageChannelRequest.encrypted)
}

// bool close_group_channel = 2;
inline void CreateMessageChannelRequest::clear_close_group_channel() {
  close_group_channel_ = false;
}
inline bool CreateMessageChannelRequest::close_group_channel() const {
  // @@protoc_insertion_point(field_get:e8.CreateMessageChannelRequest.close_group_channel)
  return close_group_channel_;
}
inline void CreateMessageChannelRequest::set_close_group_channel(bool value) {
  
  close_group_channel_ = value;
  // @@protoc_insertion_point(field_set:e8.CreateMessageChannelRequest.close_group_channel)
}

// .e8.NullableString title = 3;
inline bool CreateMessageChannelRequest::has_title() const {
  return this != internal_default_instance() && title_ != NULL;
}
inline const ::e8::NullableString& CreateMessageChannelRequest::_internal_title() const {
  return *title_;
}
inline const ::e8::NullableString& CreateMessageChannelRequest::title() const {
  const ::e8::NullableString* p = title_;
  // @@protoc_insertion_point(field_get:e8.CreateMessageChannelRequest.title)
  return p != NULL ? *p : *reinterpret_cast<const ::e8::NullableString*>(
      &::e8::_NullableString_default_instance_);
}
inline ::e8::NullableString* CreateMessageChannelRequest::release_title() {
  // @@protoc_insertion_point(field_release:e8.CreateMessageChannelRequest.title)
  
  ::e8::NullableString* temp = title_;
  title_ = NULL;
  return temp;
}
inline ::e8::NullableString* CreateMessageChannelRequest::mutable_title() {
  
  if (title_ == NULL) {
    auto* p = CreateMaybeMessage<::e8::NullableString>(GetArenaNoVirtual());
    title_ = p;
  }
  // @@protoc_insertion_point(field_mutable:e8.CreateMessageChannelRequest.title)
  return title_;
}
inline void CreateMessageChannelRequest::set_allocated_title(::e8::NullableString* title) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(title_);
  }
  if (title) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      title = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, title, submessage_arena);
    }
    
  } else {
    
  }
  title_ = title;
  // @@protoc_insertion_point(field_set_allocated:e8.CreateMessageChannelRequest.title)
}

// .e8.NullableString description = 4;
inline bool CreateMessageChannelRequest::has_description() const {
  return this != internal_default_instance() && description_ != NULL;
}
inline const ::e8::NullableString& CreateMessageChannelRequest::_internal_description() const {
  return *description_;
}
inline const ::e8::NullableString& CreateMessageChannelRequest::description() const {
  const ::e8::NullableString* p = description_;
  // @@protoc_insertion_point(field_get:e8.CreateMessageChannelRequest.description)
  return p != NULL ? *p : *reinterpret_cast<const ::e8::NullableString*>(
      &::e8::_NullableString_default_instance_);
}
inline ::e8::NullableString* CreateMessageChannelRequest::release_description() {
  // @@protoc_insertion_point(field_release:e8.CreateMessageChannelRequest.description)
  
  ::e8::NullableString* temp = description_;
  description_ = NULL;
  return temp;
}
inline ::e8::NullableString* CreateMessageChannelRequest::mutable_description() {
  
  if (description_ == NULL) {
    auto* p = CreateMaybeMessage<::e8::NullableString>(GetArenaNoVirtual());
    description_ = p;
  }
  // @@protoc_insertion_point(field_mutable:e8.CreateMessageChannelRequest.description)
  return description_;
}
inline void CreateMessageChannelRequest::set_allocated_description(::e8::NullableString* description) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(description_);
  }
  if (description) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      description = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, description, submessage_arena);
    }
    
  } else {
    
  }
  description_ = description;
  // @@protoc_insertion_point(field_set_allocated:e8.CreateMessageChannelRequest.description)
}

// int64 member_ids = 5;
inline void CreateMessageChannelRequest::clear_member_ids() {
  member_ids_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CreateMessageChannelRequest::member_ids() const {
  // @@protoc_insertion_point(field_get:e8.CreateMessageChannelRequest.member_ids)
  return member_ids_;
}
inline void CreateMessageChannelRequest::set_member_ids(::google::protobuf::int64 value) {
  
  member_ids_ = value;
  // @@protoc_insertion_point(field_set:e8.CreateMessageChannelRequest.member_ids)
}

// -------------------------------------------------------------------

// CreateMessageChannelResponse

// int64 channel_id = 1;
inline void CreateMessageChannelResponse::clear_channel_id() {
  channel_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CreateMessageChannelResponse::channel_id() const {
  // @@protoc_insertion_point(field_get:e8.CreateMessageChannelResponse.channel_id)
  return channel_id_;
}
inline void CreateMessageChannelResponse::set_channel_id(::google::protobuf::int64 value) {
  
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:e8.CreateMessageChannelResponse.channel_id)
}

// -------------------------------------------------------------------

// AddUserToMessageChannelRequest

// int64 channel_id = 1;
inline void AddUserToMessageChannelRequest::clear_channel_id() {
  channel_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AddUserToMessageChannelRequest::channel_id() const {
  // @@protoc_insertion_point(field_get:e8.AddUserToMessageChannelRequest.channel_id)
  return channel_id_;
}
inline void AddUserToMessageChannelRequest::set_channel_id(::google::protobuf::int64 value) {
  
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:e8.AddUserToMessageChannelRequest.channel_id)
}

// int64 user_id = 2;
inline void AddUserToMessageChannelRequest::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AddUserToMessageChannelRequest::user_id() const {
  // @@protoc_insertion_point(field_get:e8.AddUserToMessageChannelRequest.user_id)
  return user_id_;
}
inline void AddUserToMessageChannelRequest::set_user_id(::google::protobuf::int64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:e8.AddUserToMessageChannelRequest.user_id)
}

// .e8.MessageChannelMemberType member_type = 3;
inline void AddUserToMessageChannelRequest::clear_member_type() {
  member_type_ = 0;
}
inline ::e8::MessageChannelMemberType AddUserToMessageChannelRequest::member_type() const {
  // @@protoc_insertion_point(field_get:e8.AddUserToMessageChannelRequest.member_type)
  return static_cast< ::e8::MessageChannelMemberType >(member_type_);
}
inline void AddUserToMessageChannelRequest::set_member_type(::e8::MessageChannelMemberType value) {
  
  member_type_ = value;
  // @@protoc_insertion_point(field_set:e8.AddUserToMessageChannelRequest.member_type)
}

// -------------------------------------------------------------------

// AddUserToMessageChannelResponse

// -------------------------------------------------------------------

// GetMessageChannelKeyRequest

// int64 channel_id = 1;
inline void GetMessageChannelKeyRequest::clear_channel_id() {
  channel_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetMessageChannelKeyRequest::channel_id() const {
  // @@protoc_insertion_point(field_get:e8.GetMessageChannelKeyRequest.channel_id)
  return channel_id_;
}
inline void GetMessageChannelKeyRequest::set_channel_id(::google::protobuf::int64 value) {
  
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:e8.GetMessageChannelKeyRequest.channel_id)
}

// int32 timeout_secs = 2;
inline void GetMessageChannelKeyRequest::clear_timeout_secs() {
  timeout_secs_ = 0;
}
inline ::google::protobuf::int32 GetMessageChannelKeyRequest::timeout_secs() const {
  // @@protoc_insertion_point(field_get:e8.GetMessageChannelKeyRequest.timeout_secs)
  return timeout_secs_;
}
inline void GetMessageChannelKeyRequest::set_timeout_secs(::google::protobuf::int32 value) {
  
  timeout_secs_ = value;
  // @@protoc_insertion_point(field_set:e8.GetMessageChannelKeyRequest.timeout_secs)
}

// -------------------------------------------------------------------

// GetMessageChannelKeyResponse

// string channel_key = 3;
inline void GetMessageChannelKeyResponse::clear_channel_key() {
  channel_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetMessageChannelKeyResponse::channel_key() const {
  // @@protoc_insertion_point(field_get:e8.GetMessageChannelKeyResponse.channel_key)
  return channel_key_.GetNoArena();
}
inline void GetMessageChannelKeyResponse::set_channel_key(const ::std::string& value) {
  
  channel_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:e8.GetMessageChannelKeyResponse.channel_key)
}
#if LANG_CXX11
inline void GetMessageChannelKeyResponse::set_channel_key(::std::string&& value) {
  
  channel_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:e8.GetMessageChannelKeyResponse.channel_key)
}
#endif
inline void GetMessageChannelKeyResponse::set_channel_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  channel_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:e8.GetMessageChannelKeyResponse.channel_key)
}
inline void GetMessageChannelKeyResponse::set_channel_key(const char* value, size_t size) {
  
  channel_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:e8.GetMessageChannelKeyResponse.channel_key)
}
inline ::std::string* GetMessageChannelKeyResponse::mutable_channel_key() {
  
  // @@protoc_insertion_point(field_mutable:e8.GetMessageChannelKeyResponse.channel_key)
  return channel_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetMessageChannelKeyResponse::release_channel_key() {
  // @@protoc_insertion_point(field_release:e8.GetMessageChannelKeyResponse.channel_key)
  
  return channel_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetMessageChannelKeyResponse::set_allocated_channel_key(::std::string* channel_key) {
  if (channel_key != NULL) {
    
  } else {
    
  }
  channel_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_key);
  // @@protoc_insertion_point(field_set_allocated:e8.GetMessageChannelKeyResponse.channel_key)
}

// -------------------------------------------------------------------

// LeaveMessageChannelRequest

// int64 channel_id = 1;
inline void LeaveMessageChannelRequest::clear_channel_id() {
  channel_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 LeaveMessageChannelRequest::channel_id() const {
  // @@protoc_insertion_point(field_get:e8.LeaveMessageChannelRequest.channel_id)
  return channel_id_;
}
inline void LeaveMessageChannelRequest::set_channel_id(::google::protobuf::int64 value) {
  
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:e8.LeaveMessageChannelRequest.channel_id)
}

// -------------------------------------------------------------------

// LeaveMessageChannelResponse

// -------------------------------------------------------------------

// GetJoinedInMessageChannelsRequest

// .e8.Pagination pagination = 1;
inline bool GetJoinedInMessageChannelsRequest::has_pagination() const {
  return this != internal_default_instance() && pagination_ != NULL;
}
inline const ::e8::Pagination& GetJoinedInMessageChannelsRequest::_internal_pagination() const {
  return *pagination_;
}
inline const ::e8::Pagination& GetJoinedInMessageChannelsRequest::pagination() const {
  const ::e8::Pagination* p = pagination_;
  // @@protoc_insertion_point(field_get:e8.GetJoinedInMessageChannelsRequest.pagination)
  return p != NULL ? *p : *reinterpret_cast<const ::e8::Pagination*>(
      &::e8::_Pagination_default_instance_);
}
inline ::e8::Pagination* GetJoinedInMessageChannelsRequest::release_pagination() {
  // @@protoc_insertion_point(field_release:e8.GetJoinedInMessageChannelsRequest.pagination)
  
  ::e8::Pagination* temp = pagination_;
  pagination_ = NULL;
  return temp;
}
inline ::e8::Pagination* GetJoinedInMessageChannelsRequest::mutable_pagination() {
  
  if (pagination_ == NULL) {
    auto* p = CreateMaybeMessage<::e8::Pagination>(GetArenaNoVirtual());
    pagination_ = p;
  }
  // @@protoc_insertion_point(field_mutable:e8.GetJoinedInMessageChannelsRequest.pagination)
  return pagination_;
}
inline void GetJoinedInMessageChannelsRequest::set_allocated_pagination(::e8::Pagination* pagination) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pagination_);
  }
  if (pagination) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pagination = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pagination, submessage_arena);
    }
    
  } else {
    
  }
  pagination_ = pagination;
  // @@protoc_insertion_point(field_set_allocated:e8.GetJoinedInMessageChannelsRequest.pagination)
}

// repeated int64 with_member_ids = 2;
inline int GetJoinedInMessageChannelsRequest::with_member_ids_size() const {
  return with_member_ids_.size();
}
inline void GetJoinedInMessageChannelsRequest::clear_with_member_ids() {
  with_member_ids_.Clear();
}
inline ::google::protobuf::int64 GetJoinedInMessageChannelsRequest::with_member_ids(int index) const {
  // @@protoc_insertion_point(field_get:e8.GetJoinedInMessageChannelsRequest.with_member_ids)
  return with_member_ids_.Get(index);
}
inline void GetJoinedInMessageChannelsRequest::set_with_member_ids(int index, ::google::protobuf::int64 value) {
  with_member_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:e8.GetJoinedInMessageChannelsRequest.with_member_ids)
}
inline void GetJoinedInMessageChannelsRequest::add_with_member_ids(::google::protobuf::int64 value) {
  with_member_ids_.Add(value);
  // @@protoc_insertion_point(field_add:e8.GetJoinedInMessageChannelsRequest.with_member_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GetJoinedInMessageChannelsRequest::with_member_ids() const {
  // @@protoc_insertion_point(field_list:e8.GetJoinedInMessageChannelsRequest.with_member_ids)
  return with_member_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GetJoinedInMessageChannelsRequest::mutable_with_member_ids() {
  // @@protoc_insertion_point(field_mutable_list:e8.GetJoinedInMessageChannelsRequest.with_member_ids)
  return &with_member_ids_;
}

// int32 fetch_num_active_users = 3;
inline void GetJoinedInMessageChannelsRequest::clear_fetch_num_active_users() {
  fetch_num_active_users_ = 0;
}
inline ::google::protobuf::int32 GetJoinedInMessageChannelsRequest::fetch_num_active_users() const {
  // @@protoc_insertion_point(field_get:e8.GetJoinedInMessageChannelsRequest.fetch_num_active_users)
  return fetch_num_active_users_;
}
inline void GetJoinedInMessageChannelsRequest::set_fetch_num_active_users(::google::protobuf::int32 value) {
  
  fetch_num_active_users_ = value;
  // @@protoc_insertion_point(field_set:e8.GetJoinedInMessageChannelsRequest.fetch_num_active_users)
}

// -------------------------------------------------------------------

// MessageChannelAuxiliaries

// int64 channel_last_interacted_at = 1;
inline void MessageChannelAuxiliaries::clear_channel_last_interacted_at() {
  channel_last_interacted_at_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MessageChannelAuxiliaries::channel_last_interacted_at() const {
  // @@protoc_insertion_point(field_get:e8.MessageChannelAuxiliaries.channel_last_interacted_at)
  return channel_last_interacted_at_;
}
inline void MessageChannelAuxiliaries::set_channel_last_interacted_at(::google::protobuf::int64 value) {
  
  channel_last_interacted_at_ = value;
  // @@protoc_insertion_point(field_set:e8.MessageChannelAuxiliaries.channel_last_interacted_at)
}

// repeated .e8.UserPublicProfile most_active_users = 2;
inline int MessageChannelAuxiliaries::most_active_users_size() const {
  return most_active_users_.size();
}
inline ::e8::UserPublicProfile* MessageChannelAuxiliaries::mutable_most_active_users(int index) {
  // @@protoc_insertion_point(field_mutable:e8.MessageChannelAuxiliaries.most_active_users)
  return most_active_users_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile >*
MessageChannelAuxiliaries::mutable_most_active_users() {
  // @@protoc_insertion_point(field_mutable_list:e8.MessageChannelAuxiliaries.most_active_users)
  return &most_active_users_;
}
inline const ::e8::UserPublicProfile& MessageChannelAuxiliaries::most_active_users(int index) const {
  // @@protoc_insertion_point(field_get:e8.MessageChannelAuxiliaries.most_active_users)
  return most_active_users_.Get(index);
}
inline ::e8::UserPublicProfile* MessageChannelAuxiliaries::add_most_active_users() {
  // @@protoc_insertion_point(field_add:e8.MessageChannelAuxiliaries.most_active_users)
  return most_active_users_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile >&
MessageChannelAuxiliaries::most_active_users() const {
  // @@protoc_insertion_point(field_list:e8.MessageChannelAuxiliaries.most_active_users)
  return most_active_users_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetJoinedInMessageChannelsResponse

// repeated .e8.MessageChannel channels = 1;
inline int GetJoinedInMessageChannelsResponse::channels_size() const {
  return channels_.size();
}
inline ::e8::MessageChannel* GetJoinedInMessageChannelsResponse::mutable_channels(int index) {
  // @@protoc_insertion_point(field_mutable:e8.GetJoinedInMessageChannelsResponse.channels)
  return channels_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::e8::MessageChannel >*
GetJoinedInMessageChannelsResponse::mutable_channels() {
  // @@protoc_insertion_point(field_mutable_list:e8.GetJoinedInMessageChannelsResponse.channels)
  return &channels_;
}
inline const ::e8::MessageChannel& GetJoinedInMessageChannelsResponse::channels(int index) const {
  // @@protoc_insertion_point(field_get:e8.GetJoinedInMessageChannelsResponse.channels)
  return channels_.Get(index);
}
inline ::e8::MessageChannel* GetJoinedInMessageChannelsResponse::add_channels() {
  // @@protoc_insertion_point(field_add:e8.GetJoinedInMessageChannelsResponse.channels)
  return channels_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::e8::MessageChannel >&
GetJoinedInMessageChannelsResponse::channels() const {
  // @@protoc_insertion_point(field_list:e8.GetJoinedInMessageChannelsResponse.channels)
  return channels_;
}

// map<int64, .e8.MessageChannelAuxiliaries> auxiliaries = 2;
inline int GetJoinedInMessageChannelsResponse::auxiliaries_size() const {
  return auxiliaries_.size();
}
inline void GetJoinedInMessageChannelsResponse::clear_auxiliaries() {
  auxiliaries_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int64, ::e8::MessageChannelAuxiliaries >&
GetJoinedInMessageChannelsResponse::auxiliaries() const {
  // @@protoc_insertion_point(field_map:e8.GetJoinedInMessageChannelsResponse.auxiliaries)
  return auxiliaries_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int64, ::e8::MessageChannelAuxiliaries >*
GetJoinedInMessageChannelsResponse::mutable_auxiliaries() {
  // @@protoc_insertion_point(field_mutable_map:e8.GetJoinedInMessageChannelsResponse.auxiliaries)
  return auxiliaries_.MutableMap();
}

// -------------------------------------------------------------------

// GetMessageChannelMembersRequest

// int64 channel_id = 1;
inline void GetMessageChannelMembersRequest::clear_channel_id() {
  channel_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetMessageChannelMembersRequest::channel_id() const {
  // @@protoc_insertion_point(field_get:e8.GetMessageChannelMembersRequest.channel_id)
  return channel_id_;
}
inline void GetMessageChannelMembersRequest::set_channel_id(::google::protobuf::int64 value) {
  
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:e8.GetMessageChannelMembersRequest.channel_id)
}

// .e8.Pagination pagination = 2;
inline bool GetMessageChannelMembersRequest::has_pagination() const {
  return this != internal_default_instance() && pagination_ != NULL;
}
inline const ::e8::Pagination& GetMessageChannelMembersRequest::_internal_pagination() const {
  return *pagination_;
}
inline const ::e8::Pagination& GetMessageChannelMembersRequest::pagination() const {
  const ::e8::Pagination* p = pagination_;
  // @@protoc_insertion_point(field_get:e8.GetMessageChannelMembersRequest.pagination)
  return p != NULL ? *p : *reinterpret_cast<const ::e8::Pagination*>(
      &::e8::_Pagination_default_instance_);
}
inline ::e8::Pagination* GetMessageChannelMembersRequest::release_pagination() {
  // @@protoc_insertion_point(field_release:e8.GetMessageChannelMembersRequest.pagination)
  
  ::e8::Pagination* temp = pagination_;
  pagination_ = NULL;
  return temp;
}
inline ::e8::Pagination* GetMessageChannelMembersRequest::mutable_pagination() {
  
  if (pagination_ == NULL) {
    auto* p = CreateMaybeMessage<::e8::Pagination>(GetArenaNoVirtual());
    pagination_ = p;
  }
  // @@protoc_insertion_point(field_mutable:e8.GetMessageChannelMembersRequest.pagination)
  return pagination_;
}
inline void GetMessageChannelMembersRequest::set_allocated_pagination(::e8::Pagination* pagination) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pagination_);
  }
  if (pagination) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pagination = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pagination, submessage_arena);
    }
    
  } else {
    
  }
  pagination_ = pagination;
  // @@protoc_insertion_point(field_set_allocated:e8.GetMessageChannelMembersRequest.pagination)
}

// -------------------------------------------------------------------

// GetMessageChannelMembersResponse

// repeated .e8.UserPublicProfile user_profiles = 1;
inline int GetMessageChannelMembersResponse::user_profiles_size() const {
  return user_profiles_.size();
}
inline ::e8::UserPublicProfile* GetMessageChannelMembersResponse::mutable_user_profiles(int index) {
  // @@protoc_insertion_point(field_mutable:e8.GetMessageChannelMembersResponse.user_profiles)
  return user_profiles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile >*
GetMessageChannelMembersResponse::mutable_user_profiles() {
  // @@protoc_insertion_point(field_mutable_list:e8.GetMessageChannelMembersResponse.user_profiles)
  return &user_profiles_;
}
inline const ::e8::UserPublicProfile& GetMessageChannelMembersResponse::user_profiles(int index) const {
  // @@protoc_insertion_point(field_get:e8.GetMessageChannelMembersResponse.user_profiles)
  return user_profiles_.Get(index);
}
inline ::e8::UserPublicProfile* GetMessageChannelMembersResponse::add_user_profiles() {
  // @@protoc_insertion_point(field_add:e8.GetMessageChannelMembersResponse.user_profiles)
  return user_profiles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile >&
GetMessageChannelMembersResponse::user_profiles() const {
  // @@protoc_insertion_point(field_list:e8.GetMessageChannelMembersResponse.user_profiles)
  return user_profiles_;
}

// repeated .e8.MessageChannelRelation channel_relations = 2;
inline int GetMessageChannelMembersResponse::channel_relations_size() const {
  return channel_relations_.size();
}
inline ::e8::MessageChannelRelation* GetMessageChannelMembersResponse::mutable_channel_relations(int index) {
  // @@protoc_insertion_point(field_mutable:e8.GetMessageChannelMembersResponse.channel_relations)
  return channel_relations_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::e8::MessageChannelRelation >*
GetMessageChannelMembersResponse::mutable_channel_relations() {
  // @@protoc_insertion_point(field_mutable_list:e8.GetMessageChannelMembersResponse.channel_relations)
  return &channel_relations_;
}
inline const ::e8::MessageChannelRelation& GetMessageChannelMembersResponse::channel_relations(int index) const {
  // @@protoc_insertion_point(field_get:e8.GetMessageChannelMembersResponse.channel_relations)
  return channel_relations_.Get(index);
}
inline ::e8::MessageChannelRelation* GetMessageChannelMembersResponse::add_channel_relations() {
  // @@protoc_insertion_point(field_add:e8.GetMessageChannelMembersResponse.channel_relations)
  return channel_relations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::e8::MessageChannelRelation >&
GetMessageChannelMembersResponse::channel_relations() const {
  // @@protoc_insertion_point(field_list:e8.GetMessageChannelMembersResponse.channel_relations)
  return channel_relations_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace e8

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_service_5fmessage_5fchannel_2eproto
