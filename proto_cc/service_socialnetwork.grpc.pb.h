// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: service_socialnetwork.proto
// Original file comments:
// *
// e8yes demo web server.
//
// <p>Copyright (C) 2020 Chifeng Wen {daviesx66@gmail.com}
//
// <p>This program is free software: you can redistribute it and/or modify it under the terms of the
// GNU General Public License as published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// <p>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
// without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.
//
// <p>You should have received a copy of the GNU General Public License along with this program. If
// not, see <http://www.gnu.org/licenses/>.
//
#ifndef GRPC_service_5fsocialnetwork_2eproto__INCLUDED
#define GRPC_service_5fsocialnetwork_2eproto__INCLUDED

#include "service_socialnetwork.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace grpc {
class CompletionQueue;
class Channel;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc

namespace e8 {

class SocialNetworkService final {
 public:
  static constexpr char const* service_full_name() {
    return "e8.SocialNetworkService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // *
    // Get the directed relation between the logged-in user and some other user.
    virtual ::grpc::Status GetUserRelations(::grpc::ClientContext* context, const ::e8::GetUserRelationsRequest& request, ::e8::GetUserRelationsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::GetUserRelationsResponse>> AsyncGetUserRelations(::grpc::ClientContext* context, const ::e8::GetUserRelationsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::GetUserRelationsResponse>>(AsyncGetUserRelationsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::GetUserRelationsResponse>> PrepareAsyncGetUserRelations(::grpc::ClientContext* context, const ::e8::GetUserRelationsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::GetUserRelationsResponse>>(PrepareAsyncGetUserRelationsRaw(context, request, cq));
    }
    // *
    // Send an invitation to another user where the logged-in user is the inviter.
    virtual ::grpc::Status SendInvitation(::grpc::ClientContext* context, const ::e8::SendInvitationRequest& request, ::e8::SendInvitationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::SendInvitationResponse>> AsyncSendInvitation(::grpc::ClientContext* context, const ::e8::SendInvitationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::SendInvitationResponse>>(AsyncSendInvitationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::SendInvitationResponse>> PrepareAsyncSendInvitation(::grpc::ClientContext* context, const ::e8::SendInvitationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::SendInvitationResponse>>(PrepareAsyncSendInvitationRaw(context, request, cq));
    }
    // *
    // Delete an invitation previously sent where the logged-in user is inviter.
    virtual ::grpc::Status DeleteInvitation(::grpc::ClientContext* context, const ::e8::DeleteInvitationRequest& request, ::e8::DeleteInvitationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::DeleteInvitationResponse>> AsyncDeleteInvitation(::grpc::ClientContext* context, const ::e8::DeleteInvitationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::DeleteInvitationResponse>>(AsyncDeleteInvitationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::DeleteInvitationResponse>> PrepareAsyncDeleteInvitation(::grpc::ClientContext* context, const ::e8::DeleteInvitationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::DeleteInvitationResponse>>(PrepareAsyncDeleteInvitationRaw(context, request, cq));
    }
    // *
    // Accept/reject an invitation. If accepted, it will establish the 
    // contact relation where the logged-in user is the invitee.
    virtual ::grpc::Status ProcessInvitation(::grpc::ClientContext* context, const ::e8::ProcessInvitationRequest& request, ::e8::ProcessInvitationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::ProcessInvitationResponse>> AsyncProcessInvitation(::grpc::ClientContext* context, const ::e8::ProcessInvitationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::ProcessInvitationResponse>>(AsyncProcessInvitationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::ProcessInvitationResponse>> PrepareAsyncProcessInvitation(::grpc::ClientContext* context, const ::e8::ProcessInvitationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::ProcessInvitationResponse>>(PrepareAsyncProcessInvitationRaw(context, request, cq));
    }
    // *
    // Delete a contact relation for the logged-in user.
    virtual ::grpc::Status DeleteContact(::grpc::ClientContext* context, const ::e8::DeleteContactRequest& request, ::e8::DeleteContactResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::DeleteContactResponse>> AsyncDeleteContact(::grpc::ClientContext* context, const ::e8::DeleteContactRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::DeleteContactResponse>>(AsyncDeleteContactRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::DeleteContactResponse>> PrepareAsyncDeleteContact(::grpc::ClientContext* context, const ::e8::DeleteContactRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::DeleteContactResponse>>(PrepareAsyncDeleteContactRaw(context, request, cq));
    }
    // *
    // Search the a list of user related to the logged-in user. The type of
    // relation is specified by the constraints in the request. 
    virtual ::grpc::Status SearchRelatedUserList(::grpc::ClientContext* context, const ::e8::SearchRelatedUserListRequest& request, ::e8::SearchRelatedUserListResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::SearchRelatedUserListResponse>> AsyncSearchRelatedUserList(::grpc::ClientContext* context, const ::e8::SearchRelatedUserListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::SearchRelatedUserListResponse>>(AsyncSearchRelatedUserListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::SearchRelatedUserListResponse>> PrepareAsyncSearchRelatedUserList(::grpc::ClientContext* context, const ::e8::SearchRelatedUserListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::e8::SearchRelatedUserListResponse>>(PrepareAsyncSearchRelatedUserListRaw(context, request, cq));
    }
    class experimental_async_interface {
     public:
      virtual ~experimental_async_interface() {}
      // *
      // Get the directed relation between the logged-in user and some other user.
      virtual void GetUserRelations(::grpc::ClientContext* context, const ::e8::GetUserRelationsRequest* request, ::e8::GetUserRelationsResponse* response, std::function<void(::grpc::Status)>) = 0;
      // *
      // Send an invitation to another user where the logged-in user is the inviter.
      virtual void SendInvitation(::grpc::ClientContext* context, const ::e8::SendInvitationRequest* request, ::e8::SendInvitationResponse* response, std::function<void(::grpc::Status)>) = 0;
      // *
      // Delete an invitation previously sent where the logged-in user is inviter.
      virtual void DeleteInvitation(::grpc::ClientContext* context, const ::e8::DeleteInvitationRequest* request, ::e8::DeleteInvitationResponse* response, std::function<void(::grpc::Status)>) = 0;
      // *
      // Accept/reject an invitation. If accepted, it will establish the 
      // contact relation where the logged-in user is the invitee.
      virtual void ProcessInvitation(::grpc::ClientContext* context, const ::e8::ProcessInvitationRequest* request, ::e8::ProcessInvitationResponse* response, std::function<void(::grpc::Status)>) = 0;
      // *
      // Delete a contact relation for the logged-in user.
      virtual void DeleteContact(::grpc::ClientContext* context, const ::e8::DeleteContactRequest* request, ::e8::DeleteContactResponse* response, std::function<void(::grpc::Status)>) = 0;
      // *
      // Search the a list of user related to the logged-in user. The type of
      // relation is specified by the constraints in the request. 
      virtual void SearchRelatedUserList(::grpc::ClientContext* context, const ::e8::SearchRelatedUserListRequest* request, ::e8::SearchRelatedUserListResponse* response, std::function<void(::grpc::Status)>) = 0;
    };
    virtual class experimental_async_interface* experimental_async() { return nullptr; }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::e8::GetUserRelationsResponse>* AsyncGetUserRelationsRaw(::grpc::ClientContext* context, const ::e8::GetUserRelationsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::e8::GetUserRelationsResponse>* PrepareAsyncGetUserRelationsRaw(::grpc::ClientContext* context, const ::e8::GetUserRelationsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::e8::SendInvitationResponse>* AsyncSendInvitationRaw(::grpc::ClientContext* context, const ::e8::SendInvitationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::e8::SendInvitationResponse>* PrepareAsyncSendInvitationRaw(::grpc::ClientContext* context, const ::e8::SendInvitationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::e8::DeleteInvitationResponse>* AsyncDeleteInvitationRaw(::grpc::ClientContext* context, const ::e8::DeleteInvitationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::e8::DeleteInvitationResponse>* PrepareAsyncDeleteInvitationRaw(::grpc::ClientContext* context, const ::e8::DeleteInvitationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::e8::ProcessInvitationResponse>* AsyncProcessInvitationRaw(::grpc::ClientContext* context, const ::e8::ProcessInvitationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::e8::ProcessInvitationResponse>* PrepareAsyncProcessInvitationRaw(::grpc::ClientContext* context, const ::e8::ProcessInvitationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::e8::DeleteContactResponse>* AsyncDeleteContactRaw(::grpc::ClientContext* context, const ::e8::DeleteContactRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::e8::DeleteContactResponse>* PrepareAsyncDeleteContactRaw(::grpc::ClientContext* context, const ::e8::DeleteContactRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::e8::SearchRelatedUserListResponse>* AsyncSearchRelatedUserListRaw(::grpc::ClientContext* context, const ::e8::SearchRelatedUserListRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::e8::SearchRelatedUserListResponse>* PrepareAsyncSearchRelatedUserListRaw(::grpc::ClientContext* context, const ::e8::SearchRelatedUserListRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status GetUserRelations(::grpc::ClientContext* context, const ::e8::GetUserRelationsRequest& request, ::e8::GetUserRelationsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::GetUserRelationsResponse>> AsyncGetUserRelations(::grpc::ClientContext* context, const ::e8::GetUserRelationsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::GetUserRelationsResponse>>(AsyncGetUserRelationsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::GetUserRelationsResponse>> PrepareAsyncGetUserRelations(::grpc::ClientContext* context, const ::e8::GetUserRelationsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::GetUserRelationsResponse>>(PrepareAsyncGetUserRelationsRaw(context, request, cq));
    }
    ::grpc::Status SendInvitation(::grpc::ClientContext* context, const ::e8::SendInvitationRequest& request, ::e8::SendInvitationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::SendInvitationResponse>> AsyncSendInvitation(::grpc::ClientContext* context, const ::e8::SendInvitationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::SendInvitationResponse>>(AsyncSendInvitationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::SendInvitationResponse>> PrepareAsyncSendInvitation(::grpc::ClientContext* context, const ::e8::SendInvitationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::SendInvitationResponse>>(PrepareAsyncSendInvitationRaw(context, request, cq));
    }
    ::grpc::Status DeleteInvitation(::grpc::ClientContext* context, const ::e8::DeleteInvitationRequest& request, ::e8::DeleteInvitationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::DeleteInvitationResponse>> AsyncDeleteInvitation(::grpc::ClientContext* context, const ::e8::DeleteInvitationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::DeleteInvitationResponse>>(AsyncDeleteInvitationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::DeleteInvitationResponse>> PrepareAsyncDeleteInvitation(::grpc::ClientContext* context, const ::e8::DeleteInvitationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::DeleteInvitationResponse>>(PrepareAsyncDeleteInvitationRaw(context, request, cq));
    }
    ::grpc::Status ProcessInvitation(::grpc::ClientContext* context, const ::e8::ProcessInvitationRequest& request, ::e8::ProcessInvitationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::ProcessInvitationResponse>> AsyncProcessInvitation(::grpc::ClientContext* context, const ::e8::ProcessInvitationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::ProcessInvitationResponse>>(AsyncProcessInvitationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::ProcessInvitationResponse>> PrepareAsyncProcessInvitation(::grpc::ClientContext* context, const ::e8::ProcessInvitationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::ProcessInvitationResponse>>(PrepareAsyncProcessInvitationRaw(context, request, cq));
    }
    ::grpc::Status DeleteContact(::grpc::ClientContext* context, const ::e8::DeleteContactRequest& request, ::e8::DeleteContactResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::DeleteContactResponse>> AsyncDeleteContact(::grpc::ClientContext* context, const ::e8::DeleteContactRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::DeleteContactResponse>>(AsyncDeleteContactRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::DeleteContactResponse>> PrepareAsyncDeleteContact(::grpc::ClientContext* context, const ::e8::DeleteContactRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::DeleteContactResponse>>(PrepareAsyncDeleteContactRaw(context, request, cq));
    }
    ::grpc::Status SearchRelatedUserList(::grpc::ClientContext* context, const ::e8::SearchRelatedUserListRequest& request, ::e8::SearchRelatedUserListResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::SearchRelatedUserListResponse>> AsyncSearchRelatedUserList(::grpc::ClientContext* context, const ::e8::SearchRelatedUserListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::SearchRelatedUserListResponse>>(AsyncSearchRelatedUserListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::SearchRelatedUserListResponse>> PrepareAsyncSearchRelatedUserList(::grpc::ClientContext* context, const ::e8::SearchRelatedUserListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::e8::SearchRelatedUserListResponse>>(PrepareAsyncSearchRelatedUserListRaw(context, request, cq));
    }
    class experimental_async final :
      public StubInterface::experimental_async_interface {
     public:
      void GetUserRelations(::grpc::ClientContext* context, const ::e8::GetUserRelationsRequest* request, ::e8::GetUserRelationsResponse* response, std::function<void(::grpc::Status)>) override;
      void SendInvitation(::grpc::ClientContext* context, const ::e8::SendInvitationRequest* request, ::e8::SendInvitationResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteInvitation(::grpc::ClientContext* context, const ::e8::DeleteInvitationRequest* request, ::e8::DeleteInvitationResponse* response, std::function<void(::grpc::Status)>) override;
      void ProcessInvitation(::grpc::ClientContext* context, const ::e8::ProcessInvitationRequest* request, ::e8::ProcessInvitationResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteContact(::grpc::ClientContext* context, const ::e8::DeleteContactRequest* request, ::e8::DeleteContactResponse* response, std::function<void(::grpc::Status)>) override;
      void SearchRelatedUserList(::grpc::ClientContext* context, const ::e8::SearchRelatedUserListRequest* request, ::e8::SearchRelatedUserListResponse* response, std::function<void(::grpc::Status)>) override;
     private:
      friend class Stub;
      explicit experimental_async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class experimental_async_interface* experimental_async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class experimental_async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::e8::GetUserRelationsResponse>* AsyncGetUserRelationsRaw(::grpc::ClientContext* context, const ::e8::GetUserRelationsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::e8::GetUserRelationsResponse>* PrepareAsyncGetUserRelationsRaw(::grpc::ClientContext* context, const ::e8::GetUserRelationsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::e8::SendInvitationResponse>* AsyncSendInvitationRaw(::grpc::ClientContext* context, const ::e8::SendInvitationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::e8::SendInvitationResponse>* PrepareAsyncSendInvitationRaw(::grpc::ClientContext* context, const ::e8::SendInvitationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::e8::DeleteInvitationResponse>* AsyncDeleteInvitationRaw(::grpc::ClientContext* context, const ::e8::DeleteInvitationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::e8::DeleteInvitationResponse>* PrepareAsyncDeleteInvitationRaw(::grpc::ClientContext* context, const ::e8::DeleteInvitationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::e8::ProcessInvitationResponse>* AsyncProcessInvitationRaw(::grpc::ClientContext* context, const ::e8::ProcessInvitationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::e8::ProcessInvitationResponse>* PrepareAsyncProcessInvitationRaw(::grpc::ClientContext* context, const ::e8::ProcessInvitationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::e8::DeleteContactResponse>* AsyncDeleteContactRaw(::grpc::ClientContext* context, const ::e8::DeleteContactRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::e8::DeleteContactResponse>* PrepareAsyncDeleteContactRaw(::grpc::ClientContext* context, const ::e8::DeleteContactRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::e8::SearchRelatedUserListResponse>* AsyncSearchRelatedUserListRaw(::grpc::ClientContext* context, const ::e8::SearchRelatedUserListRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::e8::SearchRelatedUserListResponse>* PrepareAsyncSearchRelatedUserListRaw(::grpc::ClientContext* context, const ::e8::SearchRelatedUserListRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_GetUserRelations_;
    const ::grpc::internal::RpcMethod rpcmethod_SendInvitation_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteInvitation_;
    const ::grpc::internal::RpcMethod rpcmethod_ProcessInvitation_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteContact_;
    const ::grpc::internal::RpcMethod rpcmethod_SearchRelatedUserList_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // *
    // Get the directed relation between the logged-in user and some other user.
    virtual ::grpc::Status GetUserRelations(::grpc::ServerContext* context, const ::e8::GetUserRelationsRequest* request, ::e8::GetUserRelationsResponse* response);
    // *
    // Send an invitation to another user where the logged-in user is the inviter.
    virtual ::grpc::Status SendInvitation(::grpc::ServerContext* context, const ::e8::SendInvitationRequest* request, ::e8::SendInvitationResponse* response);
    // *
    // Delete an invitation previously sent where the logged-in user is inviter.
    virtual ::grpc::Status DeleteInvitation(::grpc::ServerContext* context, const ::e8::DeleteInvitationRequest* request, ::e8::DeleteInvitationResponse* response);
    // *
    // Accept/reject an invitation. If accepted, it will establish the 
    // contact relation where the logged-in user is the invitee.
    virtual ::grpc::Status ProcessInvitation(::grpc::ServerContext* context, const ::e8::ProcessInvitationRequest* request, ::e8::ProcessInvitationResponse* response);
    // *
    // Delete a contact relation for the logged-in user.
    virtual ::grpc::Status DeleteContact(::grpc::ServerContext* context, const ::e8::DeleteContactRequest* request, ::e8::DeleteContactResponse* response);
    // *
    // Search the a list of user related to the logged-in user. The type of
    // relation is specified by the constraints in the request. 
    virtual ::grpc::Status SearchRelatedUserList(::grpc::ServerContext* context, const ::e8::SearchRelatedUserListRequest* request, ::e8::SearchRelatedUserListResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_GetUserRelations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetUserRelations() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_GetUserRelations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserRelations(::grpc::ServerContext* context, const ::e8::GetUserRelationsRequest* request, ::e8::GetUserRelationsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUserRelations(::grpc::ServerContext* context, ::e8::GetUserRelationsRequest* request, ::grpc::ServerAsyncResponseWriter< ::e8::GetUserRelationsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SendInvitation() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_SendInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendInvitation(::grpc::ServerContext* context, const ::e8::SendInvitationRequest* request, ::e8::SendInvitationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendInvitation(::grpc::ServerContext* context, ::e8::SendInvitationRequest* request, ::grpc::ServerAsyncResponseWriter< ::e8::SendInvitationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteInvitation() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_DeleteInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteInvitation(::grpc::ServerContext* context, const ::e8::DeleteInvitationRequest* request, ::e8::DeleteInvitationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteInvitation(::grpc::ServerContext* context, ::e8::DeleteInvitationRequest* request, ::grpc::ServerAsyncResponseWriter< ::e8::DeleteInvitationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ProcessInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ProcessInvitation() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_ProcessInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ProcessInvitation(::grpc::ServerContext* context, const ::e8::ProcessInvitationRequest* request, ::e8::ProcessInvitationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestProcessInvitation(::grpc::ServerContext* context, ::e8::ProcessInvitationRequest* request, ::grpc::ServerAsyncResponseWriter< ::e8::ProcessInvitationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteContact() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_DeleteContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteContact(::grpc::ServerContext* context, const ::e8::DeleteContactRequest* request, ::e8::DeleteContactResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteContact(::grpc::ServerContext* context, ::e8::DeleteContactRequest* request, ::grpc::ServerAsyncResponseWriter< ::e8::DeleteContactResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SearchRelatedUserList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SearchRelatedUserList() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_SearchRelatedUserList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchRelatedUserList(::grpc::ServerContext* context, const ::e8::SearchRelatedUserListRequest* request, ::e8::SearchRelatedUserListResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSearchRelatedUserList(::grpc::ServerContext* context, ::e8::SearchRelatedUserListRequest* request, ::grpc::ServerAsyncResponseWriter< ::e8::SearchRelatedUserListResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_GetUserRelations<WithAsyncMethod_SendInvitation<WithAsyncMethod_DeleteInvitation<WithAsyncMethod_ProcessInvitation<WithAsyncMethod_DeleteContact<WithAsyncMethod_SearchRelatedUserList<Service > > > > > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_GetUserRelations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetUserRelations() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_GetUserRelations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserRelations(::grpc::ServerContext* context, const ::e8::GetUserRelationsRequest* request, ::e8::GetUserRelationsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SendInvitation() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_SendInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendInvitation(::grpc::ServerContext* context, const ::e8::SendInvitationRequest* request, ::e8::SendInvitationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteInvitation() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_DeleteInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteInvitation(::grpc::ServerContext* context, const ::e8::DeleteInvitationRequest* request, ::e8::DeleteInvitationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ProcessInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ProcessInvitation() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_ProcessInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ProcessInvitation(::grpc::ServerContext* context, const ::e8::ProcessInvitationRequest* request, ::e8::ProcessInvitationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteContact() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_DeleteContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteContact(::grpc::ServerContext* context, const ::e8::DeleteContactRequest* request, ::e8::DeleteContactResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SearchRelatedUserList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SearchRelatedUserList() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_SearchRelatedUserList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchRelatedUserList(::grpc::ServerContext* context, const ::e8::SearchRelatedUserListRequest* request, ::e8::SearchRelatedUserListResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetUserRelations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetUserRelations() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_GetUserRelations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserRelations(::grpc::ServerContext* context, const ::e8::GetUserRelationsRequest* request, ::e8::GetUserRelationsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUserRelations(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_SendInvitation() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_SendInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendInvitation(::grpc::ServerContext* context, const ::e8::SendInvitationRequest* request, ::e8::SendInvitationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendInvitation(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_DeleteInvitation() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_DeleteInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteInvitation(::grpc::ServerContext* context, const ::e8::DeleteInvitationRequest* request, ::e8::DeleteInvitationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteInvitation(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ProcessInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ProcessInvitation() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_ProcessInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ProcessInvitation(::grpc::ServerContext* context, const ::e8::ProcessInvitationRequest* request, ::e8::ProcessInvitationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestProcessInvitation(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_DeleteContact() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_DeleteContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteContact(::grpc::ServerContext* context, const ::e8::DeleteContactRequest* request, ::e8::DeleteContactResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteContact(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SearchRelatedUserList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_SearchRelatedUserList() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_SearchRelatedUserList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchRelatedUserList(::grpc::ServerContext* context, const ::e8::SearchRelatedUserListRequest* request, ::e8::SearchRelatedUserListResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSearchRelatedUserList(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetUserRelations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetUserRelations() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::e8::GetUserRelationsRequest, ::e8::GetUserRelationsResponse>(std::bind(&WithStreamedUnaryMethod_GetUserRelations<BaseClass>::StreamedGetUserRelations, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetUserRelations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetUserRelations(::grpc::ServerContext* context, const ::e8::GetUserRelationsRequest* request, ::e8::GetUserRelationsResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetUserRelations(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::e8::GetUserRelationsRequest,::e8::GetUserRelationsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SendInvitation() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::e8::SendInvitationRequest, ::e8::SendInvitationResponse>(std::bind(&WithStreamedUnaryMethod_SendInvitation<BaseClass>::StreamedSendInvitation, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SendInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendInvitation(::grpc::ServerContext* context, const ::e8::SendInvitationRequest* request, ::e8::SendInvitationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendInvitation(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::e8::SendInvitationRequest,::e8::SendInvitationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteInvitation() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::e8::DeleteInvitationRequest, ::e8::DeleteInvitationResponse>(std::bind(&WithStreamedUnaryMethod_DeleteInvitation<BaseClass>::StreamedDeleteInvitation, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteInvitation(::grpc::ServerContext* context, const ::e8::DeleteInvitationRequest* request, ::e8::DeleteInvitationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteInvitation(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::e8::DeleteInvitationRequest,::e8::DeleteInvitationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ProcessInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ProcessInvitation() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler< ::e8::ProcessInvitationRequest, ::e8::ProcessInvitationResponse>(std::bind(&WithStreamedUnaryMethod_ProcessInvitation<BaseClass>::StreamedProcessInvitation, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ProcessInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ProcessInvitation(::grpc::ServerContext* context, const ::e8::ProcessInvitationRequest* request, ::e8::ProcessInvitationResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedProcessInvitation(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::e8::ProcessInvitationRequest,::e8::ProcessInvitationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteContact() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler< ::e8::DeleteContactRequest, ::e8::DeleteContactResponse>(std::bind(&WithStreamedUnaryMethod_DeleteContact<BaseClass>::StreamedDeleteContact, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteContact(::grpc::ServerContext* context, const ::e8::DeleteContactRequest* request, ::e8::DeleteContactResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteContact(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::e8::DeleteContactRequest,::e8::DeleteContactResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SearchRelatedUserList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SearchRelatedUserList() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler< ::e8::SearchRelatedUserListRequest, ::e8::SearchRelatedUserListResponse>(std::bind(&WithStreamedUnaryMethod_SearchRelatedUserList<BaseClass>::StreamedSearchRelatedUserList, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SearchRelatedUserList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SearchRelatedUserList(::grpc::ServerContext* context, const ::e8::SearchRelatedUserListRequest* request, ::e8::SearchRelatedUserListResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSearchRelatedUserList(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::e8::SearchRelatedUserListRequest,::e8::SearchRelatedUserListResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_GetUserRelations<WithStreamedUnaryMethod_SendInvitation<WithStreamedUnaryMethod_DeleteInvitation<WithStreamedUnaryMethod_ProcessInvitation<WithStreamedUnaryMethod_DeleteContact<WithStreamedUnaryMethod_SearchRelatedUserList<Service > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_GetUserRelations<WithStreamedUnaryMethod_SendInvitation<WithStreamedUnaryMethod_DeleteInvitation<WithStreamedUnaryMethod_ProcessInvitation<WithStreamedUnaryMethod_DeleteContact<WithStreamedUnaryMethod_SearchRelatedUserList<Service > > > > > > StreamedService;
};

}  // namespace e8


#endif  // GRPC_service_5fsocialnetwork_2eproto__INCLUDED
