/**
 * e8yes demo web server.
 *
 * <p>Copyright (C) 2020 Chifeng Wen {daviesx66@gmail.com}
 *
 * <p>This program is free software: you can redistribute it and/or modify it under the terms of the
 * GNU General Public License as published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * <p>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * <p>You should have received a copy of the GNU General Public License along with this program. If
 * not, see <http://www.gnu.org/licenses/>.
 */

syntax = "proto3";

package e8;

import "node.proto";

message ReviseNodeStateRequest {
    repeated NodeStateRevision revisions = 1;
}

message ReviseNodeStateResponse {
}


message GetCurrentRevisionEpochRequest {
}

message GetCurrentRevisionEpochResponse {
    int64 revision_epoch = 1;
}


message AddPeersRequest {
    repeated NodeState nodes = 1;
}

message AddPeersResponse {
}


message DeletePeersRequest {
    repeated string node_names = 1;
}

message DeletePeersResponse {
}


message GetNodeStatesRequest {
}

message GetNodeStatesResponse {
    repeated NodeState nodes = 1;
}


service NodeStateService {
    // Applies incremental updates to the node state snapshot.
    rpc ReviseNodeState (ReviseNodeStateRequest) returns (ReviseNodeStateResponse);

    // Returns the the latest revision epoch the target node is currently at.
    rpc GetCurrentRevisionEpoch (GetCurrentRevisionEpochRequest) returns (GetCurrentRevisionEpochResponse);

    // Add a peer to the current node.
    rpc AddPeers (AddPeersRequest) returns (AddPeersResponse); 

    // Delete a peer that was previously added to the current node.
    rpc DeletePeers (DeletePeersRequest) returns (DeletePeersResponse);

    // Get the current node state snapshot.
    rpc GetNodeStates (GetNodeStatesRequest) returns (GetNodeStatesResponse);
}
