// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service_message_subscriber.proto

#ifndef PROTOBUF_INCLUDED_service_5fmessage_5fsubscriber_2eproto
#define PROTOBUF_INCLUDED_service_5fmessage_5fsubscriber_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "real_time_message.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_service_5fmessage_5fsubscriber_2eproto 

namespace protobuf_service_5fmessage_5fsubscriber_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_service_5fmessage_5fsubscriber_2eproto
namespace e8 {
class SubscribeRealTimeMessageQueueRequest;
class SubscribeRealTimeMessageQueueRequestDefaultTypeInternal;
extern SubscribeRealTimeMessageQueueRequestDefaultTypeInternal _SubscribeRealTimeMessageQueueRequest_default_instance_;
class SubscribeRealTimeMessageQueueResponse;
class SubscribeRealTimeMessageQueueResponseDefaultTypeInternal;
extern SubscribeRealTimeMessageQueueResponseDefaultTypeInternal _SubscribeRealTimeMessageQueueResponse_default_instance_;
}  // namespace e8
namespace google {
namespace protobuf {
template<> ::e8::SubscribeRealTimeMessageQueueRequest* Arena::CreateMaybeMessage<::e8::SubscribeRealTimeMessageQueueRequest>(Arena*);
template<> ::e8::SubscribeRealTimeMessageQueueResponse* Arena::CreateMaybeMessage<::e8::SubscribeRealTimeMessageQueueResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace e8 {

// ===================================================================

class SubscribeRealTimeMessageQueueRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.SubscribeRealTimeMessageQueueRequest) */ {
 public:
  SubscribeRealTimeMessageQueueRequest();
  virtual ~SubscribeRealTimeMessageQueueRequest();

  SubscribeRealTimeMessageQueueRequest(const SubscribeRealTimeMessageQueueRequest& from);

  inline SubscribeRealTimeMessageQueueRequest& operator=(const SubscribeRealTimeMessageQueueRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SubscribeRealTimeMessageQueueRequest(SubscribeRealTimeMessageQueueRequest&& from) noexcept
    : SubscribeRealTimeMessageQueueRequest() {
    *this = ::std::move(from);
  }

  inline SubscribeRealTimeMessageQueueRequest& operator=(SubscribeRealTimeMessageQueueRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubscribeRealTimeMessageQueueRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SubscribeRealTimeMessageQueueRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeRealTimeMessageQueueRequest*>(
               &_SubscribeRealTimeMessageQueueRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(SubscribeRealTimeMessageQueueRequest* other);
  friend void swap(SubscribeRealTimeMessageQueueRequest& a, SubscribeRealTimeMessageQueueRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SubscribeRealTimeMessageQueueRequest* New() const final {
    return CreateMaybeMessage<SubscribeRealTimeMessageQueueRequest>(NULL);
  }

  SubscribeRealTimeMessageQueueRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SubscribeRealTimeMessageQueueRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SubscribeRealTimeMessageQueueRequest& from);
  void MergeFrom(const SubscribeRealTimeMessageQueueRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubscribeRealTimeMessageQueueRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:e8.SubscribeRealTimeMessageQueueRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fmessage_5fsubscriber_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SubscribeRealTimeMessageQueueResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.SubscribeRealTimeMessageQueueResponse) */ {
 public:
  SubscribeRealTimeMessageQueueResponse();
  virtual ~SubscribeRealTimeMessageQueueResponse();

  SubscribeRealTimeMessageQueueResponse(const SubscribeRealTimeMessageQueueResponse& from);

  inline SubscribeRealTimeMessageQueueResponse& operator=(const SubscribeRealTimeMessageQueueResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SubscribeRealTimeMessageQueueResponse(SubscribeRealTimeMessageQueueResponse&& from) noexcept
    : SubscribeRealTimeMessageQueueResponse() {
    *this = ::std::move(from);
  }

  inline SubscribeRealTimeMessageQueueResponse& operator=(SubscribeRealTimeMessageQueueResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubscribeRealTimeMessageQueueResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SubscribeRealTimeMessageQueueResponse* internal_default_instance() {
    return reinterpret_cast<const SubscribeRealTimeMessageQueueResponse*>(
               &_SubscribeRealTimeMessageQueueResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(SubscribeRealTimeMessageQueueResponse* other);
  friend void swap(SubscribeRealTimeMessageQueueResponse& a, SubscribeRealTimeMessageQueueResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SubscribeRealTimeMessageQueueResponse* New() const final {
    return CreateMaybeMessage<SubscribeRealTimeMessageQueueResponse>(NULL);
  }

  SubscribeRealTimeMessageQueueResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SubscribeRealTimeMessageQueueResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SubscribeRealTimeMessageQueueResponse& from);
  void MergeFrom(const SubscribeRealTimeMessageQueueResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubscribeRealTimeMessageQueueResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .e8.RealTimeMessage messages = 1;
  int messages_size() const;
  void clear_messages();
  static const int kMessagesFieldNumber = 1;
  ::e8::RealTimeMessage* mutable_messages(int index);
  ::google::protobuf::RepeatedPtrField< ::e8::RealTimeMessage >*
      mutable_messages();
  const ::e8::RealTimeMessage& messages(int index) const;
  ::e8::RealTimeMessage* add_messages();
  const ::google::protobuf::RepeatedPtrField< ::e8::RealTimeMessage >&
      messages() const;

  // @@protoc_insertion_point(class_scope:e8.SubscribeRealTimeMessageQueueResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::e8::RealTimeMessage > messages_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fmessage_5fsubscriber_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SubscribeRealTimeMessageQueueRequest

// -------------------------------------------------------------------

// SubscribeRealTimeMessageQueueResponse

// repeated .e8.RealTimeMessage messages = 1;
inline int SubscribeRealTimeMessageQueueResponse::messages_size() const {
  return messages_.size();
}
inline ::e8::RealTimeMessage* SubscribeRealTimeMessageQueueResponse::mutable_messages(int index) {
  // @@protoc_insertion_point(field_mutable:e8.SubscribeRealTimeMessageQueueResponse.messages)
  return messages_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::e8::RealTimeMessage >*
SubscribeRealTimeMessageQueueResponse::mutable_messages() {
  // @@protoc_insertion_point(field_mutable_list:e8.SubscribeRealTimeMessageQueueResponse.messages)
  return &messages_;
}
inline const ::e8::RealTimeMessage& SubscribeRealTimeMessageQueueResponse::messages(int index) const {
  // @@protoc_insertion_point(field_get:e8.SubscribeRealTimeMessageQueueResponse.messages)
  return messages_.Get(index);
}
inline ::e8::RealTimeMessage* SubscribeRealTimeMessageQueueResponse::add_messages() {
  // @@protoc_insertion_point(field_add:e8.SubscribeRealTimeMessageQueueResponse.messages)
  return messages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::e8::RealTimeMessage >&
SubscribeRealTimeMessageQueueResponse::messages() const {
  // @@protoc_insertion_point(field_list:e8.SubscribeRealTimeMessageQueueResponse.messages)
  return messages_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace e8

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_service_5fmessage_5fsubscriber_2eproto
