// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service_socialnetwork.proto

#ifndef PROTOBUF_INCLUDED_service_5fsocialnetwork_2eproto
#define PROTOBUF_INCLUDED_service_5fsocialnetwork_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "user_profile.pb.h"
#include "user_relation.pb.h"
#include "pagination.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_service_5fsocialnetwork_2eproto 

namespace protobuf_service_5fsocialnetwork_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[12];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_service_5fsocialnetwork_2eproto
namespace e8 {
class DeleteContactRequest;
class DeleteContactRequestDefaultTypeInternal;
extern DeleteContactRequestDefaultTypeInternal _DeleteContactRequest_default_instance_;
class DeleteContactResponse;
class DeleteContactResponseDefaultTypeInternal;
extern DeleteContactResponseDefaultTypeInternal _DeleteContactResponse_default_instance_;
class DeleteInvitationRequest;
class DeleteInvitationRequestDefaultTypeInternal;
extern DeleteInvitationRequestDefaultTypeInternal _DeleteInvitationRequest_default_instance_;
class DeleteInvitationResponse;
class DeleteInvitationResponseDefaultTypeInternal;
extern DeleteInvitationResponseDefaultTypeInternal _DeleteInvitationResponse_default_instance_;
class GetRelatedUserListRequest;
class GetRelatedUserListRequestDefaultTypeInternal;
extern GetRelatedUserListRequestDefaultTypeInternal _GetRelatedUserListRequest_default_instance_;
class GetRelatedUserListResponse;
class GetRelatedUserListResponseDefaultTypeInternal;
extern GetRelatedUserListResponseDefaultTypeInternal _GetRelatedUserListResponse_default_instance_;
class GetUserRelationsRequest;
class GetUserRelationsRequestDefaultTypeInternal;
extern GetUserRelationsRequestDefaultTypeInternal _GetUserRelationsRequest_default_instance_;
class GetUserRelationsResponse;
class GetUserRelationsResponseDefaultTypeInternal;
extern GetUserRelationsResponseDefaultTypeInternal _GetUserRelationsResponse_default_instance_;
class ProcessInvitationRequest;
class ProcessInvitationRequestDefaultTypeInternal;
extern ProcessInvitationRequestDefaultTypeInternal _ProcessInvitationRequest_default_instance_;
class ProcessInvitationResponse;
class ProcessInvitationResponseDefaultTypeInternal;
extern ProcessInvitationResponseDefaultTypeInternal _ProcessInvitationResponse_default_instance_;
class SendInvitationRequest;
class SendInvitationRequestDefaultTypeInternal;
extern SendInvitationRequestDefaultTypeInternal _SendInvitationRequest_default_instance_;
class SendInvitationResponse;
class SendInvitationResponseDefaultTypeInternal;
extern SendInvitationResponseDefaultTypeInternal _SendInvitationResponse_default_instance_;
}  // namespace e8
namespace google {
namespace protobuf {
template<> ::e8::DeleteContactRequest* Arena::CreateMaybeMessage<::e8::DeleteContactRequest>(Arena*);
template<> ::e8::DeleteContactResponse* Arena::CreateMaybeMessage<::e8::DeleteContactResponse>(Arena*);
template<> ::e8::DeleteInvitationRequest* Arena::CreateMaybeMessage<::e8::DeleteInvitationRequest>(Arena*);
template<> ::e8::DeleteInvitationResponse* Arena::CreateMaybeMessage<::e8::DeleteInvitationResponse>(Arena*);
template<> ::e8::GetRelatedUserListRequest* Arena::CreateMaybeMessage<::e8::GetRelatedUserListRequest>(Arena*);
template<> ::e8::GetRelatedUserListResponse* Arena::CreateMaybeMessage<::e8::GetRelatedUserListResponse>(Arena*);
template<> ::e8::GetUserRelationsRequest* Arena::CreateMaybeMessage<::e8::GetUserRelationsRequest>(Arena*);
template<> ::e8::GetUserRelationsResponse* Arena::CreateMaybeMessage<::e8::GetUserRelationsResponse>(Arena*);
template<> ::e8::ProcessInvitationRequest* Arena::CreateMaybeMessage<::e8::ProcessInvitationRequest>(Arena*);
template<> ::e8::ProcessInvitationResponse* Arena::CreateMaybeMessage<::e8::ProcessInvitationResponse>(Arena*);
template<> ::e8::SendInvitationRequest* Arena::CreateMaybeMessage<::e8::SendInvitationRequest>(Arena*);
template<> ::e8::SendInvitationResponse* Arena::CreateMaybeMessage<::e8::SendInvitationResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace e8 {

// ===================================================================

class GetUserRelationsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.GetUserRelationsRequest) */ {
 public:
  GetUserRelationsRequest();
  virtual ~GetUserRelationsRequest();

  GetUserRelationsRequest(const GetUserRelationsRequest& from);

  inline GetUserRelationsRequest& operator=(const GetUserRelationsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetUserRelationsRequest(GetUserRelationsRequest&& from) noexcept
    : GetUserRelationsRequest() {
    *this = ::std::move(from);
  }

  inline GetUserRelationsRequest& operator=(GetUserRelationsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUserRelationsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetUserRelationsRequest* internal_default_instance() {
    return reinterpret_cast<const GetUserRelationsRequest*>(
               &_GetUserRelationsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(GetUserRelationsRequest* other);
  friend void swap(GetUserRelationsRequest& a, GetUserRelationsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetUserRelationsRequest* New() const final {
    return CreateMaybeMessage<GetUserRelationsRequest>(NULL);
  }

  GetUserRelationsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetUserRelationsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetUserRelationsRequest& from);
  void MergeFrom(const GetUserRelationsRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetUserRelationsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 target_user_id = 1;
  void clear_target_user_id();
  static const int kTargetUserIdFieldNumber = 1;
  ::google::protobuf::int64 target_user_id() const;
  void set_target_user_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:e8.GetUserRelationsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 target_user_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetUserRelationsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.GetUserRelationsResponse) */ {
 public:
  GetUserRelationsResponse();
  virtual ~GetUserRelationsResponse();

  GetUserRelationsResponse(const GetUserRelationsResponse& from);

  inline GetUserRelationsResponse& operator=(const GetUserRelationsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetUserRelationsResponse(GetUserRelationsResponse&& from) noexcept
    : GetUserRelationsResponse() {
    *this = ::std::move(from);
  }

  inline GetUserRelationsResponse& operator=(GetUserRelationsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUserRelationsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetUserRelationsResponse* internal_default_instance() {
    return reinterpret_cast<const GetUserRelationsResponse*>(
               &_GetUserRelationsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(GetUserRelationsResponse* other);
  friend void swap(GetUserRelationsResponse& a, GetUserRelationsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetUserRelationsResponse* New() const final {
    return CreateMaybeMessage<GetUserRelationsResponse>(NULL);
  }

  GetUserRelationsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetUserRelationsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetUserRelationsResponse& from);
  void MergeFrom(const GetUserRelationsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetUserRelationsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .e8.UserRelationRecord user_relations = 3;
  int user_relations_size() const;
  void clear_user_relations();
  static const int kUserRelationsFieldNumber = 3;
  ::e8::UserRelationRecord* mutable_user_relations(int index);
  ::google::protobuf::RepeatedPtrField< ::e8::UserRelationRecord >*
      mutable_user_relations();
  const ::e8::UserRelationRecord& user_relations(int index) const;
  ::e8::UserRelationRecord* add_user_relations();
  const ::google::protobuf::RepeatedPtrField< ::e8::UserRelationRecord >&
      user_relations() const;

  // int64 source_user_id = 1;
  void clear_source_user_id();
  static const int kSourceUserIdFieldNumber = 1;
  ::google::protobuf::int64 source_user_id() const;
  void set_source_user_id(::google::protobuf::int64 value);

  // int64 target_user_id = 2;
  void clear_target_user_id();
  static const int kTargetUserIdFieldNumber = 2;
  ::google::protobuf::int64 target_user_id() const;
  void set_target_user_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:e8.GetUserRelationsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::e8::UserRelationRecord > user_relations_;
  ::google::protobuf::int64 source_user_id_;
  ::google::protobuf::int64 target_user_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendInvitationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.SendInvitationRequest) */ {
 public:
  SendInvitationRequest();
  virtual ~SendInvitationRequest();

  SendInvitationRequest(const SendInvitationRequest& from);

  inline SendInvitationRequest& operator=(const SendInvitationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendInvitationRequest(SendInvitationRequest&& from) noexcept
    : SendInvitationRequest() {
    *this = ::std::move(from);
  }

  inline SendInvitationRequest& operator=(SendInvitationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SendInvitationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendInvitationRequest* internal_default_instance() {
    return reinterpret_cast<const SendInvitationRequest*>(
               &_SendInvitationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(SendInvitationRequest* other);
  friend void swap(SendInvitationRequest& a, SendInvitationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendInvitationRequest* New() const final {
    return CreateMaybeMessage<SendInvitationRequest>(NULL);
  }

  SendInvitationRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SendInvitationRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SendInvitationRequest& from);
  void MergeFrom(const SendInvitationRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendInvitationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 invitee_user_id = 1;
  void clear_invitee_user_id();
  static const int kInviteeUserIdFieldNumber = 1;
  ::google::protobuf::int64 invitee_user_id() const;
  void set_invitee_user_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:e8.SendInvitationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 invitee_user_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendInvitationResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.SendInvitationResponse) */ {
 public:
  SendInvitationResponse();
  virtual ~SendInvitationResponse();

  SendInvitationResponse(const SendInvitationResponse& from);

  inline SendInvitationResponse& operator=(const SendInvitationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendInvitationResponse(SendInvitationResponse&& from) noexcept
    : SendInvitationResponse() {
    *this = ::std::move(from);
  }

  inline SendInvitationResponse& operator=(SendInvitationResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SendInvitationResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendInvitationResponse* internal_default_instance() {
    return reinterpret_cast<const SendInvitationResponse*>(
               &_SendInvitationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(SendInvitationResponse* other);
  friend void swap(SendInvitationResponse& a, SendInvitationResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendInvitationResponse* New() const final {
    return CreateMaybeMessage<SendInvitationResponse>(NULL);
  }

  SendInvitationResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SendInvitationResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SendInvitationResponse& from);
  void MergeFrom(const SendInvitationResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendInvitationResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:e8.SendInvitationResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteInvitationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.DeleteInvitationRequest) */ {
 public:
  DeleteInvitationRequest();
  virtual ~DeleteInvitationRequest();

  DeleteInvitationRequest(const DeleteInvitationRequest& from);

  inline DeleteInvitationRequest& operator=(const DeleteInvitationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteInvitationRequest(DeleteInvitationRequest&& from) noexcept
    : DeleteInvitationRequest() {
    *this = ::std::move(from);
  }

  inline DeleteInvitationRequest& operator=(DeleteInvitationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteInvitationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteInvitationRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteInvitationRequest*>(
               &_DeleteInvitationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(DeleteInvitationRequest* other);
  friend void swap(DeleteInvitationRequest& a, DeleteInvitationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteInvitationRequest* New() const final {
    return CreateMaybeMessage<DeleteInvitationRequest>(NULL);
  }

  DeleteInvitationRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteInvitationRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteInvitationRequest& from);
  void MergeFrom(const DeleteInvitationRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteInvitationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 invitee_user_id = 1;
  void clear_invitee_user_id();
  static const int kInviteeUserIdFieldNumber = 1;
  ::google::protobuf::int64 invitee_user_id() const;
  void set_invitee_user_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:e8.DeleteInvitationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 invitee_user_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteInvitationResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.DeleteInvitationResponse) */ {
 public:
  DeleteInvitationResponse();
  virtual ~DeleteInvitationResponse();

  DeleteInvitationResponse(const DeleteInvitationResponse& from);

  inline DeleteInvitationResponse& operator=(const DeleteInvitationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteInvitationResponse(DeleteInvitationResponse&& from) noexcept
    : DeleteInvitationResponse() {
    *this = ::std::move(from);
  }

  inline DeleteInvitationResponse& operator=(DeleteInvitationResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteInvitationResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteInvitationResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteInvitationResponse*>(
               &_DeleteInvitationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(DeleteInvitationResponse* other);
  friend void swap(DeleteInvitationResponse& a, DeleteInvitationResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteInvitationResponse* New() const final {
    return CreateMaybeMessage<DeleteInvitationResponse>(NULL);
  }

  DeleteInvitationResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteInvitationResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteInvitationResponse& from);
  void MergeFrom(const DeleteInvitationResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteInvitationResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:e8.DeleteInvitationResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProcessInvitationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.ProcessInvitationRequest) */ {
 public:
  ProcessInvitationRequest();
  virtual ~ProcessInvitationRequest();

  ProcessInvitationRequest(const ProcessInvitationRequest& from);

  inline ProcessInvitationRequest& operator=(const ProcessInvitationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProcessInvitationRequest(ProcessInvitationRequest&& from) noexcept
    : ProcessInvitationRequest() {
    *this = ::std::move(from);
  }

  inline ProcessInvitationRequest& operator=(ProcessInvitationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProcessInvitationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProcessInvitationRequest* internal_default_instance() {
    return reinterpret_cast<const ProcessInvitationRequest*>(
               &_ProcessInvitationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(ProcessInvitationRequest* other);
  friend void swap(ProcessInvitationRequest& a, ProcessInvitationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProcessInvitationRequest* New() const final {
    return CreateMaybeMessage<ProcessInvitationRequest>(NULL);
  }

  ProcessInvitationRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProcessInvitationRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProcessInvitationRequest& from);
  void MergeFrom(const ProcessInvitationRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProcessInvitationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 inviter_user_id = 1;
  void clear_inviter_user_id();
  static const int kInviterUserIdFieldNumber = 1;
  ::google::protobuf::int64 inviter_user_id() const;
  void set_inviter_user_id(::google::protobuf::int64 value);

  // bool accept = 2;
  void clear_accept();
  static const int kAcceptFieldNumber = 2;
  bool accept() const;
  void set_accept(bool value);

  // @@protoc_insertion_point(class_scope:e8.ProcessInvitationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 inviter_user_id_;
  bool accept_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProcessInvitationResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.ProcessInvitationResponse) */ {
 public:
  ProcessInvitationResponse();
  virtual ~ProcessInvitationResponse();

  ProcessInvitationResponse(const ProcessInvitationResponse& from);

  inline ProcessInvitationResponse& operator=(const ProcessInvitationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProcessInvitationResponse(ProcessInvitationResponse&& from) noexcept
    : ProcessInvitationResponse() {
    *this = ::std::move(from);
  }

  inline ProcessInvitationResponse& operator=(ProcessInvitationResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProcessInvitationResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProcessInvitationResponse* internal_default_instance() {
    return reinterpret_cast<const ProcessInvitationResponse*>(
               &_ProcessInvitationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(ProcessInvitationResponse* other);
  friend void swap(ProcessInvitationResponse& a, ProcessInvitationResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProcessInvitationResponse* New() const final {
    return CreateMaybeMessage<ProcessInvitationResponse>(NULL);
  }

  ProcessInvitationResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProcessInvitationResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProcessInvitationResponse& from);
  void MergeFrom(const ProcessInvitationResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProcessInvitationResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:e8.ProcessInvitationResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteContactRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.DeleteContactRequest) */ {
 public:
  DeleteContactRequest();
  virtual ~DeleteContactRequest();

  DeleteContactRequest(const DeleteContactRequest& from);

  inline DeleteContactRequest& operator=(const DeleteContactRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteContactRequest(DeleteContactRequest&& from) noexcept
    : DeleteContactRequest() {
    *this = ::std::move(from);
  }

  inline DeleteContactRequest& operator=(DeleteContactRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteContactRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteContactRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteContactRequest*>(
               &_DeleteContactRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(DeleteContactRequest* other);
  friend void swap(DeleteContactRequest& a, DeleteContactRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteContactRequest* New() const final {
    return CreateMaybeMessage<DeleteContactRequest>(NULL);
  }

  DeleteContactRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteContactRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteContactRequest& from);
  void MergeFrom(const DeleteContactRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteContactRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 deleted_contact_user_id = 1;
  void clear_deleted_contact_user_id();
  static const int kDeletedContactUserIdFieldNumber = 1;
  ::google::protobuf::int64 deleted_contact_user_id() const;
  void set_deleted_contact_user_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:e8.DeleteContactRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 deleted_contact_user_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteContactResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.DeleteContactResponse) */ {
 public:
  DeleteContactResponse();
  virtual ~DeleteContactResponse();

  DeleteContactResponse(const DeleteContactResponse& from);

  inline DeleteContactResponse& operator=(const DeleteContactResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteContactResponse(DeleteContactResponse&& from) noexcept
    : DeleteContactResponse() {
    *this = ::std::move(from);
  }

  inline DeleteContactResponse& operator=(DeleteContactResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteContactResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteContactResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteContactResponse*>(
               &_DeleteContactResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(DeleteContactResponse* other);
  friend void swap(DeleteContactResponse& a, DeleteContactResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteContactResponse* New() const final {
    return CreateMaybeMessage<DeleteContactResponse>(NULL);
  }

  DeleteContactResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteContactResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteContactResponse& from);
  void MergeFrom(const DeleteContactResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteContactResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:e8.DeleteContactResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetRelatedUserListRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.GetRelatedUserListRequest) */ {
 public:
  GetRelatedUserListRequest();
  virtual ~GetRelatedUserListRequest();

  GetRelatedUserListRequest(const GetRelatedUserListRequest& from);

  inline GetRelatedUserListRequest& operator=(const GetRelatedUserListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetRelatedUserListRequest(GetRelatedUserListRequest&& from) noexcept
    : GetRelatedUserListRequest() {
    *this = ::std::move(from);
  }

  inline GetRelatedUserListRequest& operator=(GetRelatedUserListRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRelatedUserListRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetRelatedUserListRequest* internal_default_instance() {
    return reinterpret_cast<const GetRelatedUserListRequest*>(
               &_GetRelatedUserListRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(GetRelatedUserListRequest* other);
  friend void swap(GetRelatedUserListRequest& a, GetRelatedUserListRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetRelatedUserListRequest* New() const final {
    return CreateMaybeMessage<GetRelatedUserListRequest>(NULL);
  }

  GetRelatedUserListRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetRelatedUserListRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetRelatedUserListRequest& from);
  void MergeFrom(const GetRelatedUserListRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetRelatedUserListRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .e8.UserRelation relation_filter = 2;
  int relation_filter_size() const;
  void clear_relation_filter();
  static const int kRelationFilterFieldNumber = 2;
  ::e8::UserRelation relation_filter(int index) const;
  void set_relation_filter(int index, ::e8::UserRelation value);
  void add_relation_filter(::e8::UserRelation value);
  const ::google::protobuf::RepeatedField<int>& relation_filter() const;
  ::google::protobuf::RepeatedField<int>* mutable_relation_filter();

  // .e8.Pagination pagination = 1;
  bool has_pagination() const;
  void clear_pagination();
  static const int kPaginationFieldNumber = 1;
  private:
  const ::e8::Pagination& _internal_pagination() const;
  public:
  const ::e8::Pagination& pagination() const;
  ::e8::Pagination* release_pagination();
  ::e8::Pagination* mutable_pagination();
  void set_allocated_pagination(::e8::Pagination* pagination);

  // @@protoc_insertion_point(class_scope:e8.GetRelatedUserListRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField<int> relation_filter_;
  mutable int _relation_filter_cached_byte_size_;
  ::e8::Pagination* pagination_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetRelatedUserListResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:e8.GetRelatedUserListResponse) */ {
 public:
  GetRelatedUserListResponse();
  virtual ~GetRelatedUserListResponse();

  GetRelatedUserListResponse(const GetRelatedUserListResponse& from);

  inline GetRelatedUserListResponse& operator=(const GetRelatedUserListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetRelatedUserListResponse(GetRelatedUserListResponse&& from) noexcept
    : GetRelatedUserListResponse() {
    *this = ::std::move(from);
  }

  inline GetRelatedUserListResponse& operator=(GetRelatedUserListResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRelatedUserListResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetRelatedUserListResponse* internal_default_instance() {
    return reinterpret_cast<const GetRelatedUserListResponse*>(
               &_GetRelatedUserListResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(GetRelatedUserListResponse* other);
  friend void swap(GetRelatedUserListResponse& a, GetRelatedUserListResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetRelatedUserListResponse* New() const final {
    return CreateMaybeMessage<GetRelatedUserListResponse>(NULL);
  }

  GetRelatedUserListResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetRelatedUserListResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetRelatedUserListResponse& from);
  void MergeFrom(const GetRelatedUserListResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetRelatedUserListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .e8.UserPublicProfile user_profiles = 1;
  int user_profiles_size() const;
  void clear_user_profiles();
  static const int kUserProfilesFieldNumber = 1;
  ::e8::UserPublicProfile* mutable_user_profiles(int index);
  ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile >*
      mutable_user_profiles();
  const ::e8::UserPublicProfile& user_profiles(int index) const;
  ::e8::UserPublicProfile* add_user_profiles();
  const ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile >&
      user_profiles() const;

  // @@protoc_insertion_point(class_scope:e8.GetRelatedUserListResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile > user_profiles_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_service_5fsocialnetwork_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GetUserRelationsRequest

// int64 target_user_id = 1;
inline void GetUserRelationsRequest::clear_target_user_id() {
  target_user_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetUserRelationsRequest::target_user_id() const {
  // @@protoc_insertion_point(field_get:e8.GetUserRelationsRequest.target_user_id)
  return target_user_id_;
}
inline void GetUserRelationsRequest::set_target_user_id(::google::protobuf::int64 value) {
  
  target_user_id_ = value;
  // @@protoc_insertion_point(field_set:e8.GetUserRelationsRequest.target_user_id)
}

// -------------------------------------------------------------------

// GetUserRelationsResponse

// int64 source_user_id = 1;
inline void GetUserRelationsResponse::clear_source_user_id() {
  source_user_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetUserRelationsResponse::source_user_id() const {
  // @@protoc_insertion_point(field_get:e8.GetUserRelationsResponse.source_user_id)
  return source_user_id_;
}
inline void GetUserRelationsResponse::set_source_user_id(::google::protobuf::int64 value) {
  
  source_user_id_ = value;
  // @@protoc_insertion_point(field_set:e8.GetUserRelationsResponse.source_user_id)
}

// int64 target_user_id = 2;
inline void GetUserRelationsResponse::clear_target_user_id() {
  target_user_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetUserRelationsResponse::target_user_id() const {
  // @@protoc_insertion_point(field_get:e8.GetUserRelationsResponse.target_user_id)
  return target_user_id_;
}
inline void GetUserRelationsResponse::set_target_user_id(::google::protobuf::int64 value) {
  
  target_user_id_ = value;
  // @@protoc_insertion_point(field_set:e8.GetUserRelationsResponse.target_user_id)
}

// repeated .e8.UserRelationRecord user_relations = 3;
inline int GetUserRelationsResponse::user_relations_size() const {
  return user_relations_.size();
}
inline ::e8::UserRelationRecord* GetUserRelationsResponse::mutable_user_relations(int index) {
  // @@protoc_insertion_point(field_mutable:e8.GetUserRelationsResponse.user_relations)
  return user_relations_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::e8::UserRelationRecord >*
GetUserRelationsResponse::mutable_user_relations() {
  // @@protoc_insertion_point(field_mutable_list:e8.GetUserRelationsResponse.user_relations)
  return &user_relations_;
}
inline const ::e8::UserRelationRecord& GetUserRelationsResponse::user_relations(int index) const {
  // @@protoc_insertion_point(field_get:e8.GetUserRelationsResponse.user_relations)
  return user_relations_.Get(index);
}
inline ::e8::UserRelationRecord* GetUserRelationsResponse::add_user_relations() {
  // @@protoc_insertion_point(field_add:e8.GetUserRelationsResponse.user_relations)
  return user_relations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::e8::UserRelationRecord >&
GetUserRelationsResponse::user_relations() const {
  // @@protoc_insertion_point(field_list:e8.GetUserRelationsResponse.user_relations)
  return user_relations_;
}

// -------------------------------------------------------------------

// SendInvitationRequest

// int64 invitee_user_id = 1;
inline void SendInvitationRequest::clear_invitee_user_id() {
  invitee_user_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SendInvitationRequest::invitee_user_id() const {
  // @@protoc_insertion_point(field_get:e8.SendInvitationRequest.invitee_user_id)
  return invitee_user_id_;
}
inline void SendInvitationRequest::set_invitee_user_id(::google::protobuf::int64 value) {
  
  invitee_user_id_ = value;
  // @@protoc_insertion_point(field_set:e8.SendInvitationRequest.invitee_user_id)
}

// -------------------------------------------------------------------

// SendInvitationResponse

// -------------------------------------------------------------------

// DeleteInvitationRequest

// int64 invitee_user_id = 1;
inline void DeleteInvitationRequest::clear_invitee_user_id() {
  invitee_user_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 DeleteInvitationRequest::invitee_user_id() const {
  // @@protoc_insertion_point(field_get:e8.DeleteInvitationRequest.invitee_user_id)
  return invitee_user_id_;
}
inline void DeleteInvitationRequest::set_invitee_user_id(::google::protobuf::int64 value) {
  
  invitee_user_id_ = value;
  // @@protoc_insertion_point(field_set:e8.DeleteInvitationRequest.invitee_user_id)
}

// -------------------------------------------------------------------

// DeleteInvitationResponse

// -------------------------------------------------------------------

// ProcessInvitationRequest

// int64 inviter_user_id = 1;
inline void ProcessInvitationRequest::clear_inviter_user_id() {
  inviter_user_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ProcessInvitationRequest::inviter_user_id() const {
  // @@protoc_insertion_point(field_get:e8.ProcessInvitationRequest.inviter_user_id)
  return inviter_user_id_;
}
inline void ProcessInvitationRequest::set_inviter_user_id(::google::protobuf::int64 value) {
  
  inviter_user_id_ = value;
  // @@protoc_insertion_point(field_set:e8.ProcessInvitationRequest.inviter_user_id)
}

// bool accept = 2;
inline void ProcessInvitationRequest::clear_accept() {
  accept_ = false;
}
inline bool ProcessInvitationRequest::accept() const {
  // @@protoc_insertion_point(field_get:e8.ProcessInvitationRequest.accept)
  return accept_;
}
inline void ProcessInvitationRequest::set_accept(bool value) {
  
  accept_ = value;
  // @@protoc_insertion_point(field_set:e8.ProcessInvitationRequest.accept)
}

// -------------------------------------------------------------------

// ProcessInvitationResponse

// -------------------------------------------------------------------

// DeleteContactRequest

// int64 deleted_contact_user_id = 1;
inline void DeleteContactRequest::clear_deleted_contact_user_id() {
  deleted_contact_user_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 DeleteContactRequest::deleted_contact_user_id() const {
  // @@protoc_insertion_point(field_get:e8.DeleteContactRequest.deleted_contact_user_id)
  return deleted_contact_user_id_;
}
inline void DeleteContactRequest::set_deleted_contact_user_id(::google::protobuf::int64 value) {
  
  deleted_contact_user_id_ = value;
  // @@protoc_insertion_point(field_set:e8.DeleteContactRequest.deleted_contact_user_id)
}

// -------------------------------------------------------------------

// DeleteContactResponse

// -------------------------------------------------------------------

// GetRelatedUserListRequest

// .e8.Pagination pagination = 1;
inline bool GetRelatedUserListRequest::has_pagination() const {
  return this != internal_default_instance() && pagination_ != NULL;
}
inline const ::e8::Pagination& GetRelatedUserListRequest::_internal_pagination() const {
  return *pagination_;
}
inline const ::e8::Pagination& GetRelatedUserListRequest::pagination() const {
  const ::e8::Pagination* p = pagination_;
  // @@protoc_insertion_point(field_get:e8.GetRelatedUserListRequest.pagination)
  return p != NULL ? *p : *reinterpret_cast<const ::e8::Pagination*>(
      &::e8::_Pagination_default_instance_);
}
inline ::e8::Pagination* GetRelatedUserListRequest::release_pagination() {
  // @@protoc_insertion_point(field_release:e8.GetRelatedUserListRequest.pagination)
  
  ::e8::Pagination* temp = pagination_;
  pagination_ = NULL;
  return temp;
}
inline ::e8::Pagination* GetRelatedUserListRequest::mutable_pagination() {
  
  if (pagination_ == NULL) {
    auto* p = CreateMaybeMessage<::e8::Pagination>(GetArenaNoVirtual());
    pagination_ = p;
  }
  // @@protoc_insertion_point(field_mutable:e8.GetRelatedUserListRequest.pagination)
  return pagination_;
}
inline void GetRelatedUserListRequest::set_allocated_pagination(::e8::Pagination* pagination) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pagination_);
  }
  if (pagination) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pagination = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pagination, submessage_arena);
    }
    
  } else {
    
  }
  pagination_ = pagination;
  // @@protoc_insertion_point(field_set_allocated:e8.GetRelatedUserListRequest.pagination)
}

// repeated .e8.UserRelation relation_filter = 2;
inline int GetRelatedUserListRequest::relation_filter_size() const {
  return relation_filter_.size();
}
inline void GetRelatedUserListRequest::clear_relation_filter() {
  relation_filter_.Clear();
}
inline ::e8::UserRelation GetRelatedUserListRequest::relation_filter(int index) const {
  // @@protoc_insertion_point(field_get:e8.GetRelatedUserListRequest.relation_filter)
  return static_cast< ::e8::UserRelation >(relation_filter_.Get(index));
}
inline void GetRelatedUserListRequest::set_relation_filter(int index, ::e8::UserRelation value) {
  relation_filter_.Set(index, value);
  // @@protoc_insertion_point(field_set:e8.GetRelatedUserListRequest.relation_filter)
}
inline void GetRelatedUserListRequest::add_relation_filter(::e8::UserRelation value) {
  relation_filter_.Add(value);
  // @@protoc_insertion_point(field_add:e8.GetRelatedUserListRequest.relation_filter)
}
inline const ::google::protobuf::RepeatedField<int>&
GetRelatedUserListRequest::relation_filter() const {
  // @@protoc_insertion_point(field_list:e8.GetRelatedUserListRequest.relation_filter)
  return relation_filter_;
}
inline ::google::protobuf::RepeatedField<int>*
GetRelatedUserListRequest::mutable_relation_filter() {
  // @@protoc_insertion_point(field_mutable_list:e8.GetRelatedUserListRequest.relation_filter)
  return &relation_filter_;
}

// -------------------------------------------------------------------

// GetRelatedUserListResponse

// repeated .e8.UserPublicProfile user_profiles = 1;
inline int GetRelatedUserListResponse::user_profiles_size() const {
  return user_profiles_.size();
}
inline ::e8::UserPublicProfile* GetRelatedUserListResponse::mutable_user_profiles(int index) {
  // @@protoc_insertion_point(field_mutable:e8.GetRelatedUserListResponse.user_profiles)
  return user_profiles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile >*
GetRelatedUserListResponse::mutable_user_profiles() {
  // @@protoc_insertion_point(field_mutable_list:e8.GetRelatedUserListResponse.user_profiles)
  return &user_profiles_;
}
inline const ::e8::UserPublicProfile& GetRelatedUserListResponse::user_profiles(int index) const {
  // @@protoc_insertion_point(field_get:e8.GetRelatedUserListResponse.user_profiles)
  return user_profiles_.Get(index);
}
inline ::e8::UserPublicProfile* GetRelatedUserListResponse::add_user_profiles() {
  // @@protoc_insertion_point(field_add:e8.GetRelatedUserListResponse.user_profiles)
  return user_profiles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::e8::UserPublicProfile >&
GetRelatedUserListResponse::user_profiles() const {
  // @@protoc_insertion_point(field_list:e8.GetRelatedUserListResponse.user_profiles)
  return user_profiles_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace e8

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_service_5fsocialnetwork_2eproto
