// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service_file.proto

#include "service_file.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_file_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_file_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FileChunk;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_file_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_FileDescriptor;
}  // namespace protobuf_file_2eproto
namespace e8 {
class UploadFileRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UploadFileRequest>
      _instance;
} _UploadFileRequest_default_instance_;
class UploadFileResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UploadFileResponse>
      _instance;
} _UploadFileResponse_default_instance_;
class DownloadFileRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DownloadFileRequest>
      _instance;
} _DownloadFileRequest_default_instance_;
class DownloadFileResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DownloadFileResponse>
      _instance;
} _DownloadFileResponse_default_instance_;
}  // namespace e8
namespace protobuf_service_5ffile_2eproto {
static void InitDefaultsUploadFileRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_UploadFileRequest_default_instance_;
    new (ptr) ::e8::UploadFileRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::UploadFileRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UploadFileRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUploadFileRequest}, {
      &protobuf_file_2eproto::scc_info_FileDescriptor.base,
      &protobuf_file_2eproto::scc_info_FileChunk.base,}};

static void InitDefaultsUploadFileResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_UploadFileResponse_default_instance_;
    new (ptr) ::e8::UploadFileResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::UploadFileResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UploadFileResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUploadFileResponse}, {}};

static void InitDefaultsDownloadFileRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_DownloadFileRequest_default_instance_;
    new (ptr) ::e8::DownloadFileRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::DownloadFileRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DownloadFileRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDownloadFileRequest}, {
      &protobuf_file_2eproto::scc_info_FileDescriptor.base,}};

static void InitDefaultsDownloadFileResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_DownloadFileResponse_default_instance_;
    new (ptr) ::e8::DownloadFileResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::DownloadFileResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_DownloadFileResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDownloadFileResponse}, {
      &protobuf_file_2eproto::scc_info_FileDescriptor.base,
      &protobuf_file_2eproto::scc_info_FileChunk.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_UploadFileRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UploadFileResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DownloadFileRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DownloadFileResponse.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::UploadFileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::UploadFileRequest, file_descriptor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::UploadFileRequest, current_chunk_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::UploadFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::DownloadFileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::DownloadFileRequest, file_descriptor_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::DownloadFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::DownloadFileResponse, file_descriptor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::DownloadFileResponse, current_chunk_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::e8::UploadFileRequest)},
  { 7, -1, sizeof(::e8::UploadFileResponse)},
  { 12, -1, sizeof(::e8::DownloadFileRequest)},
  { 18, -1, sizeof(::e8::DownloadFileResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_UploadFileRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_UploadFileResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_DownloadFileRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_DownloadFileResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "service_file.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022service_file.proto\022\002e8\032\nfile.proto\"f\n\021"
      "UploadFileRequest\022+\n\017file_descriptor\030\001 \001"
      "(\0132\022.e8.FileDescriptor\022$\n\rcurrent_chunk\030"
      "\002 \001(\0132\r.e8.FileChunk\"\024\n\022UploadFileRespon"
      "se\"B\n\023DownloadFileRequest\022+\n\017file_descri"
      "ptor\030\001 \001(\0132\022.e8.FileDescriptor\"i\n\024Downlo"
      "adFileResponse\022+\n\017file_descriptor\030\001 \001(\0132"
      "\022.e8.FileDescriptor\022$\n\rcurrent_chunk\030\002 \001"
      "(\0132\r.e8.FileChunk2\211\001\n\013FileService\0229\n\006Upl"
      "oad\022\025.e8.UploadFileRequest\032\026.e8.UploadFi"
      "leResponse(\001\022\?\n\010Download\022\027.e8.DownloadFi"
      "leRequest\032\030.e8.DownloadFileResponse0\001b\006p"
      "roto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 485);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "service_file.proto", &protobuf_RegisterTypes);
  ::protobuf_file_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_service_5ffile_2eproto
namespace e8 {

// ===================================================================

void UploadFileRequest::InitAsDefaultInstance() {
  ::e8::_UploadFileRequest_default_instance_._instance.get_mutable()->file_descriptor_ = const_cast< ::e8::FileDescriptor*>(
      ::e8::FileDescriptor::internal_default_instance());
  ::e8::_UploadFileRequest_default_instance_._instance.get_mutable()->current_chunk_ = const_cast< ::e8::FileChunk*>(
      ::e8::FileChunk::internal_default_instance());
}
void UploadFileRequest::clear_file_descriptor() {
  if (GetArenaNoVirtual() == NULL && file_descriptor_ != NULL) {
    delete file_descriptor_;
  }
  file_descriptor_ = NULL;
}
void UploadFileRequest::clear_current_chunk() {
  if (GetArenaNoVirtual() == NULL && current_chunk_ != NULL) {
    delete current_chunk_;
  }
  current_chunk_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UploadFileRequest::kFileDescriptorFieldNumber;
const int UploadFileRequest::kCurrentChunkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UploadFileRequest::UploadFileRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5ffile_2eproto::scc_info_UploadFileRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.UploadFileRequest)
}
UploadFileRequest::UploadFileRequest(const UploadFileRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_file_descriptor()) {
    file_descriptor_ = new ::e8::FileDescriptor(*from.file_descriptor_);
  } else {
    file_descriptor_ = NULL;
  }
  if (from.has_current_chunk()) {
    current_chunk_ = new ::e8::FileChunk(*from.current_chunk_);
  } else {
    current_chunk_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:e8.UploadFileRequest)
}

void UploadFileRequest::SharedCtor() {
  ::memset(&file_descriptor_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&current_chunk_) -
      reinterpret_cast<char*>(&file_descriptor_)) + sizeof(current_chunk_));
}

UploadFileRequest::~UploadFileRequest() {
  // @@protoc_insertion_point(destructor:e8.UploadFileRequest)
  SharedDtor();
}

void UploadFileRequest::SharedDtor() {
  if (this != internal_default_instance()) delete file_descriptor_;
  if (this != internal_default_instance()) delete current_chunk_;
}

void UploadFileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UploadFileRequest::descriptor() {
  ::protobuf_service_5ffile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5ffile_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UploadFileRequest& UploadFileRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5ffile_2eproto::scc_info_UploadFileRequest.base);
  return *internal_default_instance();
}


void UploadFileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.UploadFileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && file_descriptor_ != NULL) {
    delete file_descriptor_;
  }
  file_descriptor_ = NULL;
  if (GetArenaNoVirtual() == NULL && current_chunk_ != NULL) {
    delete current_chunk_;
  }
  current_chunk_ = NULL;
  _internal_metadata_.Clear();
}

bool UploadFileRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.UploadFileRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .e8.FileDescriptor file_descriptor = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_file_descriptor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .e8.FileChunk current_chunk = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_current_chunk()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.UploadFileRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.UploadFileRequest)
  return false;
#undef DO_
}

void UploadFileRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.UploadFileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .e8.FileDescriptor file_descriptor = 1;
  if (this->has_file_descriptor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_file_descriptor(), output);
  }

  // .e8.FileChunk current_chunk = 2;
  if (this->has_current_chunk()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_current_chunk(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.UploadFileRequest)
}

::google::protobuf::uint8* UploadFileRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.UploadFileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .e8.FileDescriptor file_descriptor = 1;
  if (this->has_file_descriptor()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_file_descriptor(), deterministic, target);
  }

  // .e8.FileChunk current_chunk = 2;
  if (this->has_current_chunk()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_current_chunk(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.UploadFileRequest)
  return target;
}

size_t UploadFileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.UploadFileRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .e8.FileDescriptor file_descriptor = 1;
  if (this->has_file_descriptor()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *file_descriptor_);
  }

  // .e8.FileChunk current_chunk = 2;
  if (this->has_current_chunk()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *current_chunk_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UploadFileRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.UploadFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UploadFileRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UploadFileRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.UploadFileRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.UploadFileRequest)
    MergeFrom(*source);
  }
}

void UploadFileRequest::MergeFrom(const UploadFileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.UploadFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_file_descriptor()) {
    mutable_file_descriptor()->::e8::FileDescriptor::MergeFrom(from.file_descriptor());
  }
  if (from.has_current_chunk()) {
    mutable_current_chunk()->::e8::FileChunk::MergeFrom(from.current_chunk());
  }
}

void UploadFileRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.UploadFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UploadFileRequest::CopyFrom(const UploadFileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.UploadFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadFileRequest::IsInitialized() const {
  return true;
}

void UploadFileRequest::Swap(UploadFileRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UploadFileRequest::InternalSwap(UploadFileRequest* other) {
  using std::swap;
  swap(file_descriptor_, other->file_descriptor_);
  swap(current_chunk_, other->current_chunk_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UploadFileRequest::GetMetadata() const {
  protobuf_service_5ffile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5ffile_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UploadFileResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UploadFileResponse::UploadFileResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5ffile_2eproto::scc_info_UploadFileResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.UploadFileResponse)
}
UploadFileResponse::UploadFileResponse(const UploadFileResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:e8.UploadFileResponse)
}

void UploadFileResponse::SharedCtor() {
}

UploadFileResponse::~UploadFileResponse() {
  // @@protoc_insertion_point(destructor:e8.UploadFileResponse)
  SharedDtor();
}

void UploadFileResponse::SharedDtor() {
}

void UploadFileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UploadFileResponse::descriptor() {
  ::protobuf_service_5ffile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5ffile_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UploadFileResponse& UploadFileResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5ffile_2eproto::scc_info_UploadFileResponse.base);
  return *internal_default_instance();
}


void UploadFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.UploadFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool UploadFileResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.UploadFileResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:e8.UploadFileResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.UploadFileResponse)
  return false;
#undef DO_
}

void UploadFileResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.UploadFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.UploadFileResponse)
}

::google::protobuf::uint8* UploadFileResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.UploadFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.UploadFileResponse)
  return target;
}

size_t UploadFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.UploadFileResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UploadFileResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.UploadFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UploadFileResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UploadFileResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.UploadFileResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.UploadFileResponse)
    MergeFrom(*source);
  }
}

void UploadFileResponse::MergeFrom(const UploadFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.UploadFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UploadFileResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.UploadFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UploadFileResponse::CopyFrom(const UploadFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.UploadFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadFileResponse::IsInitialized() const {
  return true;
}

void UploadFileResponse::Swap(UploadFileResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UploadFileResponse::InternalSwap(UploadFileResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UploadFileResponse::GetMetadata() const {
  protobuf_service_5ffile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5ffile_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DownloadFileRequest::InitAsDefaultInstance() {
  ::e8::_DownloadFileRequest_default_instance_._instance.get_mutable()->file_descriptor_ = const_cast< ::e8::FileDescriptor*>(
      ::e8::FileDescriptor::internal_default_instance());
}
void DownloadFileRequest::clear_file_descriptor() {
  if (GetArenaNoVirtual() == NULL && file_descriptor_ != NULL) {
    delete file_descriptor_;
  }
  file_descriptor_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DownloadFileRequest::kFileDescriptorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DownloadFileRequest::DownloadFileRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5ffile_2eproto::scc_info_DownloadFileRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.DownloadFileRequest)
}
DownloadFileRequest::DownloadFileRequest(const DownloadFileRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_file_descriptor()) {
    file_descriptor_ = new ::e8::FileDescriptor(*from.file_descriptor_);
  } else {
    file_descriptor_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:e8.DownloadFileRequest)
}

void DownloadFileRequest::SharedCtor() {
  file_descriptor_ = NULL;
}

DownloadFileRequest::~DownloadFileRequest() {
  // @@protoc_insertion_point(destructor:e8.DownloadFileRequest)
  SharedDtor();
}

void DownloadFileRequest::SharedDtor() {
  if (this != internal_default_instance()) delete file_descriptor_;
}

void DownloadFileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DownloadFileRequest::descriptor() {
  ::protobuf_service_5ffile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5ffile_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DownloadFileRequest& DownloadFileRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5ffile_2eproto::scc_info_DownloadFileRequest.base);
  return *internal_default_instance();
}


void DownloadFileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.DownloadFileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && file_descriptor_ != NULL) {
    delete file_descriptor_;
  }
  file_descriptor_ = NULL;
  _internal_metadata_.Clear();
}

bool DownloadFileRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.DownloadFileRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .e8.FileDescriptor file_descriptor = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_file_descriptor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.DownloadFileRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.DownloadFileRequest)
  return false;
#undef DO_
}

void DownloadFileRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.DownloadFileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .e8.FileDescriptor file_descriptor = 1;
  if (this->has_file_descriptor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_file_descriptor(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.DownloadFileRequest)
}

::google::protobuf::uint8* DownloadFileRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.DownloadFileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .e8.FileDescriptor file_descriptor = 1;
  if (this->has_file_descriptor()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_file_descriptor(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.DownloadFileRequest)
  return target;
}

size_t DownloadFileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.DownloadFileRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .e8.FileDescriptor file_descriptor = 1;
  if (this->has_file_descriptor()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *file_descriptor_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DownloadFileRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.DownloadFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DownloadFileRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DownloadFileRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.DownloadFileRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.DownloadFileRequest)
    MergeFrom(*source);
  }
}

void DownloadFileRequest::MergeFrom(const DownloadFileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.DownloadFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_file_descriptor()) {
    mutable_file_descriptor()->::e8::FileDescriptor::MergeFrom(from.file_descriptor());
  }
}

void DownloadFileRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.DownloadFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DownloadFileRequest::CopyFrom(const DownloadFileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.DownloadFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DownloadFileRequest::IsInitialized() const {
  return true;
}

void DownloadFileRequest::Swap(DownloadFileRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DownloadFileRequest::InternalSwap(DownloadFileRequest* other) {
  using std::swap;
  swap(file_descriptor_, other->file_descriptor_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DownloadFileRequest::GetMetadata() const {
  protobuf_service_5ffile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5ffile_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DownloadFileResponse::InitAsDefaultInstance() {
  ::e8::_DownloadFileResponse_default_instance_._instance.get_mutable()->file_descriptor_ = const_cast< ::e8::FileDescriptor*>(
      ::e8::FileDescriptor::internal_default_instance());
  ::e8::_DownloadFileResponse_default_instance_._instance.get_mutable()->current_chunk_ = const_cast< ::e8::FileChunk*>(
      ::e8::FileChunk::internal_default_instance());
}
void DownloadFileResponse::clear_file_descriptor() {
  if (GetArenaNoVirtual() == NULL && file_descriptor_ != NULL) {
    delete file_descriptor_;
  }
  file_descriptor_ = NULL;
}
void DownloadFileResponse::clear_current_chunk() {
  if (GetArenaNoVirtual() == NULL && current_chunk_ != NULL) {
    delete current_chunk_;
  }
  current_chunk_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DownloadFileResponse::kFileDescriptorFieldNumber;
const int DownloadFileResponse::kCurrentChunkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DownloadFileResponse::DownloadFileResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5ffile_2eproto::scc_info_DownloadFileResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.DownloadFileResponse)
}
DownloadFileResponse::DownloadFileResponse(const DownloadFileResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_file_descriptor()) {
    file_descriptor_ = new ::e8::FileDescriptor(*from.file_descriptor_);
  } else {
    file_descriptor_ = NULL;
  }
  if (from.has_current_chunk()) {
    current_chunk_ = new ::e8::FileChunk(*from.current_chunk_);
  } else {
    current_chunk_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:e8.DownloadFileResponse)
}

void DownloadFileResponse::SharedCtor() {
  ::memset(&file_descriptor_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&current_chunk_) -
      reinterpret_cast<char*>(&file_descriptor_)) + sizeof(current_chunk_));
}

DownloadFileResponse::~DownloadFileResponse() {
  // @@protoc_insertion_point(destructor:e8.DownloadFileResponse)
  SharedDtor();
}

void DownloadFileResponse::SharedDtor() {
  if (this != internal_default_instance()) delete file_descriptor_;
  if (this != internal_default_instance()) delete current_chunk_;
}

void DownloadFileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DownloadFileResponse::descriptor() {
  ::protobuf_service_5ffile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5ffile_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DownloadFileResponse& DownloadFileResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5ffile_2eproto::scc_info_DownloadFileResponse.base);
  return *internal_default_instance();
}


void DownloadFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.DownloadFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && file_descriptor_ != NULL) {
    delete file_descriptor_;
  }
  file_descriptor_ = NULL;
  if (GetArenaNoVirtual() == NULL && current_chunk_ != NULL) {
    delete current_chunk_;
  }
  current_chunk_ = NULL;
  _internal_metadata_.Clear();
}

bool DownloadFileResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.DownloadFileResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .e8.FileDescriptor file_descriptor = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_file_descriptor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .e8.FileChunk current_chunk = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_current_chunk()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.DownloadFileResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.DownloadFileResponse)
  return false;
#undef DO_
}

void DownloadFileResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.DownloadFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .e8.FileDescriptor file_descriptor = 1;
  if (this->has_file_descriptor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_file_descriptor(), output);
  }

  // .e8.FileChunk current_chunk = 2;
  if (this->has_current_chunk()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_current_chunk(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.DownloadFileResponse)
}

::google::protobuf::uint8* DownloadFileResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.DownloadFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .e8.FileDescriptor file_descriptor = 1;
  if (this->has_file_descriptor()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_file_descriptor(), deterministic, target);
  }

  // .e8.FileChunk current_chunk = 2;
  if (this->has_current_chunk()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_current_chunk(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.DownloadFileResponse)
  return target;
}

size_t DownloadFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.DownloadFileResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .e8.FileDescriptor file_descriptor = 1;
  if (this->has_file_descriptor()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *file_descriptor_);
  }

  // .e8.FileChunk current_chunk = 2;
  if (this->has_current_chunk()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *current_chunk_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DownloadFileResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.DownloadFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DownloadFileResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DownloadFileResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.DownloadFileResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.DownloadFileResponse)
    MergeFrom(*source);
  }
}

void DownloadFileResponse::MergeFrom(const DownloadFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.DownloadFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_file_descriptor()) {
    mutable_file_descriptor()->::e8::FileDescriptor::MergeFrom(from.file_descriptor());
  }
  if (from.has_current_chunk()) {
    mutable_current_chunk()->::e8::FileChunk::MergeFrom(from.current_chunk());
  }
}

void DownloadFileResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.DownloadFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DownloadFileResponse::CopyFrom(const DownloadFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.DownloadFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DownloadFileResponse::IsInitialized() const {
  return true;
}

void DownloadFileResponse::Swap(DownloadFileResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DownloadFileResponse::InternalSwap(DownloadFileResponse* other) {
  using std::swap;
  swap(file_descriptor_, other->file_descriptor_);
  swap(current_chunk_, other->current_chunk_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DownloadFileResponse::GetMetadata() const {
  protobuf_service_5ffile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5ffile_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace e8
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::UploadFileRequest* Arena::CreateMaybeMessage< ::e8::UploadFileRequest >(Arena* arena) {
  return Arena::CreateInternal< ::e8::UploadFileRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::UploadFileResponse* Arena::CreateMaybeMessage< ::e8::UploadFileResponse >(Arena* arena) {
  return Arena::CreateInternal< ::e8::UploadFileResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::DownloadFileRequest* Arena::CreateMaybeMessage< ::e8::DownloadFileRequest >(Arena* arena) {
  return Arena::CreateInternal< ::e8::DownloadFileRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::DownloadFileResponse* Arena::CreateMaybeMessage< ::e8::DownloadFileResponse >(Arena* arena) {
  return Arena::CreateInternal< ::e8::DownloadFileResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
