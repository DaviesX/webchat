// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service_chat_message.proto

#include "service_chat_message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_chat_5fmessage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chat_5fmessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ChatMessageEntry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chat_5fmessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ChatMessageThread;
}  // namespace protobuf_chat_5fmessage_2eproto
namespace protobuf_pagination_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_pagination_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Pagination;
}  // namespace protobuf_pagination_2eproto
namespace e8 {
class SendChatMessageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendChatMessageRequest>
      _instance;
} _SendChatMessageRequest_default_instance_;
class SendChatMessageResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendChatMessageResponse>
      _instance;
} _SendChatMessageResponse_default_instance_;
class GetChatMessageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetChatMessageRequest>
      _instance;
} _GetChatMessageRequest_default_instance_;
class GetChatMessageResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetChatMessageResponse>
      _instance;
} _GetChatMessageResponse_default_instance_;
}  // namespace e8
namespace protobuf_service_5fchat_5fmessage_2eproto {
static void InitDefaultsSendChatMessageRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_SendChatMessageRequest_default_instance_;
    new (ptr) ::e8::SendChatMessageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::SendChatMessageRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SendChatMessageRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSendChatMessageRequest}, {
      &protobuf_chat_5fmessage_2eproto::scc_info_ChatMessageEntry.base,}};

static void InitDefaultsSendChatMessageResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_SendChatMessageResponse_default_instance_;
    new (ptr) ::e8::SendChatMessageResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::SendChatMessageResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SendChatMessageResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSendChatMessageResponse}, {
      &protobuf_chat_5fmessage_2eproto::scc_info_ChatMessageThread.base,}};

static void InitDefaultsGetChatMessageRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_GetChatMessageRequest_default_instance_;
    new (ptr) ::e8::GetChatMessageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::GetChatMessageRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetChatMessageRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetChatMessageRequest}, {
      &protobuf_pagination_2eproto::scc_info_Pagination.base,}};

static void InitDefaultsGetChatMessageResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_GetChatMessageResponse_default_instance_;
    new (ptr) ::e8::GetChatMessageResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::GetChatMessageResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetChatMessageResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetChatMessageResponse}, {
      &protobuf_chat_5fmessage_2eproto::scc_info_ChatMessageThread.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_SendChatMessageRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SendChatMessageResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetChatMessageRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetChatMessageResponse.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::SendChatMessageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::SendChatMessageRequest, channel_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::SendChatMessageRequest, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::SendChatMessageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::SendChatMessageResponse, updated_thread_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetChatMessageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetChatMessageRequest, channel_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetChatMessageRequest, pagination_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetChatMessageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::GetChatMessageResponse, threads_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::e8::SendChatMessageRequest)},
  { 7, -1, sizeof(::e8::SendChatMessageResponse)},
  { 13, -1, sizeof(::e8::GetChatMessageRequest)},
  { 20, -1, sizeof(::e8::GetChatMessageResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_SendChatMessageRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_SendChatMessageResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_GetChatMessageRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_GetChatMessageResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "service_chat_message.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\032service_chat_message.proto\022\002e8\032\020pagina"
      "tion.proto\032\022chat_message.proto\"S\n\026SendCh"
      "atMessageRequest\022\022\n\nchannel_id\030\001 \001(\003\022%\n\007"
      "message\030\002 \001(\0132\024.e8.ChatMessageEntry\"H\n\027S"
      "endChatMessageResponse\022-\n\016updated_thread"
      "\030\001 \001(\0132\025.e8.ChatMessageThread\"O\n\025GetChat"
      "MessageRequest\022\022\n\nchannel_id\030\001 \001(\003\022\"\n\npa"
      "gination\030\002 \001(\0132\016.e8.Pagination\"@\n\026GetCha"
      "tMessageResponse\022&\n\007threads\030\001 \003(\0132\025.e8.C"
      "hatMessageThread2\251\001\n\022ChatMessageService\022"
      "J\n\017SendChatMessage\022\032.e8.SendChatMessageR"
      "equest\032\033.e8.SendChatMessageResponse\022G\n\016G"
      "etChatMessage\022\031.e8.GetChatMessageRequest"
      "\032\032.e8.GetChatMessageResponseb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 556);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "service_chat_message.proto", &protobuf_RegisterTypes);
  ::protobuf_pagination_2eproto::AddDescriptors();
  ::protobuf_chat_5fmessage_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_service_5fchat_5fmessage_2eproto
namespace e8 {

// ===================================================================

void SendChatMessageRequest::InitAsDefaultInstance() {
  ::e8::_SendChatMessageRequest_default_instance_._instance.get_mutable()->message_ = const_cast< ::e8::ChatMessageEntry*>(
      ::e8::ChatMessageEntry::internal_default_instance());
}
void SendChatMessageRequest::clear_message() {
  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendChatMessageRequest::kChannelIdFieldNumber;
const int SendChatMessageRequest::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendChatMessageRequest::SendChatMessageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fchat_5fmessage_2eproto::scc_info_SendChatMessageRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.SendChatMessageRequest)
}
SendChatMessageRequest::SendChatMessageRequest(const SendChatMessageRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_message()) {
    message_ = new ::e8::ChatMessageEntry(*from.message_);
  } else {
    message_ = NULL;
  }
  channel_id_ = from.channel_id_;
  // @@protoc_insertion_point(copy_constructor:e8.SendChatMessageRequest)
}

void SendChatMessageRequest::SharedCtor() {
  ::memset(&message_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_id_) -
      reinterpret_cast<char*>(&message_)) + sizeof(channel_id_));
}

SendChatMessageRequest::~SendChatMessageRequest() {
  // @@protoc_insertion_point(destructor:e8.SendChatMessageRequest)
  SharedDtor();
}

void SendChatMessageRequest::SharedDtor() {
  if (this != internal_default_instance()) delete message_;
}

void SendChatMessageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SendChatMessageRequest::descriptor() {
  ::protobuf_service_5fchat_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fchat_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendChatMessageRequest& SendChatMessageRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fchat_5fmessage_2eproto::scc_info_SendChatMessageRequest.base);
  return *internal_default_instance();
}


void SendChatMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.SendChatMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
  channel_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool SendChatMessageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.SendChatMessageRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 channel_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &channel_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .e8.ChatMessageEntry message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.SendChatMessageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.SendChatMessageRequest)
  return false;
#undef DO_
}

void SendChatMessageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.SendChatMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->channel_id(), output);
  }

  // .e8.ChatMessageEntry message = 2;
  if (this->has_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.SendChatMessageRequest)
}

::google::protobuf::uint8* SendChatMessageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.SendChatMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->channel_id(), target);
  }

  // .e8.ChatMessageEntry message = 2;
  if (this->has_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_message(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.SendChatMessageRequest)
  return target;
}

size_t SendChatMessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.SendChatMessageRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .e8.ChatMessageEntry message = 2;
  if (this->has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *message_);
  }

  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->channel_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendChatMessageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.SendChatMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SendChatMessageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendChatMessageRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.SendChatMessageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.SendChatMessageRequest)
    MergeFrom(*source);
  }
}

void SendChatMessageRequest::MergeFrom(const SendChatMessageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.SendChatMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_message()) {
    mutable_message()->::e8::ChatMessageEntry::MergeFrom(from.message());
  }
  if (from.channel_id() != 0) {
    set_channel_id(from.channel_id());
  }
}

void SendChatMessageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.SendChatMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendChatMessageRequest::CopyFrom(const SendChatMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.SendChatMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendChatMessageRequest::IsInitialized() const {
  return true;
}

void SendChatMessageRequest::Swap(SendChatMessageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendChatMessageRequest::InternalSwap(SendChatMessageRequest* other) {
  using std::swap;
  swap(message_, other->message_);
  swap(channel_id_, other->channel_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SendChatMessageRequest::GetMetadata() const {
  protobuf_service_5fchat_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fchat_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SendChatMessageResponse::InitAsDefaultInstance() {
  ::e8::_SendChatMessageResponse_default_instance_._instance.get_mutable()->updated_thread_ = const_cast< ::e8::ChatMessageThread*>(
      ::e8::ChatMessageThread::internal_default_instance());
}
void SendChatMessageResponse::clear_updated_thread() {
  if (GetArenaNoVirtual() == NULL && updated_thread_ != NULL) {
    delete updated_thread_;
  }
  updated_thread_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendChatMessageResponse::kUpdatedThreadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendChatMessageResponse::SendChatMessageResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fchat_5fmessage_2eproto::scc_info_SendChatMessageResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.SendChatMessageResponse)
}
SendChatMessageResponse::SendChatMessageResponse(const SendChatMessageResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_updated_thread()) {
    updated_thread_ = new ::e8::ChatMessageThread(*from.updated_thread_);
  } else {
    updated_thread_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:e8.SendChatMessageResponse)
}

void SendChatMessageResponse::SharedCtor() {
  updated_thread_ = NULL;
}

SendChatMessageResponse::~SendChatMessageResponse() {
  // @@protoc_insertion_point(destructor:e8.SendChatMessageResponse)
  SharedDtor();
}

void SendChatMessageResponse::SharedDtor() {
  if (this != internal_default_instance()) delete updated_thread_;
}

void SendChatMessageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SendChatMessageResponse::descriptor() {
  ::protobuf_service_5fchat_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fchat_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendChatMessageResponse& SendChatMessageResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fchat_5fmessage_2eproto::scc_info_SendChatMessageResponse.base);
  return *internal_default_instance();
}


void SendChatMessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.SendChatMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && updated_thread_ != NULL) {
    delete updated_thread_;
  }
  updated_thread_ = NULL;
  _internal_metadata_.Clear();
}

bool SendChatMessageResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.SendChatMessageResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .e8.ChatMessageThread updated_thread = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_updated_thread()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.SendChatMessageResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.SendChatMessageResponse)
  return false;
#undef DO_
}

void SendChatMessageResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.SendChatMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .e8.ChatMessageThread updated_thread = 1;
  if (this->has_updated_thread()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_updated_thread(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.SendChatMessageResponse)
}

::google::protobuf::uint8* SendChatMessageResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.SendChatMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .e8.ChatMessageThread updated_thread = 1;
  if (this->has_updated_thread()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_updated_thread(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.SendChatMessageResponse)
  return target;
}

size_t SendChatMessageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.SendChatMessageResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .e8.ChatMessageThread updated_thread = 1;
  if (this->has_updated_thread()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *updated_thread_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendChatMessageResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.SendChatMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SendChatMessageResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendChatMessageResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.SendChatMessageResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.SendChatMessageResponse)
    MergeFrom(*source);
  }
}

void SendChatMessageResponse::MergeFrom(const SendChatMessageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.SendChatMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_updated_thread()) {
    mutable_updated_thread()->::e8::ChatMessageThread::MergeFrom(from.updated_thread());
  }
}

void SendChatMessageResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.SendChatMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendChatMessageResponse::CopyFrom(const SendChatMessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.SendChatMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendChatMessageResponse::IsInitialized() const {
  return true;
}

void SendChatMessageResponse::Swap(SendChatMessageResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendChatMessageResponse::InternalSwap(SendChatMessageResponse* other) {
  using std::swap;
  swap(updated_thread_, other->updated_thread_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SendChatMessageResponse::GetMetadata() const {
  protobuf_service_5fchat_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fchat_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetChatMessageRequest::InitAsDefaultInstance() {
  ::e8::_GetChatMessageRequest_default_instance_._instance.get_mutable()->pagination_ = const_cast< ::e8::Pagination*>(
      ::e8::Pagination::internal_default_instance());
}
void GetChatMessageRequest::clear_pagination() {
  if (GetArenaNoVirtual() == NULL && pagination_ != NULL) {
    delete pagination_;
  }
  pagination_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetChatMessageRequest::kChannelIdFieldNumber;
const int GetChatMessageRequest::kPaginationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetChatMessageRequest::GetChatMessageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fchat_5fmessage_2eproto::scc_info_GetChatMessageRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.GetChatMessageRequest)
}
GetChatMessageRequest::GetChatMessageRequest(const GetChatMessageRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pagination()) {
    pagination_ = new ::e8::Pagination(*from.pagination_);
  } else {
    pagination_ = NULL;
  }
  channel_id_ = from.channel_id_;
  // @@protoc_insertion_point(copy_constructor:e8.GetChatMessageRequest)
}

void GetChatMessageRequest::SharedCtor() {
  ::memset(&pagination_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_id_) -
      reinterpret_cast<char*>(&pagination_)) + sizeof(channel_id_));
}

GetChatMessageRequest::~GetChatMessageRequest() {
  // @@protoc_insertion_point(destructor:e8.GetChatMessageRequest)
  SharedDtor();
}

void GetChatMessageRequest::SharedDtor() {
  if (this != internal_default_instance()) delete pagination_;
}

void GetChatMessageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetChatMessageRequest::descriptor() {
  ::protobuf_service_5fchat_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fchat_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetChatMessageRequest& GetChatMessageRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fchat_5fmessage_2eproto::scc_info_GetChatMessageRequest.base);
  return *internal_default_instance();
}


void GetChatMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.GetChatMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pagination_ != NULL) {
    delete pagination_;
  }
  pagination_ = NULL;
  channel_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool GetChatMessageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.GetChatMessageRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 channel_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &channel_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .e8.Pagination pagination = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pagination()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.GetChatMessageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.GetChatMessageRequest)
  return false;
#undef DO_
}

void GetChatMessageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.GetChatMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->channel_id(), output);
  }

  // .e8.Pagination pagination = 2;
  if (this->has_pagination()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pagination(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.GetChatMessageRequest)
}

::google::protobuf::uint8* GetChatMessageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.GetChatMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->channel_id(), target);
  }

  // .e8.Pagination pagination = 2;
  if (this->has_pagination()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pagination(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.GetChatMessageRequest)
  return target;
}

size_t GetChatMessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.GetChatMessageRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .e8.Pagination pagination = 2;
  if (this->has_pagination()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pagination_);
  }

  // int64 channel_id = 1;
  if (this->channel_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->channel_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetChatMessageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.GetChatMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetChatMessageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetChatMessageRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.GetChatMessageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.GetChatMessageRequest)
    MergeFrom(*source);
  }
}

void GetChatMessageRequest::MergeFrom(const GetChatMessageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.GetChatMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pagination()) {
    mutable_pagination()->::e8::Pagination::MergeFrom(from.pagination());
  }
  if (from.channel_id() != 0) {
    set_channel_id(from.channel_id());
  }
}

void GetChatMessageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.GetChatMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetChatMessageRequest::CopyFrom(const GetChatMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.GetChatMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetChatMessageRequest::IsInitialized() const {
  return true;
}

void GetChatMessageRequest::Swap(GetChatMessageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetChatMessageRequest::InternalSwap(GetChatMessageRequest* other) {
  using std::swap;
  swap(pagination_, other->pagination_);
  swap(channel_id_, other->channel_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetChatMessageRequest::GetMetadata() const {
  protobuf_service_5fchat_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fchat_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetChatMessageResponse::InitAsDefaultInstance() {
}
void GetChatMessageResponse::clear_threads() {
  threads_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetChatMessageResponse::kThreadsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetChatMessageResponse::GetChatMessageResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fchat_5fmessage_2eproto::scc_info_GetChatMessageResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.GetChatMessageResponse)
}
GetChatMessageResponse::GetChatMessageResponse(const GetChatMessageResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      threads_(from.threads_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:e8.GetChatMessageResponse)
}

void GetChatMessageResponse::SharedCtor() {
}

GetChatMessageResponse::~GetChatMessageResponse() {
  // @@protoc_insertion_point(destructor:e8.GetChatMessageResponse)
  SharedDtor();
}

void GetChatMessageResponse::SharedDtor() {
}

void GetChatMessageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetChatMessageResponse::descriptor() {
  ::protobuf_service_5fchat_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fchat_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetChatMessageResponse& GetChatMessageResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fchat_5fmessage_2eproto::scc_info_GetChatMessageResponse.base);
  return *internal_default_instance();
}


void GetChatMessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.GetChatMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  threads_.Clear();
  _internal_metadata_.Clear();
}

bool GetChatMessageResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.GetChatMessageResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .e8.ChatMessageThread threads = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_threads()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.GetChatMessageResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.GetChatMessageResponse)
  return false;
#undef DO_
}

void GetChatMessageResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.GetChatMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .e8.ChatMessageThread threads = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->threads_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->threads(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.GetChatMessageResponse)
}

::google::protobuf::uint8* GetChatMessageResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.GetChatMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .e8.ChatMessageThread threads = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->threads_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->threads(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.GetChatMessageResponse)
  return target;
}

size_t GetChatMessageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.GetChatMessageResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .e8.ChatMessageThread threads = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->threads_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->threads(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetChatMessageResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.GetChatMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetChatMessageResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetChatMessageResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.GetChatMessageResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.GetChatMessageResponse)
    MergeFrom(*source);
  }
}

void GetChatMessageResponse::MergeFrom(const GetChatMessageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.GetChatMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  threads_.MergeFrom(from.threads_);
}

void GetChatMessageResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.GetChatMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetChatMessageResponse::CopyFrom(const GetChatMessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.GetChatMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetChatMessageResponse::IsInitialized() const {
  return true;
}

void GetChatMessageResponse::Swap(GetChatMessageResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetChatMessageResponse::InternalSwap(GetChatMessageResponse* other) {
  using std::swap;
  CastToBase(&threads_)->InternalSwap(CastToBase(&other->threads_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetChatMessageResponse::GetMetadata() const {
  protobuf_service_5fchat_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fchat_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace e8
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::SendChatMessageRequest* Arena::CreateMaybeMessage< ::e8::SendChatMessageRequest >(Arena* arena) {
  return Arena::CreateInternal< ::e8::SendChatMessageRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::SendChatMessageResponse* Arena::CreateMaybeMessage< ::e8::SendChatMessageResponse >(Arena* arena) {
  return Arena::CreateInternal< ::e8::SendChatMessageResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::GetChatMessageRequest* Arena::CreateMaybeMessage< ::e8::GetChatMessageRequest >(Arena* arena) {
  return Arena::CreateInternal< ::e8::GetChatMessageRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::GetChatMessageResponse* Arena::CreateMaybeMessage< ::e8::GetChatMessageResponse >(Arena* arena) {
  return Arena::CreateInternal< ::e8::GetChatMessageResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
