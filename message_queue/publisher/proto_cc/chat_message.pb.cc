// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chat_message.proto

#include "chat_message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_chat_5fmessage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chat_5fmessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ChatMessageEntry;
}  // namespace protobuf_chat_5fmessage_2eproto
namespace protobuf_file_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_file_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FileTokenAccess;
}  // namespace protobuf_file_2eproto
namespace e8 {
class ChatMessageEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChatMessageEntry>
      _instance;
} _ChatMessageEntry_default_instance_;
class ChatMessageThreadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChatMessageThread>
      _instance;
} _ChatMessageThread_default_instance_;
}  // namespace e8
namespace protobuf_chat_5fmessage_2eproto {
static void InitDefaultsChatMessageEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_ChatMessageEntry_default_instance_;
    new (ptr) ::e8::ChatMessageEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::ChatMessageEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ChatMessageEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsChatMessageEntry}, {
      &protobuf_file_2eproto::scc_info_FileTokenAccess.base,}};

static void InitDefaultsChatMessageThread() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::e8::_ChatMessageThread_default_instance_;
    new (ptr) ::e8::ChatMessageThread();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::e8::ChatMessageThread::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ChatMessageThread =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsChatMessageThread}, {
      &protobuf_chat_5fmessage_2eproto::scc_info_ChatMessageEntry.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ChatMessageEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChatMessageThread.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::ChatMessageEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::ChatMessageEntry, thread_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::ChatMessageEntry, message_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::ChatMessageEntry, sender_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::ChatMessageEntry, messages_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::ChatMessageEntry, media_file_accesses_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::ChatMessageEntry, created_at_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::ChatMessageThread, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::ChatMessageThread, thread_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::ChatMessageThread, thread_title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::ChatMessageThread, created_at_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::e8::ChatMessageThread, messages_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::e8::ChatMessageEntry)},
  { 11, -1, sizeof(::e8::ChatMessageThread)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_ChatMessageEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::e8::_ChatMessageThread_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "chat_message.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022chat_message.proto\022\002e8\032\nfile.proto\"\244\001\n"
      "\020ChatMessageEntry\022\021\n\tthread_id\030\001 \001(\003\022\022\n\n"
      "message_id\030\002 \001(\003\022\021\n\tsender_id\030\003 \001(\003\022\020\n\010m"
      "essages\030\004 \003(\t\0220\n\023media_file_accesses\030\005 \003"
      "(\0132\023.e8.FileTokenAccess\022\022\n\ncreated_at\030\006 "
      "\001(\003\"x\n\021ChatMessageThread\022\021\n\tthread_id\030\001 "
      "\001(\003\022\024\n\014thread_title\030\002 \001(\t\022\022\n\ncreated_at\030"
      "\003 \001(\003\022&\n\010messages\030\004 \003(\0132\024.e8.ChatMessage"
      "Entryb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 333);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "chat_message.proto", &protobuf_RegisterTypes);
  ::protobuf_file_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_chat_5fmessage_2eproto
namespace e8 {

// ===================================================================

void ChatMessageEntry::InitAsDefaultInstance() {
}
void ChatMessageEntry::clear_media_file_accesses() {
  media_file_accesses_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatMessageEntry::kThreadIdFieldNumber;
const int ChatMessageEntry::kMessageIdFieldNumber;
const int ChatMessageEntry::kSenderIdFieldNumber;
const int ChatMessageEntry::kMessagesFieldNumber;
const int ChatMessageEntry::kMediaFileAccessesFieldNumber;
const int ChatMessageEntry::kCreatedAtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatMessageEntry::ChatMessageEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chat_5fmessage_2eproto::scc_info_ChatMessageEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.ChatMessageEntry)
}
ChatMessageEntry::ChatMessageEntry(const ChatMessageEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      messages_(from.messages_),
      media_file_accesses_(from.media_file_accesses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&thread_id_, &from.thread_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&created_at_) -
    reinterpret_cast<char*>(&thread_id_)) + sizeof(created_at_));
  // @@protoc_insertion_point(copy_constructor:e8.ChatMessageEntry)
}

void ChatMessageEntry::SharedCtor() {
  ::memset(&thread_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&created_at_) -
      reinterpret_cast<char*>(&thread_id_)) + sizeof(created_at_));
}

ChatMessageEntry::~ChatMessageEntry() {
  // @@protoc_insertion_point(destructor:e8.ChatMessageEntry)
  SharedDtor();
}

void ChatMessageEntry::SharedDtor() {
}

void ChatMessageEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ChatMessageEntry::descriptor() {
  ::protobuf_chat_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatMessageEntry& ChatMessageEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chat_5fmessage_2eproto::scc_info_ChatMessageEntry.base);
  return *internal_default_instance();
}


void ChatMessageEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.ChatMessageEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  messages_.Clear();
  media_file_accesses_.Clear();
  ::memset(&thread_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&created_at_) -
      reinterpret_cast<char*>(&thread_id_)) + sizeof(created_at_));
  _internal_metadata_.Clear();
}

bool ChatMessageEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.ChatMessageEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 thread_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &thread_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 message_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &message_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 sender_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &sender_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string messages = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_messages()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->messages(this->messages_size() - 1).data(),
            static_cast<int>(this->messages(this->messages_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "e8.ChatMessageEntry.messages"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .e8.FileTokenAccess media_file_accesses = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_media_file_accesses()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 created_at = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &created_at_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.ChatMessageEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.ChatMessageEntry)
  return false;
#undef DO_
}

void ChatMessageEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.ChatMessageEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 thread_id = 1;
  if (this->thread_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->thread_id(), output);
  }

  // int64 message_id = 2;
  if (this->message_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->message_id(), output);
  }

  // int64 sender_id = 3;
  if (this->sender_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->sender_id(), output);
  }

  // repeated string messages = 4;
  for (int i = 0, n = this->messages_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->messages(i).data(), static_cast<int>(this->messages(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "e8.ChatMessageEntry.messages");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->messages(i), output);
  }

  // repeated .e8.FileTokenAccess media_file_accesses = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->media_file_accesses_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->media_file_accesses(static_cast<int>(i)),
      output);
  }

  // int64 created_at = 6;
  if (this->created_at() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->created_at(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.ChatMessageEntry)
}

::google::protobuf::uint8* ChatMessageEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.ChatMessageEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 thread_id = 1;
  if (this->thread_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->thread_id(), target);
  }

  // int64 message_id = 2;
  if (this->message_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->message_id(), target);
  }

  // int64 sender_id = 3;
  if (this->sender_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->sender_id(), target);
  }

  // repeated string messages = 4;
  for (int i = 0, n = this->messages_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->messages(i).data(), static_cast<int>(this->messages(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "e8.ChatMessageEntry.messages");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->messages(i), target);
  }

  // repeated .e8.FileTokenAccess media_file_accesses = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->media_file_accesses_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->media_file_accesses(static_cast<int>(i)), deterministic, target);
  }

  // int64 created_at = 6;
  if (this->created_at() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->created_at(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.ChatMessageEntry)
  return target;
}

size_t ChatMessageEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.ChatMessageEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string messages = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->messages_size());
  for (int i = 0, n = this->messages_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->messages(i));
  }

  // repeated .e8.FileTokenAccess media_file_accesses = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->media_file_accesses_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->media_file_accesses(static_cast<int>(i)));
    }
  }

  // int64 thread_id = 1;
  if (this->thread_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->thread_id());
  }

  // int64 message_id = 2;
  if (this->message_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->message_id());
  }

  // int64 sender_id = 3;
  if (this->sender_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->sender_id());
  }

  // int64 created_at = 6;
  if (this->created_at() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->created_at());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChatMessageEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.ChatMessageEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatMessageEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatMessageEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.ChatMessageEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.ChatMessageEntry)
    MergeFrom(*source);
  }
}

void ChatMessageEntry::MergeFrom(const ChatMessageEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.ChatMessageEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  messages_.MergeFrom(from.messages_);
  media_file_accesses_.MergeFrom(from.media_file_accesses_);
  if (from.thread_id() != 0) {
    set_thread_id(from.thread_id());
  }
  if (from.message_id() != 0) {
    set_message_id(from.message_id());
  }
  if (from.sender_id() != 0) {
    set_sender_id(from.sender_id());
  }
  if (from.created_at() != 0) {
    set_created_at(from.created_at());
  }
}

void ChatMessageEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.ChatMessageEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatMessageEntry::CopyFrom(const ChatMessageEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.ChatMessageEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatMessageEntry::IsInitialized() const {
  return true;
}

void ChatMessageEntry::Swap(ChatMessageEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatMessageEntry::InternalSwap(ChatMessageEntry* other) {
  using std::swap;
  messages_.InternalSwap(CastToBase(&other->messages_));
  CastToBase(&media_file_accesses_)->InternalSwap(CastToBase(&other->media_file_accesses_));
  swap(thread_id_, other->thread_id_);
  swap(message_id_, other->message_id_);
  swap(sender_id_, other->sender_id_);
  swap(created_at_, other->created_at_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ChatMessageEntry::GetMetadata() const {
  protobuf_chat_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChatMessageThread::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatMessageThread::kThreadIdFieldNumber;
const int ChatMessageThread::kThreadTitleFieldNumber;
const int ChatMessageThread::kCreatedAtFieldNumber;
const int ChatMessageThread::kMessagesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatMessageThread::ChatMessageThread()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chat_5fmessage_2eproto::scc_info_ChatMessageThread.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:e8.ChatMessageThread)
}
ChatMessageThread::ChatMessageThread(const ChatMessageThread& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      messages_(from.messages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  thread_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.thread_title().size() > 0) {
    thread_title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thread_title_);
  }
  ::memcpy(&thread_id_, &from.thread_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&created_at_) -
    reinterpret_cast<char*>(&thread_id_)) + sizeof(created_at_));
  // @@protoc_insertion_point(copy_constructor:e8.ChatMessageThread)
}

void ChatMessageThread::SharedCtor() {
  thread_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&thread_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&created_at_) -
      reinterpret_cast<char*>(&thread_id_)) + sizeof(created_at_));
}

ChatMessageThread::~ChatMessageThread() {
  // @@protoc_insertion_point(destructor:e8.ChatMessageThread)
  SharedDtor();
}

void ChatMessageThread::SharedDtor() {
  thread_title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChatMessageThread::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ChatMessageThread::descriptor() {
  ::protobuf_chat_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatMessageThread& ChatMessageThread::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chat_5fmessage_2eproto::scc_info_ChatMessageThread.base);
  return *internal_default_instance();
}


void ChatMessageThread::Clear() {
// @@protoc_insertion_point(message_clear_start:e8.ChatMessageThread)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  messages_.Clear();
  thread_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&thread_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&created_at_) -
      reinterpret_cast<char*>(&thread_id_)) + sizeof(created_at_));
  _internal_metadata_.Clear();
}

bool ChatMessageThread::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:e8.ChatMessageThread)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 thread_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &thread_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string thread_title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_thread_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->thread_title().data(), static_cast<int>(this->thread_title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "e8.ChatMessageThread.thread_title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 created_at = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &created_at_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .e8.ChatMessageEntry messages = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_messages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:e8.ChatMessageThread)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:e8.ChatMessageThread)
  return false;
#undef DO_
}

void ChatMessageThread::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:e8.ChatMessageThread)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 thread_id = 1;
  if (this->thread_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->thread_id(), output);
  }

  // string thread_title = 2;
  if (this->thread_title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thread_title().data(), static_cast<int>(this->thread_title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "e8.ChatMessageThread.thread_title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->thread_title(), output);
  }

  // int64 created_at = 3;
  if (this->created_at() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->created_at(), output);
  }

  // repeated .e8.ChatMessageEntry messages = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->messages_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->messages(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:e8.ChatMessageThread)
}

::google::protobuf::uint8* ChatMessageThread::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:e8.ChatMessageThread)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 thread_id = 1;
  if (this->thread_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->thread_id(), target);
  }

  // string thread_title = 2;
  if (this->thread_title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thread_title().data(), static_cast<int>(this->thread_title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "e8.ChatMessageThread.thread_title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->thread_title(), target);
  }

  // int64 created_at = 3;
  if (this->created_at() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->created_at(), target);
  }

  // repeated .e8.ChatMessageEntry messages = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->messages_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->messages(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:e8.ChatMessageThread)
  return target;
}

size_t ChatMessageThread::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:e8.ChatMessageThread)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .e8.ChatMessageEntry messages = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->messages_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->messages(static_cast<int>(i)));
    }
  }

  // string thread_title = 2;
  if (this->thread_title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->thread_title());
  }

  // int64 thread_id = 1;
  if (this->thread_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->thread_id());
  }

  // int64 created_at = 3;
  if (this->created_at() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->created_at());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChatMessageThread::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:e8.ChatMessageThread)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatMessageThread* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatMessageThread>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:e8.ChatMessageThread)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:e8.ChatMessageThread)
    MergeFrom(*source);
  }
}

void ChatMessageThread::MergeFrom(const ChatMessageThread& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:e8.ChatMessageThread)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  messages_.MergeFrom(from.messages_);
  if (from.thread_title().size() > 0) {

    thread_title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thread_title_);
  }
  if (from.thread_id() != 0) {
    set_thread_id(from.thread_id());
  }
  if (from.created_at() != 0) {
    set_created_at(from.created_at());
  }
}

void ChatMessageThread::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:e8.ChatMessageThread)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatMessageThread::CopyFrom(const ChatMessageThread& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:e8.ChatMessageThread)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatMessageThread::IsInitialized() const {
  return true;
}

void ChatMessageThread::Swap(ChatMessageThread* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatMessageThread::InternalSwap(ChatMessageThread* other) {
  using std::swap;
  CastToBase(&messages_)->InternalSwap(CastToBase(&other->messages_));
  thread_title_.Swap(&other->thread_title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(thread_id_, other->thread_id_);
  swap(created_at_, other->created_at_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ChatMessageThread::GetMetadata() const {
  protobuf_chat_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace e8
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::ChatMessageEntry* Arena::CreateMaybeMessage< ::e8::ChatMessageEntry >(Arena* arena) {
  return Arena::CreateInternal< ::e8::ChatMessageEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::e8::ChatMessageThread* Arena::CreateMaybeMessage< ::e8::ChatMessageThread >(Arena* arena) {
  return Arena::CreateInternal< ::e8::ChatMessageThread >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
