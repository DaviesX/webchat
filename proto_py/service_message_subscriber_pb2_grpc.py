# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import service_message_subscriber_pb2 as service__message__subscriber__pb2


class MessageSubscriberServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SubscribeRealTimeMessageQueue = channel.unary_stream(
        '/e8.MessageSubscriberService/SubscribeRealTimeMessageQueue',
        request_serializer=service__message__subscriber__pb2.SubscribeRealTimeMessageQueueRequest.SerializeToString,
        response_deserializer=service__message__subscriber__pb2.SubscribeRealTimeMessageQueueResponse.FromString,
        )


class MessageSubscriberServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def SubscribeRealTimeMessageQueue(self, request, context):
    """Subscribe to the real-time message queue. Identity is required.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MessageSubscriberServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SubscribeRealTimeMessageQueue': grpc.unary_stream_rpc_method_handler(
          servicer.SubscribeRealTimeMessageQueue,
          request_deserializer=service__message__subscriber__pb2.SubscribeRealTimeMessageQueueRequest.FromString,
          response_serializer=service__message__subscriber__pb2.SubscribeRealTimeMessageQueueResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'e8.MessageSubscriberService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
