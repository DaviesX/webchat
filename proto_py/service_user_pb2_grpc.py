# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import service_user_pb2 as service__user__pb2


class UserServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Register = channel.unary_unary(
        '/e8.UserService/Register',
        request_serializer=service__user__pb2.RegistrationRequest.SerializeToString,
        response_deserializer=service__user__pb2.RegistrationResponse.FromString,
        )
    self.Authorize = channel.unary_unary(
        '/e8.UserService/Authorize',
        request_serializer=service__user__pb2.AuthorizationRequest.SerializeToString,
        response_deserializer=service__user__pb2.AuthorizationResponse.FromString,
        )
    self.GetPublicProfile = channel.unary_unary(
        '/e8.UserService/GetPublicProfile',
        request_serializer=service__user__pb2.GetPublicProfileRequest.SerializeToString,
        response_deserializer=service__user__pb2.GetPublicProfileResponse.FromString,
        )
    self.UpdatePublicProfile = channel.unary_unary(
        '/e8.UserService/UpdatePublicProfile',
        request_serializer=service__user__pb2.UpdatePublicProfileRequest.SerializeToString,
        response_deserializer=service__user__pb2.UpdatePublicProfileResponse.FromString,
        )
    self.Search = channel.unary_unary(
        '/e8.UserService/Search',
        request_serializer=service__user__pb2.SearchUserRequest.SerializeToString,
        response_deserializer=service__user__pb2.SearchUserResponse.FromString,
        )
    self.PrepareNewAvatar = channel.unary_unary(
        '/e8.UserService/PrepareNewAvatar',
        request_serializer=service__user__pb2.PrepareNewAvatarRequest.SerializeToString,
        response_deserializer=service__user__pb2.PrepareNewAvatarResponse.FromString,
        )


class UserServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Register(self, request, context):
    """*
    Register a user to the system.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Authorize(self, request, context):
    """
    Verify and obtain a signed token. 
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetPublicProfile(self, request, context):
    """*
    Get a user's profile
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdatePublicProfile(self, request, context):
    """*
    Update a user's profile
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Search(self, request, context):
    """
    Search users.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PrepareNewAvatar(self, request, context):
    """*
    Prepare for a new avatar upload for the logged-in user.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_UserServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Register': grpc.unary_unary_rpc_method_handler(
          servicer.Register,
          request_deserializer=service__user__pb2.RegistrationRequest.FromString,
          response_serializer=service__user__pb2.RegistrationResponse.SerializeToString,
      ),
      'Authorize': grpc.unary_unary_rpc_method_handler(
          servicer.Authorize,
          request_deserializer=service__user__pb2.AuthorizationRequest.FromString,
          response_serializer=service__user__pb2.AuthorizationResponse.SerializeToString,
      ),
      'GetPublicProfile': grpc.unary_unary_rpc_method_handler(
          servicer.GetPublicProfile,
          request_deserializer=service__user__pb2.GetPublicProfileRequest.FromString,
          response_serializer=service__user__pb2.GetPublicProfileResponse.SerializeToString,
      ),
      'UpdatePublicProfile': grpc.unary_unary_rpc_method_handler(
          servicer.UpdatePublicProfile,
          request_deserializer=service__user__pb2.UpdatePublicProfileRequest.FromString,
          response_serializer=service__user__pb2.UpdatePublicProfileResponse.SerializeToString,
      ),
      'Search': grpc.unary_unary_rpc_method_handler(
          servicer.Search,
          request_deserializer=service__user__pb2.SearchUserRequest.FromString,
          response_serializer=service__user__pb2.SearchUserResponse.SerializeToString,
      ),
      'PrepareNewAvatar': grpc.unary_unary_rpc_method_handler(
          servicer.PrepareNewAvatar,
          request_deserializer=service__user__pb2.PrepareNewAvatarRequest.FromString,
          response_serializer=service__user__pb2.PrepareNewAvatarResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'e8.UserService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
