# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import service_message_queue_pb2 as service__message__queue__pb2


class MessageQueueServiceStub(object):
  """A user oriented message queue.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.EnqueueMessage = channel.unary_unary(
        '/e8.MessageQueueService/EnqueueMessage',
        request_serializer=service__message__queue__pb2.EnqueueMessageRequest.SerializeToString,
        response_deserializer=service__message__queue__pb2.EnqueueMessageResponse.FromString,
        )
    self.DequeueMessage = channel.unary_stream(
        '/e8.MessageQueueService/DequeueMessage',
        request_serializer=service__message__queue__pb2.DequeueMessageRequest.SerializeToString,
        response_deserializer=service__message__queue__pb2.DequeueMessageResponse.FromString,
        )


class MessageQueueServiceServicer(object):
  """A user oriented message queue.
  """

  def EnqueueMessage(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DequeueMessage(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MessageQueueServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'EnqueueMessage': grpc.unary_unary_rpc_method_handler(
          servicer.EnqueueMessage,
          request_deserializer=service__message__queue__pb2.EnqueueMessageRequest.FromString,
          response_serializer=service__message__queue__pb2.EnqueueMessageResponse.SerializeToString,
      ),
      'DequeueMessage': grpc.unary_stream_rpc_method_handler(
          servicer.DequeueMessage,
          request_deserializer=service__message__queue__pb2.DequeueMessageRequest.FromString,
          response_serializer=service__message__queue__pb2.DequeueMessageResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'e8.MessageQueueService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
